%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1504.i110.002.P.m007.c20.science icons flat.eps
%%Creator: Adobe Illustrator(R) 15.1
%%For: Юыќур
%%CreationDate: 4/10/2015
%%BoundingBox: 0 0 389 387
%%HiResBoundingBox: 0 0 388.3423 386.3653
%%CropBox: 0 0 388.3423 386.3653
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.1.0 x39 R agm 4.5189 ct 5.1875%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="яЛП" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">1504.i110.002.P.m007.c20.science icons flat</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2015-04-10T16:29:03+04:00</xmp:MetadataDate>
         <xmp:ModifyDate>2015-04-10T16:29:03+04:00</xmp:ModifyDate>
         <xmp:CreateDate>2015-04-10T16:29:02+04:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS5.1</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJ&#xA;AAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1IUCAgAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAz&#xA;ZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwA&#xA;AAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAA&#xA;A9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RS&#xA;QwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1Q&#xA;YWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAS&#xA;c1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAA&#xA;AAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNj&#xA;AAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5p&#xA;ZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBp&#xA;biBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4g&#xA;SUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDP&#xA;FAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAA&#xA;AAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMA&#xA;KAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCy&#xA;ALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIB&#xA;WQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4&#xA;AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oD&#xA;ZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATT&#xA;BOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowG&#xA;nQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiq&#xA;CL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsL&#xA;Igs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3e&#xA;DfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPUR&#xA;ExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSL&#xA;FK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUY&#xA;ihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzM&#xA;HPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUh&#xA;oSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3&#xA;JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDks&#xA;biyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJj&#xA;Mpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5&#xA;BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/i&#xA;QCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVH&#xA;e0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9J&#xA;T5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX&#xA;4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2Cq&#xA;YPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFq&#xA;SGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQU&#xA;dHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+&#xA;wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZ&#xA;if6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSV&#xA;X5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFH&#xA;obaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1Erbiu&#xA;La6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsu&#xA;u6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJ&#xA;Osm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc&#xA;1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3m&#xA;lucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe&#xA;9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///+4ADkFkb2JlAGTAAAAAAf/bAIQA&#xA;BgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8f&#xA;Hx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f&#xA;Hx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwERAAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQF&#xA;AwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMB&#xA;AgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPBUtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdU&#xA;ZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eX&#xA;p7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUE&#xA;BQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEyobHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PS&#xA;NeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG&#xA;1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/a&#xA;AAwDAQACEQMRAD8A9QakvLT7gcQ5EbFUJoCVFRv8xhHNqzRBgQe5455jmvJXt2u4Ft5eLD01cSCl&#xA;evLiuZmLk8rqKvY29F8xxy2nl+y+oWqTPEY40iZ/TAQoa/EQ/wDKMxgTZd7qscRij0r9TCfLMaz+&#xA;fIFnQf30rlOoDpGzjcU6MMyJn0Op0cQdQAe8/cyLzy93Hd3EcNqjWslqzTXBkAZW4uPscTXoO+U4&#xA;ydnN7RjESJ60oflPFGRqMxUeqvpIG/yTyJH3gZPUdEdjxHqPXZ6FmM7x2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KpT5v1a50bynrWr2qo9zpthdXcCSgmMyQQtIocKVJUld6EYJGgSyiLICE/L3zFe+ZPJWka&#xA;5fJHHd6hAJpkgDLGGJI+EMztTbuTggbFrONGk8ubuC2QPM3FSaA0J3+gHJgW05MsYC5IXSte0rVT&#xA;L9QmM3oECU8HQAmtPtqtenbDKBHNhh1EMl8JukfkW92KuxV2KuxVjfmf8wfLPlwmK9uDLeUr9TgA&#xA;eX/ZbhV/2RGXY8Ep8nB1XaGLDtI+ruHNgV5+flwzlbHRl4/smWUsx/2KqKfecyhou8upl2+b9MPt&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:InstanceID>xmp.iid:16B277EC7CDFE41187D2DF92A4229F43</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:16B277EC7CDFE41187D2DF92A4229F43</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:ebfa518a-515c-4b69-89e1-3a561ed2eeb9</stRef:instanceID>
            <stRef:documentID>xmp.did:a3151c59-50e8-3148-9de3-ed8907f7754a</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:877234a0-2c46-3949-ad59-261e819cbc77</stEvt:instanceID>
                  <stEvt:when>2014-05-04T11:44:48+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:a3151c59-50e8-3148-9de3-ed8907f7754a</stEvt:instanceID>
                  <stEvt:when>2015-04-10T16:22:51+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:16B277EC7CDFE41187D2DF92A4229F43</stEvt:instanceID>
                  <stEvt:when>2015-04-10T16:29:03+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>аббаПаПаА аОаБбаАаЗбаОаВ аПаО баМаОаЛбаАаНаИб</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 11.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -386.365 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 386.365 li
388.342 386.365 li
388.342 0 li
cp
clp
[1 0 0 1 0 0 ]ct
24.332 2.60841 mo
24.332 64.0767 li
24.332 67.6919 21.3999 70.624 17.7842 70.624 cv
17.6524 70.624 li
14.0372 70.624 11.1123 67.6919 11.1123 64.0767 cv
11.1123 2.60841 li
24.332 2.60841 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.619608 .909804 .87451 rgb
f
26.2421 1.29301 mo
26.2421 1.3149 li
26.2421 2.02836 25.6616 2.60841 24.9487 2.60841 cv
10.4878 2.60841 li
9.77445 2.60841 9.1943 2.02836 9.1943 1.3149 cv
9.1943 1.29301 li
9.1943 .580054 9.77445 0 10.4878 0 cv
24.9487 0 li
25.6616 0 26.2421 .580054 26.2421 1.29301 cv
f
17.7842 70.624 mo
17.7182 70.624 li
17.7182 2.60841 li
24.332 2.60841 li
24.332 64.0767 li
24.332 67.6919 21.3999 70.624 17.7842 70.624 cv
.341176 .721569 .713725 rgb
f
24.9487 2.60841 mo
24.332 2.60841 li
17.7182 2.60841 li
17.7182 0 li
24.9487 0 li
25.6616 0 26.2421 .580054 26.2421 1.29301 cv
26.2421 1.3149 li
26.2421 2.02836 25.6616 2.60841 24.9487 2.60841 cv
f
45.188 2.60841 mo
45.188 64.0767 li
45.188 67.6919 42.2559 70.624 38.6407 70.624 cv
38.5083 70.624 li
34.893 70.624 31.9687 67.6919 31.9687 64.0767 cv
31.9687 2.60841 li
45.188 2.60841 li
.619608 .909804 .87451 rgb
f
47.0986 1.29301 mo
47.0986 1.3149 li
47.0986 2.02836 46.5176 2.60841 45.8052 2.60841 cv
31.3438 2.60841 li
30.6308 2.60841 30.0503 2.02836 30.0503 1.3149 cv
30.0503 1.29301 li
30.0503 .580054 30.6308 0 31.3438 0 cv
45.8052 0 li
46.5176 0 47.0986 .580054 47.0986 1.29301 cv
f
38.6407 70.624 mo
38.5742 70.624 li
38.5742 2.60841 li
45.188 2.60841 li
45.188 64.0767 li
45.188 67.6919 42.2559 70.624 38.6407 70.624 cv
.341176 .721569 .713725 rgb
f
45.8052 2.60841 mo
45.188 2.60841 li
38.5742 2.60841 li
38.5742 0 li
45.8052 0 li
46.5176 0 47.0986 .580054 47.0986 1.29301 cv
47.0986 1.3149 li
47.0986 2.02836 46.5176 2.60841 45.8052 2.60841 cv
f
66.0444 2.60841 mo
66.0444 64.0767 li
66.0444 67.6919 63.1123 70.624 59.497 70.624 cv
59.3642 70.624 li
55.7495 70.624 52.8247 67.6919 52.8247 64.0767 cv
52.8247 2.60841 li
66.0444 2.60841 li
.619608 .909804 .87451 rgb
f
67.9551 1.29301 mo
67.9551 1.3149 li
67.9551 2.02836 67.3741 2.60841 66.6616 2.60841 cv
52.1997 2.60841 li
51.4873 2.60841 50.9068 2.02836 50.9068 1.3149 cv
50.9068 1.29301 li
50.9068 .580054 51.4873 0 52.1997 0 cv
66.6616 0 li
67.3741 0 67.9551 .580054 67.9551 1.29301 cv
f
59.497 70.624 mo
59.4307 70.624 li
59.4307 2.60841 li
66.0444 2.60841 li
66.0444 64.0767 li
66.0444 67.6919 63.1123 70.624 59.497 70.624 cv
.341176 .721569 .713725 rgb
f
66.6616 2.60841 mo
66.0444 2.60841 li
59.4307 2.60841 li
59.4307 0 li
66.6616 0 li
67.3741 0 67.9551 .580054 67.9551 1.29301 cv
67.9551 1.3149 li
67.9551 2.02836 67.3741 2.60841 66.6616 2.60841 cv
f
16.2451 7.68799 mo
11.4043 7.68799 li
11.4043 6.95361 li
16.2451 6.95361 li
16.2451 7.68799 li
cp
.258824 .129412 .0431373 rgb
f
16.2451 13.7231 mo
11.4043 13.7231 li
11.4043 12.9888 li
16.2451 12.9888 li
16.2451 13.7231 li
cp
f
16.2451 19.7583 mo
11.4043 19.7583 li
11.4043 19.0239 li
16.2451 19.0239 li
16.2451 19.7583 li
cp
f
16.2451 25.7935 mo
11.4043 25.7935 li
11.4043 25.0591 li
16.2451 25.0591 li
16.2451 25.7935 li
cp
f
16.2451 31.8286 mo
11.4043 31.8286 li
11.4043 31.0942 li
16.2451 31.0942 li
16.2451 31.8286 li
cp
f
16.2451 37.8638 mo
11.4043 37.8638 li
11.4043 37.1294 li
16.2451 37.1294 li
16.2451 37.8638 li
cp
f
16.2451 43.8989 mo
11.4043 43.8989 li
11.4043 43.1646 li
16.2451 43.1646 li
16.2451 43.8989 li
cp
f
16.2451 49.9341 mo
11.4043 49.9341 li
11.4043 49.1997 li
16.2451 49.1997 li
16.2451 49.9341 li
cp
f
16.2451 55.9692 mo
11.4043 55.9692 li
11.4043 55.2349 li
16.2451 55.2349 li
16.2451 55.9692 li
cp
f
37.1011 7.68799 mo
32.2603 7.68799 li
32.2603 6.95361 li
37.1011 6.95361 li
37.1011 7.68799 li
cp
f
37.1011 13.7231 mo
32.2603 13.7231 li
32.2603 12.9888 li
37.1011 12.9888 li
37.1011 13.7231 li
cp
f
37.1011 19.7583 mo
32.2603 19.7583 li
32.2603 19.0239 li
37.1011 19.0239 li
37.1011 19.7583 li
cp
f
37.1011 25.7935 mo
32.2603 25.7935 li
32.2603 25.0591 li
37.1011 25.0591 li
37.1011 25.7935 li
cp
f
37.1011 31.8286 mo
32.2603 31.8286 li
32.2603 31.0942 li
37.1011 31.0942 li
37.1011 31.8286 li
cp
f
37.1011 37.8638 mo
32.2603 37.8638 li
32.2603 37.1294 li
37.1011 37.1294 li
37.1011 37.8638 li
cp
f
37.1011 43.8989 mo
32.2603 43.8989 li
32.2603 43.1646 li
37.1011 43.1646 li
37.1011 43.8989 li
cp
f
37.1011 49.9341 mo
32.2603 49.9341 li
32.2603 49.1997 li
37.1011 49.1997 li
37.1011 49.9341 li
cp
f
37.1011 55.9692 mo
32.2603 55.9692 li
32.2603 55.2349 li
37.1011 55.2349 li
37.1011 55.9692 li
cp
f
57.9575 7.68799 mo
53.1167 7.68799 li
53.1167 6.95361 li
57.9575 6.95361 li
57.9575 7.68799 li
cp
f
57.9575 13.7231 mo
53.1167 13.7231 li
53.1167 12.9888 li
57.9575 12.9888 li
57.9575 13.7231 li
cp
f
57.9575 19.7583 mo
53.1167 19.7583 li
53.1167 19.0239 li
57.9575 19.0239 li
57.9575 19.7583 li
cp
f
57.9575 25.7935 mo
53.1167 25.7935 li
53.1167 25.0591 li
57.9575 25.0591 li
57.9575 25.7935 li
cp
f
57.9575 31.8286 mo
53.1167 31.8286 li
53.1167 31.0942 li
57.9575 31.0942 li
57.9575 31.8286 li
cp
f
57.9575 37.8638 mo
53.1167 37.8638 li
53.1167 37.1294 li
57.9575 37.1294 li
57.9575 37.8638 li
cp
f
57.9575 43.8989 mo
53.1167 43.8989 li
53.1167 43.1646 li
57.9575 43.1646 li
57.9575 43.8989 li
cp
f
57.9575 49.9341 mo
53.1167 49.9341 li
53.1167 49.1997 li
57.9575 49.1997 li
57.9575 49.9341 li
cp
f
57.9575 55.9692 mo
53.1167 55.9692 li
53.1167 55.2349 li
57.9575 55.2349 li
57.9575 55.9692 li
cp
f
6.65674 73.3867 mo
70.4922 73.3867 li
70.4922 33.522 li
6.65674 33.522 li
6.65674 73.3867 li
cp
76.6514 79.5454 mo
.497559 79.5454 li
.497559 27.3633 li
76.6514 27.3633 li
76.6514 79.5454 li
cp
f
142.839 15.8061 mo
142.839 15.8306 li
142.839 16.6255 142.204 17.2666 141.409 17.2666 cv
125.368 17.2666 li
124.579 17.2666 123.944 16.6255 123.944 15.8306 cv
123.944 15.8061 li
123.944 15.0166 124.579 14.3701 125.368 14.3701 cv
141.409 14.3701 li
142.204 14.3701 142.839 15.0166 142.839 15.8061 cv
.619608 .909804 .87451 rgb
f
148.638 79.5454 mo
118.14 79.5454 li
114.441 79.5454 111.891 75.8295 113.222 72.3784 cv
126.064 39.0821 li
126.064 17.2666 li
140.719 17.2666 li
140.719 39.0694 li
153.562 72.3784 li
154.893 75.8295 152.342 79.5454 148.638 79.5454 cv
f
141.409 17.2666 mo
133.392 17.2666 li
133.392 14.3701 li
141.409 14.3701 li
142.204 14.3701 142.839 15.0166 142.839 15.8061 cv
142.839 15.8306 li
142.839 16.6255 142.204 17.2666 141.409 17.2666 cv
.341176 .721569 .713725 rgb
f
144.376 79.5454 mo
133.392 79.5454 li
133.392 35.7594 li
137.435 41.9644 li
137.435 72.604 li
137.435 76.4375 140.543 79.5454 144.376 79.5454 cv
140.719 34.6714 mo
133.392 34.6714 li
133.392 17.2666 li
140.719 17.2666 li
140.719 34.6714 li
f
132.683 34.6714 mo
144.225 52.3843 li
155.768 34.6714 li
132.683 34.6714 li
.619608 .909804 .87451 rgb
f
137.435 34.6714 mo
137.435 72.604 li
137.435 76.4375 140.543 79.5454 144.376 79.5454 cv
155.768 79.5454 li
155.768 34.6714 li
137.435 34.6714 li
f
155.768 34.6714 mo
155.768 79.5454 li
167.158 79.5454 li
170.992 79.5454 174.1 76.4375 174.1 72.604 cv
174.1 34.6714 li
155.768 34.6714 li
f
167.158 79.5454 mo
155.768 79.5454 li
155.768 34.6714 li
174.1 34.6714 li
174.1 72.604 li
174.1 76.4375 170.992 79.5454 167.158 79.5454 cv
.341176 .721569 .713725 rgb
f
153.72 74.4204 mo
152.895 74.4204 li
152.895 41.2183 li
153.72 41.2183 li
153.72 74.4204 li
cp
.258824 .129412 .0431373 rgb
f
159.418 74.4204 mo
153.307 74.4204 li
153.307 73.6055 li
159.418 73.6055 li
159.418 74.4204 li
cp
f
159.418 42.0337 mo
153.307 42.0337 li
153.307 41.2183 li
159.418 41.2183 li
159.418 42.0337 li
cp
f
159.418 57.5161 mo
153.307 57.5161 li
153.307 56.7007 li
159.418 56.7007 li
159.418 57.5161 li
cp
f
161.195 72.126 mo
161.195 72.7075 161.271 73.1377 161.423 73.4155 cv
161.575 73.6938 161.807 73.8325 162.116 73.8325 cv
162.439 73.8325 162.675 73.689 162.823 73.4019 cv
162.971 73.1143 163.045 72.689 163.045 72.126 cv
163.045 71.5713 162.971 71.1504 162.823 70.8628 cv
162.675 70.5757 162.439 70.4316 162.116 70.4316 cv
161.792 70.4316 161.558 70.5757 161.413 70.8628 cv
161.268 71.1504 161.195 71.5713 161.195 72.126 cv
cp
163.33 72.126 mo
163.33 72.7847 163.229 73.2725 163.029 73.5894 cv
162.827 73.9053 162.523 74.064 162.116 74.064 cv
161.724 74.064 161.426 73.9009 161.223 73.5747 cv
161.019 73.249 160.917 72.7661 160.917 72.126 cv
160.917 71.4722 161.016 70.9878 161.214 70.6729 cv
161.411 70.3584 161.712 70.2007 162.116 70.2007 cv
162.511 70.2007 162.813 70.3638 163.02 70.6899 cv
163.227 71.0156 163.33 71.4946 163.33 72.126 cv
cp
f
161.169 42.5342 mo
160.917 42.5342 li
160.917 39.8003 li
160.917 39.5522 160.928 39.2949 160.948 39.0278 cv
160.869 39.1025 li
160.842 39.1265 160.577 39.334 160.076 39.7266 cv
159.929 39.5439 li
160.948 38.7817 li
161.169 38.7817 li
161.169 42.5342 li
cp
f
162.992 40.6479 mo
162.992 41.2295 163.068 41.6597 163.22 41.9375 cv
163.373 42.2158 163.604 42.3545 163.913 42.3545 cv
164.237 42.3545 164.473 42.2109 164.62 41.9233 cv
164.769 41.6362 164.843 41.2109 164.843 40.6479 cv
164.843 40.0933 164.769 39.6724 164.62 39.3848 cv
164.473 39.0972 164.237 38.9531 163.913 38.9531 cv
163.59 38.9531 163.355 39.0972 163.21 39.3848 cv
163.064 39.6724 162.992 40.0933 162.992 40.6479 cv
cp
165.127 40.6479 mo
165.127 41.3066 165.027 41.7944 164.826 42.1108 cv
164.625 42.4272 164.32 42.5854 163.913 42.5854 cv
163.521 42.5854 163.224 42.4229 163.02 42.0967 cv
162.816 41.771 162.714 41.2876 162.714 40.6479 cv
162.714 39.9937 162.813 39.5098 163.011 39.1948 cv
163.208 38.8804 163.509 38.7222 163.913 38.7222 cv
164.308 38.7222 164.61 38.8853 164.817 39.2114 cv
165.024 39.5376 165.127 40.0161 165.127 40.6479 cv
cp
f
165.993 40.6479 mo
165.993 41.2295 166.069 41.6597 166.221 41.9375 cv
166.374 42.2158 166.604 42.3545 166.914 42.3545 cv
167.237 42.3545 167.473 42.2109 167.621 41.9233 cv
167.77 41.6362 167.843 41.2109 167.843 40.6479 cv
167.843 40.0933 167.77 39.6724 167.621 39.3848 cv
167.473 39.0972 167.237 38.9531 166.914 38.9531 cv
166.591 38.9531 166.356 39.0972 166.211 39.3848 cv
166.065 39.6724 165.993 40.0933 165.993 40.6479 cv
cp
168.128 40.6479 mo
168.128 41.3066 168.028 41.7944 167.827 42.1108 cv
167.625 42.4272 167.321 42.5854 166.914 42.5854 cv
166.522 42.5854 166.224 42.4229 166.021 42.0967 cv
165.817 41.771 165.715 41.2876 165.715 40.6479 cv
165.715 39.9937 165.814 39.5098 166.012 39.1948 cv
166.209 38.8804 166.51 38.7222 166.914 38.7222 cv
167.309 38.7222 167.61 38.8853 167.818 39.2114 cv
168.025 39.5376 168.128 40.0161 168.128 40.6479 cv
cp
f
162 54.8521 mo
162.401 54.8521 162.716 54.9487 162.946 55.1421 cv
163.177 55.3354 163.292 55.6016 163.292 55.9404 cv
163.292 56.3252 163.172 56.625 162.932 56.8389 cv
162.693 57.0527 162.362 57.1597 161.941 57.1597 cv
161.755 57.1597 161.578 57.1416 161.41 57.1045 cv
161.243 57.0679 161.102 57.0151 160.989 56.9468 cv
160.989 56.6821 li
161.174 56.7764 161.338 56.8418 161.482 56.8789 cv
161.625 56.9155 161.779 56.9336 161.941 56.9336 cv
162.27 56.9336 162.534 56.8472 162.732 56.6733 cv
162.931 56.4995 163.03 56.2646 163.03 55.9683 cv
163.03 55.6895 162.933 55.4707 162.74 55.3115 cv
162.546 55.1523 162.284 55.0728 161.952 55.0728 cv
161.729 55.0728 161.497 55.106 161.253 55.1729 cv
161.1 55.0728 li
161.248 53.3555 li
163.056 53.3555 li
163.056 53.6021 li
161.49 53.6021 li
161.374 54.9268 li
161.641 54.877 161.85 54.8521 162 54.8521 cv
cp
f
164.195 55.2217 mo
164.195 55.8032 164.271 56.2334 164.424 56.5112 cv
164.576 56.79 164.807 56.9287 165.117 56.9287 cv
165.44 56.9287 165.676 56.7852 165.824 56.4976 cv
165.972 56.21 166.046 55.7847 166.046 55.2217 cv
166.046 54.6675 165.972 54.2461 165.824 53.959 cv
165.676 53.6714 165.44 53.5273 165.117 53.5273 cv
164.793 53.5273 164.559 53.6714 164.414 53.959 cv
164.268 54.2461 164.195 54.6675 164.195 55.2217 cv
cp
166.331 55.2217 mo
166.331 55.8804 166.23 56.3682 166.029 56.6851 cv
165.828 57.0015 165.524 57.1597 165.117 57.1597 cv
164.725 57.1597 164.427 56.9971 164.224 56.6709 cv
164.02 56.3447 163.918 55.8618 163.918 55.2217 cv
163.918 54.5679 164.017 54.0835 164.214 53.769 cv
164.412 53.4541 164.713 53.2964 165.117 53.2964 cv
165.512 53.2964 165.813 53.4595 166.021 53.7856 cv
166.228 54.1113 166.331 54.5903 166.331 55.2217 cv
cp
f
248.851 143.96 mo
220.003 140.192 li
220.93 133.093 li
249.779 136.86 li
248.851 143.96 li
.992157 .737255 0 rgb
f
255.016 114.464 mo
254.429 118.895 li
252.989 129.792 li
252.482 133.636 li
249.44 133.231 li
248.014 133.041 li
248.521 129.205 li
249.44 122.297 li
249.968 118.307 li
250.556 113.876 li
255.016 114.464 li
f
276.283 167.062 mo
268.398 173.177 li
258.603 160.538 li
251.534 151.426 li
249.44 148.721 li
246.655 145.128 li
248.264 143.887 li
248.932 143.365 li
249.44 142.968 li
254.546 139.014 li
259.426 145.304 li
266.488 154.424 li
276.283 167.062 li
f
266.488 154.424 mo
264.871 154.835 263.313 155.578 261.91 156.665 cv
260.506 157.752 259.396 159.075 258.603 160.538 cv
256.251 164.799 256.501 170.237 259.675 174.323 cv
262.153 177.522 265.87 179.189 269.625 179.191 cv
269.625 154.037 li
268.575 154.036 267.519 154.159 266.488 154.424 cv
.105882 .584314 .635294 rgb
f
279.575 158.899 mo
277.095 155.707 273.381 154.039 269.625 154.037 cv
269.625 179.191 li
272.323 179.193 275.04 178.345 277.334 176.564 cv
282.83 172.302 283.836 164.395 279.575 158.899 cv
f
248.521 129.205 mo
246.375 129.351 244.258 130.123 242.436 131.534 cv
241.026 132.622 239.953 133.981 239.217 135.48 cv
238.145 137.677 237.822 140.175 238.292 142.578 cv
238.615 144.239 239.328 145.855 240.438 147.289 cv
242.652 150.148 245.962 151.633 249.315 151.641 cv
249.315 129.179 li
249.048 129.181 248.782 129.185 248.521 129.205 cv
.988235 .380392 .121569 rgb
f
258.191 133.525 mo
256.802 131.74 254.98 130.483 252.989 129.792 cv
251.849 129.396 250.645 129.19 249.44 129.175 cv
249.315 129.179 li
249.315 151.641 li
249.44 151.646 li
250.138 151.639 250.843 151.565 251.534 151.426 cv
253.179 151.095 254.782 150.39 256.2 149.287 cv
257.618 148.185 258.698 146.818 259.426 145.304 cv
261.226 141.586 260.896 137.016 258.191 133.525 cv
f
215.591 130.351 mo
212.116 133.044 211.483 138.045 214.176 141.519 cv
215.743 143.542 218.093 144.594 220.467 144.596 cv
220.467 128.69 li
218.761 128.689 217.043 129.226 215.591 130.351 cv
.105882 .584314 .635294 rgb
f
226.759 131.767 mo
225.192 129.744 222.842 128.692 220.467 128.69 cv
220.467 144.596 li
222.172 144.597 223.892 144.06 225.344 142.935 cv
228.819 140.241 229.453 135.241 226.759 131.767 cv
f
249.719 110.209 mo
249.624 110.283 249.528 110.364 249.44 110.452 cv
247.507 112.186 247.213 115.147 248.83 117.234 cv
249.013 117.477 249.218 117.697 249.44 117.895 cv
249.608 118.043 249.785 118.182 249.968 118.307 cv
250.809 118.878 251.794 119.169 252.787 119.169 cv
252.787 109.167 li
251.712 109.166 250.631 109.502 249.719 110.209 cv
f
256.744 111.099 mo
255.756 109.829 254.279 109.168 252.787 109.167 cv
252.787 119.169 li
253.34 119.169 253.895 119.082 254.429 118.895 cv
254.928 118.726 255.414 118.469 255.854 118.124 cv
258.037 116.434 258.434 113.288 256.744 111.099 cv
f
269.635 179.191 mo
269.632 179.191 269.629 179.191 269.625 179.191 cv
269.625 154.037 li
273.381 154.039 277.095 155.707 279.575 158.899 cv
281.352 161.191 282.213 163.902 282.214 166.593 cv
282.216 170.356 280.538 174.079 277.334 176.564 cv
275.042 178.343 272.329 179.191 269.635 179.191 cv
.0588235 .462745 .517647 rgb
f
249.44 151.646 mo
249.315 151.641 li
249.315 129.179 li
249.44 129.175 li
250.645 129.19 251.849 129.396 252.989 129.792 cv
254.98 130.483 256.802 131.74 258.191 133.525 cv
259.781 135.577 260.551 138.003 260.549 140.409 cv
260.548 142.095 260.168 143.772 259.426 145.304 cv
259.426 145.304 li
258.698 146.818 257.618 148.185 256.2 149.287 cv
254.782 150.39 253.179 151.095 251.534 151.426 cv
251.534 151.426 li
250.843 151.565 250.138 151.639 249.44 151.646 cv
.988235 .219608 .0156863 rgb
f
220.472 144.596 mo
220.47 144.596 220.469 144.596 220.467 144.596 cv
220.467 128.69 li
222.842 128.692 225.192 129.744 226.759 131.767 cv
227.885 133.219 228.429 134.938 228.428 136.643 cv
228.427 138.218 227.96 139.782 227.056 141.114 cv
226.597 141.79 226.025 142.407 225.344 142.935 cv
223.893 144.059 222.175 144.596 220.472 144.596 cv
.0588235 .462745 .517647 rgb
f
252.787 119.169 mo
252.787 109.167 li
254.279 109.168 255.756 109.829 256.744 111.099 cv
257.45 112.014 257.792 113.096 257.791 114.169 cv
257.79 115.663 257.124 117.14 255.854 118.124 cv
255.414 118.469 254.928 118.726 254.429 118.895 cv
253.895 119.082 253.34 119.169 252.787 119.169 cv
f
259.786 11.0557 mo
259.786 49.7149 li
255.421 49.7149 li
251.056 49.7222 li
251.049 49.7222 li
251.049 11.0557 li
259.786 11.0557 li
.619608 .909804 .87451 rgb
f
261.049 10.1885 mo
261.049 10.2031 li
261.049 10.6733 260.667 11.0557 260.197 11.0557 cv
250.637 11.0557 li
250.166 11.0557 249.785 10.6733 249.785 10.2031 cv
249.785 10.1885 li
249.785 9.7183 250.166 9.33592 250.637 9.33592 cv
260.197 9.33592 li
260.667 9.33592 261.049 9.7183 261.049 10.1885 cv
f
259.786 49.71 mo
259.786 49.7149 li
259.771 49.7149 li
258.4 50.1596 256.942 50.4126 255.421 50.4126 cv
253.892 50.4126 252.43 50.1704 251.056 49.7222 cv
251.049 49.7222 li
246.038 48.0904 242.26 43.7407 241.459 38.4131 cv
269.375 38.4131 li
268.575 43.7387 264.792 48.0801 259.786 49.71 cv
.105882 .584314 .635294 rgb
f
269.537 36.2969 mo
269.537 37.0166 269.486 37.7222 269.375 38.4131 cv
241.459 38.4131 li
241.356 37.7222 241.297 37.0166 241.297 36.2969 cv
241.297 30.0288 245.391 24.7011 251.049 22.8642 cv
252.422 22.416 253.892 22.1734 255.421 22.1734 cv
256.943 22.1734 258.412 22.416 259.786 22.8642 cv
265.444 24.7011 269.537 30.0288 269.537 36.2969 cv
.619608 .909804 .87451 rgb
f
255.421 50.4126 mo
255.421 38.4131 li
269.375 38.4131 li
268.575 43.7387 264.792 48.0801 259.786 49.71 cv
259.786 49.7149 li
259.771 49.7149 li
258.4 50.1596 256.942 50.4126 255.421 50.4126 cv
.0588235 .462745 .517647 rgb
f
259.786 22.8642 mo
258.412 22.416 256.943 22.1734 255.421 22.1734 cv
255.421 11.0557 li
259.786 11.0557 li
259.786 22.8642 li
.341176 .721569 .713725 rgb
f
260.197 11.0557 mo
259.786 11.0557 li
255.421 11.0557 li
255.421 9.33592 li
260.197 9.33592 li
260.667 9.33592 261.049 9.7183 261.049 10.1885 cv
261.049 10.2031 li
261.049 10.6733 260.667 11.0557 260.197 11.0557 cv
f
269.375 38.4131 mo
269.375 38.4131 li
255.421 38.4131 li
255.421 22.1734 li
256.943 22.1734 258.412 22.416 259.786 22.8642 cv
259.786 22.8642 li
259.786 22.8642 li
265.444 24.7011 269.537 30.0288 269.537 36.2969 cv
269.537 37.0166 269.486 37.7222 269.375 38.4131 cv
f
251.05 19.4146 mo
227.451 19.4146 li
227.451 17.8335 li
251.05 17.8335 li
251.05 19.4146 li
cp
.258824 .129412 .0431373 rgb
f
232.734 78.7192 mo
229.29 78.7192 li
229.29 4.66211 li
232.734 4.66211 li
232.734 78.7192 li
cp
f
266.986 75.6602 mo
227.736 75.6602 li
225.611 75.6602 223.89 77.3823 223.89 79.5059 cv
223.89 79.5454 li
270.833 79.5454 li
270.833 79.5059 li
270.833 77.3823 269.11 75.6602 266.986 75.6602 cv
cp
f
252.423 16.3174 mo
249.959 16.3174 li
249.959 20.5664 li
252.423 20.5664 li
252.423 16.3174 li
cp
f
261.051 16.3174 mo
258.587 16.3174 li
258.587 20.5664 li
261.051 20.5664 li
261.051 16.3174 li
cp
f
227.451 20.7485 mo
225.75 20.7485 li
225.75 16.4995 li
227.451 16.4995 li
227.451 20.7485 li
cp
f
251.05 52.5415 mo
227.451 52.5415 li
227.451 50.9604 li
251.05 50.9604 li
251.05 52.5415 li
cp
f
227.451 53.875 mo
225.75 53.875 li
225.75 49.6255 li
227.451 49.6255 li
227.451 53.875 li
cp
f
267.757 51.4033 mo
242.991 51.4033 li
242.991 50.1113 li
267.757 50.1113 li
267.757 51.4033 li
cp
f
247.546 75.6602 mo
255.42 70.8716 li
263.293 75.6602 li
247.546 75.6602 li
cp
f
264.046 74.3921 mo
246.794 74.3921 li
246.794 75.6602 li
264.046 75.6602 li
264.046 74.3921 li
cp
f
257.375 66.2558 mo
257.375 72.0317 li
253.408 72.0317 li
253.408 66.2558 li
257.375 66.2558 li
f
259.61 61.979 mo
259.61 64.1763 257.736 65.9541 255.421 65.9541 cv
253.107 65.9541 251.233 64.1763 251.233 61.979 cv
251.233 59.7818 255.421 53.8736 255.421 53.8736 cv
255.421 53.8736 259.61 59.7818 259.61 61.979 cv
.968627 .909804 .466667 rgb
f
257.665 63.4498 mo
257.665 64.6274 256.66 65.5815 255.42 65.5815 cv
254.179 65.5815 253.173 64.6274 253.173 63.4498 cv
253.173 62.2724 255.42 59.104 255.42 59.104 cv
255.42 59.104 257.665 62.2724 257.665 63.4498 cv
1 .576471 .117647 rgb
f
256.766 64.4639 mo
256.766 65.1699 256.164 65.7417 255.42 65.7417 cv
254.676 65.7417 254.073 65.1699 254.073 64.4639 cv
254.073 63.7579 255.42 61.8579 255.42 61.8579 cv
255.42 61.8579 256.766 63.7579 256.766 64.4639 cv
1 .113725 .145098 rgb
f
255.421 65.9541 mo
255.421 65.7417 li
255.779 65.7415 256.103 65.6091 256.344 65.3932 cv
257.123 65.0587 257.665 64.3145 257.665 63.4498 cv
257.665 62.2867 255.475 59.1806 255.421 59.1054 cv
255.421 53.8736 li
255.421 53.8736 259.61 59.7818 259.61 61.979 cv
259.61 64.1763 257.736 65.9541 255.421 65.9541 cv
.968627 .52549 .054902 rgb
f
256.344 65.3932 mo
256.604 65.1602 256.766 64.8301 256.766 64.4639 cv
256.766 63.769 255.462 61.9175 255.421 61.8594 cv
255.421 59.1054 li
255.475 59.1806 257.665 62.2867 257.665 63.4498 cv
257.665 64.3145 257.123 65.0587 256.344 65.3932 cv
1 .333333 .0156863 rgb
f
255.421 65.7417 mo
255.421 61.8594 li
255.462 61.9175 256.766 63.769 256.766 64.4639 cv
256.766 64.8301 256.604 65.1602 256.344 65.3932 cv
256.103 65.6091 255.779 65.7415 255.421 65.7417 cv
1 .0666667 .0156863 rgb
f
45.3994 246.411 mo
45.3994 250.196 42.3282 253.261 38.5512 253.261 cv
34.7671 253.261 31.7026 250.196 31.7026 246.411 cv
31.7026 242.627 34.7671 239.563 38.5512 239.563 cv
42.3282 239.563 45.3994 242.627 45.3994 246.411 cv
.105882 .584314 .635294 rgb
f
33.896 219.973 mo
33.896 221.971 32.2759 223.59 30.2783 223.59 cv
28.2808 223.59 26.6616 221.971 26.6616 219.973 cv
26.6616 217.975 28.2808 216.355 30.2783 216.355 cv
32.2759 216.355 33.896 217.975 33.896 219.973 cv
cp
.992157 .737255 0 rgb
f
14.1025 257.144 mo
14.1025 259.503 12.1909 261.415 9.83154 261.415 cv
7.47266 261.415 5.56006 259.503 5.56006 257.144 cv
5.56006 254.784 7.47266 252.872 9.83154 252.872 cv
12.1909 252.872 14.1025 254.784 14.1025 257.144 cv
cp
.105882 .584314 .635294 rgb
f
49.0517 251.158 mo
49.0372 251.475 49.0225 251.783 49.0078 252.085 cv
48.9785 252.708 48.9492 253.319 48.9121 253.922 cv
48.8902 254.237 48.8682 254.553 48.8462 254.862 cv
48.7066 256.831 48.523 258.72 48.2954 260.513 cv
48.2583 260.763 48.2285 261.005 48.1924 261.247 cv
48.126 261.732 48.0601 262.203 47.9863 262.673 cv
47.9497 262.923 47.9131 263.166 47.876 263.407 cv
45.9585 275.261 42.167 282.492 38.5512 282.492 cv
35.1783 282.492 31.6514 276.201 29.6377 265.729 cv
29.5859 265.487 29.542 265.244 29.4981 264.995 cv
29.4101 264.51 29.3218 264.011 29.2408 263.511 cv
29.1968 263.262 29.1601 263.019 29.1235 262.768 cv
28.7852 260.557 28.5058 258.183 28.315 255.677 cv
28.2862 255.398 28.2637 255.111 28.249 254.825 cv
28.205 254.281 28.1685 253.723 28.1387 253.157 cv
28.124 252.878 28.1094 252.592 28.0947 252.305 cv
28.0064 250.408 27.9551 248.439 27.9551 246.411 cv
27.9551 244.788 27.9844 243.208 28.0434 241.672 cv
28.0576 241.355 28.0727 241.047 28.0874 240.738 cv
28.1167 240.121 28.1465 239.511 28.1827 238.908 cv
28.205 238.593 28.227 238.277 28.249 237.968 cv
28.3887 235.999 28.5723 234.11 28.8071 232.317 cv
28.8369 232.067 28.8662 231.818 28.9028 231.575 cv
28.9692 231.09 29.0352 230.62 29.1088 230.149 cv
29.1455 229.899 29.1826 229.657 29.2188 229.415 cv
31.1372 217.569 34.9355 210.339 38.5512 210.339 cv
41.9243 210.339 45.4512 216.629 47.457 227.101 cv
47.5088 227.336 47.5527 227.578 47.6045 227.827 cv
47.685 228.313 47.7735 228.812 47.854 229.312 cv
47.8979 229.562 47.9351 229.812 47.9717 230.061 cv
48.3174 232.273 48.5888 234.64 48.7876 237.146 cv
48.8096 237.425 48.8316 237.712 48.8462 237.998 cv
48.8902 238.541 48.9272 239.1 48.9565 239.666 cv
48.9712 239.944 48.9859 240.224 49.0005 240.511 cv
49.0888 242.414 49.1401 244.376 49.1401 246.411 cv
49.1401 248.036 49.1108 249.623 49.0517 251.158 cv
50.4629 241.282 mo
50.4555 240.996 50.4409 240.717 50.4257 240.437 cv
50.3965 239.872 50.3672 239.313 50.3306 238.762 cv
50.3159 238.475 50.2939 238.188 50.2788 237.909 cv
50.0586 234.94 49.7427 232.119 49.3164 229.48 cv
49.2798 229.231 49.2427 228.981 49.1987 228.731 cv
49.1182 228.232 49.0298 227.747 48.9341 227.262 cv
48.8902 227.019 48.8462 226.777 48.8022 226.534 cv
46.7002 215.872 42.9307 208.906 38.5512 208.906 cv
33.8266 208.906 29.8213 216.981 27.8447 229.041 cv
27.8081 229.282 27.7641 229.524 27.7271 229.768 cv
27.6538 230.237 27.5874 230.716 27.5215 231.193 cv
27.4849 231.436 27.4555 231.679 27.4258 231.928 cv
27.1246 234.184 26.897 236.558 26.75 239.026 cv
26.728 239.343 26.706 239.658 26.6909 239.975 cv
26.6621 240.585 26.6323 241.202 26.6104 241.818 cv
26.5957 242.135 26.5884 242.443 26.5732 242.76 cv
26.5371 243.957 26.5219 245.177 26.5219 246.411 cv
26.5219 248.153 26.5591 249.865 26.6323 251.54 cv
26.6397 251.827 26.6543 252.106 26.669 252.386 cv
26.6987 252.951 26.728 253.51 26.7647 254.062 cv
26.7798 254.348 26.8018 254.635 26.816 254.914 cv
27.0366 257.883 27.3525 260.712 27.7788 263.35 cv
27.8154 263.599 27.8521 263.849 27.896 264.092 cv
27.9771 264.591 28.0654 265.076 28.1607 265.562 cv
28.205 265.81 28.249 266.053 28.3003 266.296 cv
30.3945 276.958 34.164 283.924 38.5512 283.924 cv
43.269 283.924 47.2734 275.849 49.2505 263.782 cv
49.2866 263.541 49.3316 263.298 49.3676 263.056 cv
49.4414 262.585 49.5073 262.115 49.5732 261.63 cv
49.6104 261.387 49.6402 261.145 49.6689 260.902 cv
49.9702 258.646 50.1982 256.272 50.3452 253.804 cv
50.3672 253.488 50.3892 253.172 50.4038 252.855 cv
50.4336 252.246 50.4629 251.628 50.4849 251.011 cv
50.4995 250.703 50.5068 250.395 50.5215 250.078 cv
50.5586 248.873 50.5727 247.653 50.5727 246.411 cv
50.5727 244.67 50.5362 242.957 50.4629 241.282 cv
f
38.5512 281.757 mo
35.8398 281.757 32.3198 276.076 30.2989 265.443 cv
30.2549 265.194 30.2109 264.943 30.1669 264.693 cv
30.0791 264.208 29.9903 263.725 29.917 263.217 cv
29.8725 262.975 29.8365 262.725 29.7993 262.467 cv
29.4981 260.477 29.2486 258.338 29.065 256.052 cv
29.0425 255.772 29.0205 255.487 28.9985 255.2 cv
28.9619 254.656 28.9248 254.105 28.8882 253.547 cv
28.8735 253.268 28.8589 252.981 28.8442 252.694 cv
28.7412 250.695 28.6894 248.602 28.6894 246.411 cv
28.6894 244.582 28.7266 242.825 28.8002 241.128 cv
28.8144 240.819 28.8296 240.503 28.8442 240.194 cv
28.8735 239.577 28.9102 238.968 28.9472 238.373 cv
28.9692 238.057 28.9912 237.748 29.0132 237.438 cv
29.1377 235.72 29.3071 234.081 29.4981 232.523 cv
29.5279 232.273 29.564 232.023 29.5937 231.78 cv
29.6597 231.296 29.726 230.818 29.7993 230.355 cv
29.8365 230.105 29.8725 229.863 29.9096 229.62 cv
31.835 217.555 35.6562 211.074 38.5512 211.074 cv
41.2554 211.074 44.7754 216.754 46.7959 227.387 cv
46.8398 227.63 46.8838 227.879 46.9282 228.129 cv
47.0166 228.614 47.1045 229.099 47.1782 229.606 cv
47.2221 229.848 47.2593 230.098 47.3032 230.355 cv
47.5967 232.347 47.8466 234.485 48.0303 236.77 cv
48.0527 237.05 48.0747 237.337 48.0967 237.622 cv
48.1333 238.167 48.1704 238.718 48.2065 239.283 cv
48.2217 239.563 48.2363 239.842 48.251 240.128 cv
48.354 242.128 48.4053 244.222 48.4053 246.411 cv
48.4053 248.241 48.3682 250.005 48.2954 251.702 cv
48.2803 252.011 48.2657 252.319 48.251 252.628 cv
48.2217 253.245 48.1846 253.855 48.1479 254.457 cv
48.126 254.774 48.104 255.082 48.0821 255.392 cv
47.9571 257.11 47.7881 258.749 47.5967 260.307 cv
47.56 260.557 47.5307 260.8 47.5015 261.042 cv
47.435 261.526 47.3691 262.004 47.2954 262.467 cv
47.2593 262.717 47.2221 262.96 47.1856 263.202 cv
45.2602 275.275 41.4389 281.757 38.5512 281.757 cv
51.2192 241.701 mo
51.2124 241.414 51.1972 241.128 51.1904 240.849 cv
51.1607 240.283 51.1314 239.717 51.0947 239.166 cv
51.0801 238.88 51.0654 238.593 51.0434 238.313 cv
50.8301 235.08 50.4917 232.023 50.0293 229.18 cv
49.9926 228.93 49.9556 228.68 49.9116 228.438 cv
49.8305 227.937 49.7427 227.453 49.647 226.969 cv
49.603 226.726 49.5591 226.483 49.5073 226.248 cv
47.3179 215.239 43.3203 208.171 38.5512 208.171 cv
33.415 208.171 29.1748 216.357 27.1172 228.842 cv
27.0806 229.085 27.0434 229.327 26.9995 229.568 cv
26.9263 230.039 26.8598 230.51 26.794 230.987 cv
26.7568 231.23 26.728 231.473 26.6987 231.723 cv
26.3676 234.206 26.125 236.837 25.9712 239.585 cv
25.956 239.9 25.9414 240.217 25.9194 240.541 cv
25.8975 241.15 25.8682 241.76 25.8535 242.378 cv
25.8384 242.693 25.8315 243.009 25.8242 243.325 cv
25.8017 244.339 25.7876 245.368 25.7876 246.411 cv
25.7876 248.014 25.8164 249.586 25.8755 251.121 cv
25.8833 251.408 25.8975 251.694 25.9048 251.981 cv
25.934 252.548 25.9634 253.099 25.9932 253.649 cv
26.0152 253.943 26.0298 254.23 26.0518 254.509 cv
26.2646 257.749 26.6104 260.807 27.0659 263.65 cv
27.1026 263.9 27.1469 264.143 27.1831 264.386 cv
27.2719 264.885 27.3599 265.37 27.4555 265.855 cv
27.4922 266.097 27.5435 266.34 27.5874 266.582 cv
29.7847 277.591 33.7822 284.659 38.5512 284.659 cv
43.6875 284.659 47.9277 276.466 49.9775 263.98 cv
50.0215 263.738 50.0586 263.497 50.0953 263.254 cv
50.1689 262.783 50.2349 262.313 50.3008 261.836 cv
50.3379 261.593 50.3672 261.351 50.4038 261.101 cv
50.727 258.617 50.9697 255.994 51.1245 253.245 cv
51.1387 252.93 51.1534 252.606 51.1753 252.282 cv
51.1972 251.68 51.227 251.07 51.2417 250.453 cv
51.2563 250.144 51.2642 249.835 51.271 249.519 cv
51.293 248.499 51.3081 247.463 51.3081 246.411 cv
51.3081 244.81 51.2783 243.236 51.2192 241.701 cv
.992157 .737255 0 rgb
f
38.5512 284.659 mo
38.5512 281.757 li
41.4389 281.757 45.2602 275.275 47.1856 263.202 cv
47.1856 263.202 li
47.4209 263.275 47.6485 263.342 47.876 263.407 cv
48.3393 263.541 48.7944 263.665 49.2505 263.782 cv
49.4927 263.856 49.7349 263.923 49.9775 263.98 cv
47.9277 276.466 43.6875 284.659 38.5512 284.659 cv
50.4038 261.101 mo
50.1611 261.034 49.9116 260.968 49.6689 260.902 cv
49.2138 260.777 48.7578 260.645 48.2954 260.513 cv
48.0601 260.446 47.832 260.373 47.5967 260.307 cv
47.5967 260.307 li
47.5967 260.307 li
47.7881 258.749 47.9571 257.11 48.0821 255.392 cv
48.0821 255.392 li
48.3393 255.215 48.5961 255.038 48.8462 254.862 cv
49.3535 254.509 49.8525 254.157 50.3452 253.804 cv
50.6093 253.612 50.8667 253.429 51.1245 253.245 cv
50.9697 255.994 50.727 258.617 50.4038 261.101 cv
50.4038 261.101 li
.992157 .423529 0 rgb
f
48.2954 251.702 mo
48.2954 251.702 li
48.3682 250.005 48.4053 248.241 48.4053 246.411 cv
48.4053 246.411 li
48.4053 246.411 li
48.4053 244.222 48.354 242.128 48.251 240.128 cv
48.501 240.254 48.7504 240.386 49.0005 240.511 cv
49.4927 240.769 49.9775 241.024 50.4629 241.282 cv
50.7202 241.422 50.9697 241.562 51.2192 241.701 cv
51.2192 241.701 li
51.2783 243.236 51.3081 244.81 51.3081 246.411 cv
51.3081 247.463 51.293 248.499 51.271 249.519 cv
51.271 249.519 li
51.0214 249.703 50.771 249.895 50.5215 250.078 cv
50.044 250.438 49.5512 250.799 49.0517 251.158 cv
48.8022 251.342 48.5523 251.526 48.2954 251.702 cv
48.2954 251.702 li
51.0434 238.313 mo
51.0434 238.313 li
50.7935 238.174 50.5362 238.042 50.2788 237.909 cv
49.7867 237.652 49.2944 237.395 48.7876 237.146 cv
48.5376 237.021 48.2875 236.895 48.0303 236.77 cv
48.0303 236.77 li
47.8466 234.485 47.5967 232.347 47.3032 230.355 cv
47.5234 230.26 47.7515 230.157 47.9717 230.061 cv
48.4273 229.855 48.8755 229.664 49.3164 229.48 cv
49.5591 229.378 49.794 229.275 50.0293 229.18 cv
50.0293 229.18 li
50.4917 232.023 50.8301 235.08 51.0434 238.313 cv
51.0434 238.313 li
f
46.7959 227.387 mo
46.7959 227.387 li
44.7754 216.754 41.2554 211.074 38.5512 211.074 cv
38.5512 208.171 li
43.3203 208.171 47.3179 215.239 49.5073 226.248 cv
49.5073 226.248 li
49.5073 226.248 li
49.2798 226.336 49.0445 226.432 48.8022 226.534 cv
48.3613 226.711 47.9131 226.901 47.457 227.101 cv
47.2368 227.196 47.0166 227.292 46.7959 227.387 cv
f
59.5967 243.376 mo
59.4204 243.546 59.2364 243.715 59.0528 243.892 cv
58.7002 244.222 58.3398 244.56 57.9653 244.89 cv
57.7817 245.067 57.5903 245.235 57.3994 245.404 cv
55.5479 247.058 53.4902 248.748 51.2417 250.453 cv
50.9917 250.637 50.7422 250.827 50.4849 251.011 cv
49.9995 251.372 49.5073 251.731 49.0078 252.085 cv
48.7578 252.275 48.5083 252.452 48.251 252.628 cv
46.9868 253.524 45.6792 254.413 44.3125 255.296 cv
42.9746 256.17 41.6299 257 40.2851 257.794 cv
40.0137 257.955 39.7417 258.117 39.477 258.271 cv
39.1684 258.456 38.8525 258.632 38.5512 258.808 cv
38.5439 258.815 li
38.3237 258.933 38.1103 259.058 37.8897 259.183 cv
37.6109 259.337 37.3315 259.492 37.0595 259.638 cv
34.6343 260.976 32.2314 262.174 29.917 263.217 cv
29.689 263.312 29.4687 263.415 29.2408 263.511 cv
28.7852 263.717 28.337 263.908 27.896 264.092 cv
27.6538 264.194 27.4185 264.29 27.1831 264.386 cv
21.7236 266.611 16.8521 267.868 13.2734 267.868 cv
11.5317 267.868 9.26125 267.552 8.29099 266.061 cv
6.45407 263.231 9.81931 256.839 17.5059 249.454 cv
17.6826 249.277 17.8662 249.101 18.0498 248.933 cv
18.4024 248.602 18.7627 248.264 19.1299 247.933 cv
19.3135 247.763 19.5044 247.595 19.6953 247.418 cv
21.5473 245.765 23.605 244.075 25.8535 242.378 cv
26.103 242.187 26.3531 242.003 26.6104 241.818 cv
27.0879 241.451 27.5805 241.092 28.0874 240.738 cv
28.337 240.555 28.5869 240.371 28.8442 240.194 cv
30.1011 239.306 31.416 238.417 32.7827 237.527 cv
34.1202 236.653 35.4649 235.823 36.8096 235.029 cv
37.0815 234.867 37.3462 234.705 37.6109 234.56 cv
37.9268 234.368 38.2349 234.191 38.5439 234.022 cv
38.5512 234.015 li
38.772 233.883 38.9917 233.757 39.2124 233.641 cv
39.4917 233.485 39.7636 233.332 40.0357 233.185 cv
42.4605 231.848 44.8633 230.649 47.1782 229.606 cv
47.4057 229.511 47.6265 229.408 47.854 229.312 cv
48.3095 229.106 48.7578 228.915 49.1987 228.731 cv
49.4414 228.628 49.6767 228.533 49.9116 228.438 cv
55.3711 226.212 60.2437 224.954 63.8217 224.954 cv
65.5635 224.954 67.834 225.271 68.8037 226.77 cv
70.6407 229.599 67.2832 235.984 59.5967 243.376 cv
70.0093 225.982 mo
68.9507 224.352 66.8642 223.521 63.8217 223.521 cv
60.0815 223.521 55.1582 224.756 49.647 226.969 cv
49.4116 227.07 49.1695 227.166 48.9341 227.262 cv
48.4931 227.445 48.0449 227.637 47.6045 227.827 cv
47.3764 227.931 47.1563 228.026 46.9282 228.129 cv
44.2241 229.334 41.4097 230.752 38.5512 232.361 cv
38.5439 232.369 li
38.3086 232.501 li
38.0371 232.655 37.7647 232.811 37.4931 232.964 cv
36.9639 233.273 36.435 233.581 35.8989 233.904 cv
35.6343 234.059 35.3618 234.221 35.0903 234.39 cv
34.0615 235.015 33.0327 235.661 31.9965 236.33 cv
30.9531 237.006 29.939 237.689 28.9472 238.373 cv
28.6894 238.549 28.4326 238.732 28.1827 238.908 cv
27.6758 239.262 27.1763 239.621 26.6909 239.975 cv
26.4268 240.166 26.1768 240.35 25.9194 240.541 cv
23.2007 242.554 20.7022 244.59 18.4756 246.603 cv
18.2847 246.772 18.0938 246.94 17.9102 247.117 cv
17.5498 247.447 17.1895 247.778 16.8442 248.108 cv
16.293 248.638 li
8.49659 256.199 4.69827 263.158 7.08592 266.84 cv
8.15135 268.471 10.2309 269.301 13.2734 269.301 cv
17.0137 269.301 21.9366 268.067 27.4555 265.855 cv
27.6905 265.76 27.9258 265.657 28.1607 265.562 cv
28.6016 265.378 29.0498 265.186 29.4981 264.995 cv
29.7187 264.893 29.939 264.797 30.1669 264.693 cv
32.8711 263.489 35.6782 262.071 38.5439 260.461 cv
38.5512 260.454 li
38.794 260.321 li
39.0654 260.167 39.3447 260.013 39.6167 259.859 cv
40.1455 259.55 40.6748 259.241 41.2036 258.926 cv
41.4682 258.764 41.7407 258.602 42.0122 258.44 cv
43.041 257.815 44.0698 257.17 45.0986 256.501 cv
46.1421 255.824 47.1563 255.142 48.1479 254.457 cv
48.4053 254.273 48.6626 254.098 48.9121 253.922 cv
49.4194 253.561 49.9116 253.209 50.4038 252.855 cv
50.6611 252.664 50.9179 252.474 51.1753 252.282 cv
53.8946 250.269 56.3926 248.227 58.6265 246.213 cv
58.8178 246.044 59.0015 245.882 59.1851 245.706 cv
59.5527 245.375 59.9126 245.037 60.2578 244.706 cv
60.4414 244.53 60.6181 244.361 60.7944 244.185 cv
68.5981 236.624 72.3975 229.664 70.0093 225.982 cv
.105882 .584314 .635294 rgb
f
57.3477 244.494 mo
57.164 244.662 56.9731 244.832 56.7823 245.001 cv
55.1293 246.471 53.292 247.977 51.271 249.519 cv
51.0214 249.703 50.771 249.895 50.5215 250.078 cv
50.044 250.438 49.5512 250.799 49.0517 251.158 cv
48.8022 251.342 48.5523 251.526 48.2954 251.702 cv
46.9135 252.687 45.4512 253.679 43.915 254.679 cv
42.4165 255.648 40.9175 256.573 39.4185 257.456 cv
39.1465 257.617 38.8745 257.771 38.6104 257.927 cv
38.5512 257.963 li
38.5439 257.971 li
38.0293 258.257 37.5224 258.544 37.0152 258.823 cv
36.7363 258.984 36.4643 259.131 36.1924 259.286 cv
34.0171 260.461 31.8789 261.526 29.7993 262.467 cv
29.5717 262.57 29.3443 262.673 29.1235 262.768 cv
28.6674 262.975 28.2192 263.166 27.7788 263.35 cv
27.5362 263.452 27.3007 263.555 27.0659 263.65 cv
21.6358 265.877 16.8003 267.133 13.2734 267.133 cv
12.0025 267.133 9.7388 266.942 8.90868 265.657 cv
7.7251 263.841 9.40089 259.777 13.2734 255.061 cv
14.6621 253.37 16.293 251.628 18.1309 249.865 cv
18.3144 249.688 18.498 249.519 18.6816 249.344 cv
19.0342 249.013 19.4018 248.675 19.7691 248.344 cv
19.9527 248.176 20.144 248.006 20.335 247.837 cv
22.0322 246.331 23.8696 244.817 25.8242 243.325 cv
26.0669 243.135 26.3238 242.943 26.5732 242.76 cv
27.0586 242.392 27.5435 242.032 28.0434 241.672 cv
28.293 241.487 28.543 241.311 28.8002 241.128 cv
30.2109 240.121 31.6734 239.122 33.1797 238.145 cv
34.6787 237.175 36.1851 236.249 37.6841 235.366 cv
37.956 235.205 38.2281 235.051 38.4927 234.897 cv
38.5439 234.875 li
38.5512 234.867 li
39.0654 234.565 39.5796 234.279 40.0869 234 cv
40.3663 233.847 40.6377 233.691 40.9102 233.545 cv
43.0855 232.361 45.2237 231.296 47.3032 230.355 cv
47.5234 230.26 47.7515 230.157 47.9717 230.061 cv
48.4273 229.855 48.8755 229.664 49.3164 229.48 cv
49.5591 229.378 49.794 229.275 50.0293 229.18 cv
55.4599 226.946 60.2945 225.689 63.8217 225.689 cv
65.0933 225.689 67.3564 225.881 68.187 227.166 cv
69.6636 229.436 66.8125 235.492 58.9868 242.973 cv
58.8032 243.148 58.6192 243.325 58.4356 243.494 cv
58.0825 243.825 57.7231 244.163 57.3477 244.494 cv
70.6265 225.587 mo
69.4214 223.727 67.1284 222.786 63.8217 222.786 cv
60.0302 222.786 55.0698 224.014 49.5073 226.248 cv
49.2798 226.336 49.0445 226.432 48.8022 226.534 cv
48.3613 226.711 47.9131 226.901 47.457 227.101 cv
47.2368 227.196 47.0166 227.292 46.7959 227.387 cv
44.1358 228.57 41.3657 229.951 38.5512 231.523 cv
38.5439 231.531 li
38.1689 231.73 37.8017 231.942 37.4273 232.155 cv
37.148 232.31 36.8759 232.472 36.604 232.633 cv
36.0747 232.942 35.5386 233.258 35.0093 233.573 cv
34.7377 233.735 34.4726 233.904 34.2012 234.066 cv
33.3335 234.603 32.4668 235.146 31.5996 235.712 cv
30.7178 236.286 29.8584 236.859 29.0132 237.438 cv
28.7564 237.616 28.499 237.792 28.249 237.968 cv
27.7421 238.313 27.2422 238.674 26.75 239.026 cv
26.4854 239.21 26.2285 239.401 25.9712 239.585 cv
22.9727 241.774 20.2466 243.986 17.8365 246.169 cv
17.6455 246.338 17.4619 246.507 17.2783 246.676 cv
16.918 247.006 16.5576 247.345 16.2124 247.675 cv
16.0288 247.852 15.8453 248.028 15.669 248.197 cv
7.6221 256.03 3.87448 263.239 6.46873 267.236 cv
7.6738 269.096 9.96628 270.036 13.2734 270.036 cv
17.065 270.036 22.0322 268.809 27.5874 266.582 cv
27.8228 266.486 28.0576 266.392 28.3003 266.296 cv
28.7412 266.112 29.1895 265.929 29.6377 265.729 cv
30.2989 265.443 li
32.959 264.26 35.7295 262.872 38.5439 261.313 cv
38.5512 261.307 li
38.9258 261.101 39.3007 260.888 39.6753 260.667 cv
39.9546 260.513 40.2265 260.351 40.5059 260.189 cv
41.0351 259.881 41.564 259.572 42.0932 259.249 cv
42.3579 259.087 42.6221 258.926 42.8941 258.757 cv
43.7612 258.228 44.628 257.684 45.4951 257.118 cv
46.3769 256.545 47.2368 255.972 48.0821 255.392 cv
48.3393 255.215 48.5961 255.038 48.8462 254.862 cv
49.3535 254.509 49.8525 254.157 50.3452 253.804 cv
50.6093 253.612 50.8667 253.429 51.1245 253.245 cv
54.1221 251.049 56.8486 248.837 59.2583 246.654 cv
59.4497 246.484 59.6333 246.315 59.8174 246.148 cv
60.1845 245.809 60.5371 245.479 60.8897 245.147 cv
61.0733 244.972 61.25 244.795 61.4263 244.626 cv
69.4726 236.792 73.2202 229.584 70.6265 225.587 cv
f
38.5512 253.261 mo
38.5512 239.563 li
42.3282 239.563 45.3994 242.627 45.3994 246.411 cv
45.3994 250.196 42.3282 253.261 38.5512 253.261 cv
.0588235 .462745 .517647 rgb
f
38.5439 261.313 mo
38.5439 260.224 li
38.5463 260.225 38.5488 260.226 38.5512 260.227 cv
38.5512 260.227 li
38.794 260.321 li
39.0874 260.446 39.3818 260.557 39.6753 260.667 cv
39.3007 260.888 38.9258 261.101 38.5512 261.307 cv
38.5439 261.313 li
42.8941 258.757 mo
42.6001 258.661 42.3062 258.55 42.0122 258.44 cv
41.4389 258.234 40.8662 258.022 40.2851 257.794 cv
39.999 257.691 39.7124 257.573 39.4185 257.456 cv
39.4185 257.456 li
39.4185 257.456 li
40.9175 256.573 42.4165 255.648 43.915 254.679 cv
45.4512 253.679 46.9135 252.687 48.2954 251.702 cv
48.5523 251.526 48.8022 251.342 49.0517 251.158 cv
49.5512 250.799 50.044 250.438 50.5215 250.078 cv
50.771 249.895 51.0214 249.703 51.271 249.519 cv
53.292 247.977 55.1293 246.471 56.7823 245.001 cv
56.7823 245.001 li
56.9951 245.133 57.1939 245.265 57.3994 245.404 cv
57.8179 245.669 58.2221 245.941 58.6265 246.213 cv
58.8398 246.36 59.0528 246.507 59.2583 246.654 cv
56.8486 248.837 54.1221 251.049 51.1245 253.245 cv
51.1245 253.245 li
50.8667 253.429 50.6093 253.612 50.3452 253.804 cv
49.8525 254.157 49.3535 254.509 48.8462 254.862 cv
48.5961 255.038 48.3393 255.215 48.0821 255.392 cv
48.0821 255.392 li
47.2368 255.972 46.3769 256.545 45.4951 257.118 cv
44.628 257.684 43.7612 258.228 42.8941 258.757 cv
42.8941 258.757 li
61.4263 244.626 mo
61.2207 244.479 61.0073 244.332 60.7944 244.185 cv
60.4053 243.913 60.0009 243.642 59.5967 243.376 cv
59.398 243.236 59.1924 243.105 58.9868 242.973 cv
58.9868 242.973 li
58.9868 242.973 li
65.498 236.749 68.5654 231.511 68.5617 228.619 cv
68.561 228.036 68.4351 227.547 68.187 227.166 cv
67.3564 225.881 65.0933 225.689 63.8217 225.689 cv
60.2945 225.689 55.4599 226.946 50.0293 229.18 cv
50.0293 229.18 li
49.794 229.275 49.5591 229.378 49.3164 229.48 cv
48.8755 229.664 48.4273 229.855 47.9717 230.061 cv
47.7515 230.157 47.5234 230.26 47.3032 230.355 cv
47.3032 230.355 li
45.2237 231.296 43.0855 232.361 40.9102 233.545 cv
40.9102 233.545 li
40.6236 233.42 40.3296 233.294 40.0357 233.185 cv
39.5435 232.978 39.0434 232.78 38.5512 232.597 cv
38.5439 232.594 li
38.5439 231.531 li
38.5512 231.523 li
41.3657 229.951 44.1358 228.57 46.7959 227.387 cv
47.0166 227.292 47.2368 227.196 47.457 227.101 cv
47.9131 226.901 48.3613 226.711 48.8022 226.534 cv
49.0445 226.432 49.2798 226.336 49.5073 226.248 cv
55.0698 224.014 60.0302 222.786 63.8217 222.786 cv
67.1284 222.786 69.4214 223.727 70.6265 225.587 cv
71.1761 226.434 71.441 227.425 71.4406 228.536 cv
71.4389 232.667 67.7675 238.452 61.4263 244.626 cv
61.4263 244.626 li
.0313725 .388235 .45098 rgb
f
73.9697 253.261 mo
73.9697 254.333 73.5367 255.303 72.8384 256.008 cv
72.6621 256.185 72.4707 256.346 72.2646 256.485 cv
71.8682 256.751 71.4272 256.941 70.9571 257.044 cv
70.7075 257.103 70.457 257.14 70.1929 257.14 cv
70.0898 257.146 li
67.9443 257.146 66.21 255.405 66.21 253.261 cv
66.21 252.951 66.247 252.65 66.3203 252.364 cv
66.3789 252.099 66.4668 251.842 66.5844 251.6 cv
66.7905 251.15 67.0918 250.747 67.4444 250.431 cv
67.621 250.255 67.8193 250.108 68.0249 249.975 cv
68.6201 249.601 69.333 249.38 70.0898 249.38 cv
72.2358 249.38 73.9697 251.114 73.9697 253.261 cv
.988235 .380392 .121569 rgb
f
71.501 261.094 mo
70.6997 262.894 67.9004 263.886 63.6236 263.886 cv
59.9199 263.886 55.3271 263.166 50.3008 261.836 cv
50.0659 261.769 49.8237 261.703 49.5732 261.63 cv
49.1182 261.513 48.6548 261.38 48.1924 261.247 cv
47.9644 261.182 47.7295 261.115 47.5015 261.042 cv
45.7378 260.513 43.9302 259.917 42.0932 259.249 cv
41.7988 259.146 41.498 259.043 41.2036 258.926 cv
40.6309 258.72 40.0577 258.5 39.477 258.271 cv
39.1904 258.161 38.8965 258.051 38.6104 257.927 cv
38.5512 257.904 li
37.1182 257.338 35.6782 256.728 34.2378 256.089 cv
32.4082 255.273 30.6153 254.421 28.8882 253.547 cv
28.6309 253.421 28.3813 253.289 28.1387 253.157 cv
27.6391 252.907 27.1543 252.65 26.669 252.386 cv
26.4121 252.253 26.1548 252.113 25.9048 251.981 cv
23.7442 250.799 21.687 249.586 19.7691 248.344 cv
19.5561 248.212 19.3428 248.072 19.1299 247.933 cv
18.7188 247.661 18.3066 247.389 17.9102 247.117 cv
17.6967 246.97 17.4839 246.822 17.2783 246.676 cv
15.3379 245.324 13.5669 243.957 12.0025 242.59 cv
6.85061 238.101 4.52149 234.14 5.59424 231.73 cv
6.39505 229.93 9.19529 228.938 13.479 228.938 cv
17.1826 228.938 21.7676 229.657 26.794 230.987 cv
27.0293 231.054 27.2789 231.119 27.5215 231.193 cv
27.9771 231.311 28.44 231.443 28.9028 231.575 cv
29.1308 231.641 29.3662 231.715 29.5937 231.78 cv
31.3648 232.31 33.1724 232.912 35.0093 233.573 cv
35.3032 233.677 35.6045 233.787 35.8989 233.904 cv
36.4643 234.11 37.0371 234.323 37.6109 234.56 cv
37.9043 234.661 38.1988 234.779 38.4927 234.897 cv
38.5512 234.919 li
39.9839 235.492 41.417 236.095 42.8569 236.733 cv
44.687 237.55 46.4726 238.401 48.2065 239.283 cv
48.457 239.409 48.7066 239.533 48.9565 239.666 cv
49.4487 239.916 49.941 240.173 50.4257 240.437 cv
50.6831 240.569 50.9404 240.709 51.1904 240.849 cv
53.3579 242.032 55.4229 243.252 57.3477 244.494 cv
57.5537 244.626 57.7597 244.758 57.9653 244.89 cv
58.3769 245.163 58.7881 245.435 59.1851 245.706 cv
59.398 245.853 59.6113 246 59.8174 246.148 cv
61.7568 247.499 63.5278 248.866 65.0933 250.232 cv
65.6221 250.695 66.1215 251.144 66.5844 251.6 cv
68.6573 253.568 70.1343 255.421 70.9571 257.044 cv
71.7803 258.64 71.9785 260.02 71.501 261.094 cv
72.2646 256.485 mo
71.3462 254.635 69.7222 252.599 67.4444 250.431 cv
67.0039 250.013 66.5337 249.586 66.0415 249.152 cv
64.5054 247.814 62.7783 246.477 60.8897 245.147 cv
60.6841 245.001 60.4711 244.854 60.2578 244.706 cv
59.8613 244.435 59.4644 244.163 59.0528 243.892 cv
58.8545 243.759 58.6416 243.626 58.4356 243.494 cv
56.1651 242.01 53.7031 240.555 51.0947 239.166 cv
50.8448 239.026 50.5874 238.895 50.3306 238.762 cv
49.8379 238.505 49.3457 238.247 48.8462 237.998 cv
48.6035 237.865 48.354 237.74 48.0967 237.622 cv
46.583 236.866 45.0322 236.131 43.4448 235.426 cv
42.3282 234.927 41.2036 234.448 40.0869 234 cv
39.7929 233.868 39.5063 233.751 39.2124 233.641 cv
38.9917 233.545 38.772 233.457 38.5512 233.383 cv
38.1988 233.236 37.8457 233.097 37.4931 232.964 cv
37.1919 232.847 36.8979 232.736 36.604 232.633 cv
34.289 231.767 32.0112 231.01 29.7993 230.355 cv
29.564 230.282 29.3364 230.216 29.1088 230.149 cv
28.6456 230.018 28.1827 229.886 27.7271 229.768 cv
27.4849 229.694 27.2422 229.628 26.9995 229.568 cv
21.9072 228.232 17.2485 227.504 13.479 227.504 cv
8.5264 227.504 5.34428 228.761 4.28618 231.149 cv
2.91948 234.221 5.32229 238.666 11.061 243.67 cv
12.5972 245.008 14.3238 246.353 16.2124 247.675 cv
16.418 247.83 16.6313 247.977 16.8442 248.108 cv
17.2412 248.396 17.6377 248.659 18.0498 248.933 cv
18.2554 249.072 18.4682 249.212 18.6816 249.344 cv
20.9448 250.821 23.3989 252.269 25.9932 253.649 cv
26.2505 253.79 26.5074 253.929 26.7647 254.062 cv
27.2569 254.317 27.749 254.575 28.249 254.825 cv
28.499 254.95 28.7486 255.082 28.9985 255.2 cv
30.5122 255.957 32.0703 256.691 33.6573 257.397 cv
34.7739 257.896 35.8989 258.374 37.0152 258.823 cv
37.3096 258.955 37.5962 259.072 37.8897 259.183 cv
38.1103 259.278 38.3306 259.366 38.5512 259.44 cv
38.9116 259.587 39.2642 259.727 39.6167 259.859 cv
39.9179 259.976 40.212 260.087 40.5059 260.189 cv
42.8129 261.057 45.0839 261.814 47.2954 262.467 cv
47.5307 262.541 47.7583 262.606 47.9863 262.673 cv
48.4492 262.806 48.9121 262.937 49.3676 263.056 cv
49.6104 263.128 49.8525 263.195 50.0953 263.254 cv
55.1875 264.591 59.8462 265.318 63.6236 265.318 cv
68.5688 265.318 71.7505 264.063 72.8085 261.674 cv
73.4556 260.227 73.2641 258.462 72.2646 256.485 cv
.105882 .584314 .635294 rgb
f
70.832 260.792 mo
70.1636 262.291 67.5327 263.15 63.6236 263.15 cv
59.9492 263.15 55.4009 262.431 50.4038 261.101 cv
50.1611 261.034 49.9116 260.968 49.6689 260.902 cv
49.2138 260.777 48.7578 260.645 48.2954 260.513 cv
48.0601 260.446 47.832 260.373 47.5967 260.307 cv
46.061 259.844 44.4887 259.33 42.8941 258.757 cv
42.6001 258.661 42.3062 258.55 42.0122 258.44 cv
41.4389 258.234 40.8662 258.022 40.2851 257.794 cv
39.999 257.691 39.7124 257.573 39.4185 257.456 cv
39.1314 257.354 38.8379 257.235 38.5512 257.118 cv
37.2207 256.581 35.8765 256.016 34.5391 255.421 cv
32.5845 254.546 30.6811 253.635 28.8442 252.694 cv
28.5869 252.569 28.3443 252.436 28.0947 252.305 cv
27.6025 252.055 27.1172 251.798 26.6323 251.54 cv
26.3823 251.4 26.125 251.261 25.8755 251.121 cv
23.9282 250.057 22.0762 248.954 20.335 247.837 cv
20.1216 247.697 19.9087 247.558 19.6953 247.418 cv
19.2842 247.153 18.8726 246.882 18.4756 246.603 cv
18.2627 246.463 18.0498 246.315 17.8365 246.169 cv
15.8598 244.802 14.0669 243.414 12.4795 242.032 cv
7.66647 237.836 5.34428 234.096 6.26323 232.031 cv
6.93162 230.532 9.56251 229.672 13.479 229.672 cv
17.1455 229.672 21.7016 230.399 26.6987 231.723 cv
26.9409 231.788 27.1831 231.855 27.4258 231.928 cv
27.8818 232.046 28.3443 232.178 28.8071 232.317 cv
29.0352 232.384 29.2631 232.449 29.4981 232.523 cv
31.0415 232.986 32.6137 233.501 34.2012 234.066 cv
34.4951 234.169 34.7959 234.272 35.0903 234.39 cv
35.6635 234.588 36.2364 234.809 36.8096 235.029 cv
37.1035 235.139 37.3901 235.25 37.6841 235.366 cv
37.9707 235.478 38.2573 235.595 38.5512 235.705 cv
39.8814 236.241 41.2188 236.814 42.5561 237.41 cv
44.5107 238.277 46.4136 239.187 48.251 240.128 cv
48.501 240.254 48.7504 240.386 49.0005 240.511 cv
49.4927 240.769 49.9775 241.024 50.4629 241.282 cv
50.7202 241.422 50.9697 241.562 51.2192 241.701 cv
53.1743 242.773 55.0337 243.876 56.7823 245.001 cv
56.9951 245.133 57.1939 245.265 57.3994 245.404 cv
57.8179 245.669 58.2221 245.941 58.6265 246.213 cv
58.8398 246.36 59.0528 246.507 59.2583 246.654 cv
61.2348 248.02 63.0357 249.409 64.6152 250.791 cv
65.2256 251.32 65.7988 251.85 66.3203 252.364 cv
68.1059 254.098 69.4214 255.722 70.1929 257.14 cv
71.0083 258.617 71.2437 259.873 70.832 260.792 cv
72.8384 256.008 mo
71.8682 254.134 70.2514 252.106 68.0249 249.975 cv
67.5479 249.519 67.0478 249.064 66.5186 248.602 cv
64.9976 247.279 63.2925 245.941 61.4263 244.626 cv
61.2207 244.479 61.0073 244.332 60.7944 244.185 cv
60.4053 243.913 60.0009 243.642 59.5967 243.376 cv
59.398 243.236 59.1924 243.105 58.9868 242.973 cv
56.5322 241.37 53.8726 239.805 51.0434 238.313 cv
50.7935 238.174 50.5362 238.042 50.2788 237.909 cv
49.7867 237.652 49.2944 237.395 48.7876 237.146 cv
48.5376 237.021 48.2875 236.895 48.0303 236.77 cv
46.6342 236.079 45.2017 235.404 43.7392 234.757 cv
42.7988 234.338 41.8506 233.935 40.9102 233.545 cv
40.6236 233.42 40.3296 233.294 40.0357 233.185 cv
39.5435 232.978 39.0434 232.78 38.5512 232.597 cv
38.3086 232.501 li
38.0151 232.376 37.7207 232.266 37.4273 232.155 cv
34.8697 231.193 32.3491 230.341 29.9096 229.62 cv
29.6748 229.547 29.4468 229.48 29.2188 229.415 cv
28.7564 229.282 28.3003 229.157 27.8447 229.041 cv
27.6025 228.967 27.3599 228.901 27.1172 228.842 cv
21.9883 227.504 17.3003 226.77 13.479 226.77 cv
8.20998 226.77 4.80077 228.181 3.61036 230.848 cv
2.10402 234.242 4.57328 238.989 10.5761 244.222 cv
12.0976 245.544 13.8022 246.882 15.669 248.197 cv
15.8745 248.344 16.0806 248.483 16.293 248.638 cv
16.6904 248.91 17.0942 249.182 17.5059 249.454 cv
17.7114 249.594 17.9175 249.733 18.1309 249.865 cv
20.5776 251.46 23.2373 253.025 26.0518 254.509 cv
26.3018 254.648 26.5591 254.78 26.816 254.914 cv
27.3086 255.17 27.8081 255.428 28.315 255.677 cv
28.5649 255.803 28.8144 255.927 29.065 256.052 cv
30.4605 256.743 31.9009 257.419 33.356 258.066 cv
34.3037 258.484 35.2441 258.896 36.1924 259.286 cv
36.479 259.402 36.7656 259.528 37.0595 259.638 cv
37.5591 259.844 38.0513 260.043 38.5512 260.227 cv
38.794 260.321 li
39.0874 260.446 39.3818 260.557 39.6753 260.667 cv
42.2251 261.637 44.7456 262.482 47.1856 263.202 cv
47.4209 263.275 47.6485 263.342 47.876 263.407 cv
48.3393 263.541 48.7944 263.665 49.2505 263.782 cv
49.4927 263.856 49.7349 263.923 49.9775 263.98 cv
55.107 265.318 59.8023 266.053 63.6236 266.053 cv
68.8847 266.053 72.2945 264.643 73.4849 261.976 cv
74.2344 260.285 73.9996 258.265 72.8384 256.008 cv
.988235 .380392 .121569 rgb
f
70.0898 257.146 mo
67.9443 257.146 66.21 255.405 66.21 253.261 cv
66.21 252.951 66.247 252.65 66.3203 252.364 cv
66.3203 252.364 li
66.3203 252.364 li
66.3203 252.364 li
68.1059 254.098 69.4214 255.722 70.1929 257.14 cv
70.0898 257.146 li
.988235 .219608 .0156863 rgb
f
72.8384 256.008 mo
71.8682 254.134 70.2514 252.106 68.0249 249.975 cv
68.6201 249.601 69.333 249.38 70.0898 249.38 cv
72.2358 249.38 73.9697 251.114 73.9697 253.261 cv
73.9697 254.333 73.5367 255.303 72.8384 256.008 cv
72.8384 256.008 li
f
63.6236 266.053 mo
59.8023 266.053 55.107 265.318 49.9775 263.98 cv
49.9775 263.98 li
49.7349 263.923 49.4927 263.856 49.2505 263.782 cv
48.7944 263.665 48.3393 263.541 47.876 263.407 cv
47.6485 263.342 47.4209 263.275 47.1856 263.202 cv
47.1856 263.202 li
44.7456 262.482 42.2251 261.637 39.6753 260.667 cv
39.6753 260.667 li
39.3818 260.557 39.0874 260.446 38.794 260.321 cv
38.5512 260.227 li
38.5512 257.118 li
38.8379 257.235 39.1314 257.354 39.4185 257.456 cv
39.7124 257.573 39.999 257.691 40.2851 257.794 cv
40.8662 258.022 41.4389 258.234 42.0122 258.44 cv
42.3062 258.55 42.6001 258.661 42.8941 258.757 cv
44.4887 259.33 46.061 259.844 47.5967 260.307 cv
47.832 260.373 48.0601 260.446 48.2954 260.513 cv
48.7578 260.645 49.2138 260.777 49.6689 260.902 cv
49.9116 260.968 50.1611 261.034 50.4038 261.101 cv
55.4009 262.431 59.9492 263.15 63.6236 263.15 cv
67.5327 263.15 70.1636 262.291 70.832 260.792 cv
70.9655 260.494 71.0309 260.161 71.0306 259.796 cv
71.0301 259.035 70.7439 258.138 70.1929 257.14 cv
70.1929 257.14 li
69.4214 255.722 68.1059 254.098 66.3203 252.364 cv
66.3203 252.364 li
65.7988 251.85 65.2256 251.32 64.6152 250.791 cv
63.0357 249.409 61.2348 248.02 59.2583 246.654 cv
59.2583 246.654 li
59.0528 246.507 58.8398 246.36 58.6265 246.213 cv
58.2221 245.941 57.8179 245.669 57.3994 245.404 cv
57.1939 245.265 56.9951 245.133 56.7823 245.001 cv
56.7823 245.001 li
55.0337 243.876 53.1743 242.773 51.2192 241.701 cv
51.2192 241.701 li
50.9697 241.562 50.7202 241.422 50.4629 241.282 cv
49.9775 241.024 49.4927 240.769 49.0005 240.511 cv
48.7504 240.386 48.501 240.254 48.251 240.128 cv
48.251 240.128 li
46.4136 239.187 44.5107 238.277 42.5561 237.41 cv
41.2188 236.814 39.8814 236.241 38.5512 235.705 cv
38.5512 232.597 li
39.0434 232.78 39.5435 232.978 40.0357 233.185 cv
40.3296 233.294 40.6236 233.42 40.9102 233.545 cv
41.8506 233.935 42.7988 234.338 43.7392 234.757 cv
45.2017 235.404 46.6342 236.079 48.0303 236.77 cv
48.2875 236.895 48.5376 237.021 48.7876 237.146 cv
49.2944 237.395 49.7867 237.652 50.2788 237.909 cv
50.5362 238.042 50.7935 238.174 51.0434 238.313 cv
53.8726 239.805 56.5322 241.37 58.9868 242.973 cv
59.1924 243.105 59.398 243.236 59.5967 243.376 cv
60.0009 243.642 60.4053 243.913 60.7944 244.185 cv
61.0073 244.332 61.2207 244.479 61.4263 244.626 cv
63.2925 245.941 64.9976 247.279 66.5186 248.602 cv
67.0478 249.064 67.5479 249.519 68.0249 249.975 cv
68.0249 249.975 li
70.2514 252.106 71.8682 254.134 72.8384 256.008 cv
72.8384 256.008 li
72.8384 256.008 li
72.8384 256.008 li
73.5505 257.392 73.9142 258.687 73.9161 259.872 cv
73.9174 260.619 73.7747 261.322 73.4849 261.976 cv
72.2945 264.643 68.8847 266.053 63.6236 266.053 cv
f
152.177 370.486 mo
147.374 370.486 143.482 365.555 143.482 359.471 cv
143.482 332.857 li
143.482 329.096 145.889 326.045 148.859 326.045 cv
152.383 326.045 li
164.255 326.045 174.736 333.595 180.998 345.111 cv
186.749 355.688 180.717 370.124 170.581 370.253 cv
152.177 370.486 li
.894118 .415686 .364706 rgb
f
157.693 367.183 mo
149.342 367.183 li
148.139 367.183 147.164 366.207 147.164 365.004 cv
147.164 355.722 li
147.164 354.518 148.139 353.543 149.342 353.543 cv
150.545 353.543 151.521 354.518 151.521 355.722 cv
151.521 362.825 li
157.693 362.825 li
158.896 362.825 159.872 363.8 159.872 365.004 cv
159.872 366.207 158.896 367.183 157.693 367.183 cv
.937255 .686275 .670588 rgb
f
174.157 367.183 mo
164.421 367.183 li
163.218 367.183 162.243 366.207 162.243 365.004 cv
162.243 363.8 163.218 362.825 164.421 362.825 cv
174.157 362.825 li
175.36 362.825 176.335 363.8 176.335 365.004 cv
176.335 366.207 175.36 367.183 174.157 367.183 cv
f
179.5 360.082 mo
156.702 360.082 li
155.499 360.082 154.523 359.107 154.523 357.903 cv
154.523 351.149 li
148.37 351.149 li
147.167 351.149 146.191 350.174 146.191 348.971 cv
146.191 347.767 147.167 346.792 148.37 346.792 cv
156.702 346.792 li
157.904 346.792 158.88 347.767 158.88 348.971 cv
158.88 355.726 li
177.322 355.726 li
177.322 351.754 li
177.322 350.55 178.297 349.575 179.5 349.575 cv
180.703 349.575 181.679 350.55 181.679 351.754 cv
181.679 357.903 li
181.679 359.107 180.703 360.082 179.5 360.082 cv
f
171.777 353.337 mo
162.057 353.337 li
160.854 353.337 159.879 352.362 159.879 351.159 cv
159.879 349.955 160.854 348.98 162.057 348.98 cv
169.598 348.98 li
169.598 339.654 li
169.598 338.45 170.574 337.476 171.777 337.476 cv
172.98 337.476 173.955 338.45 173.955 339.654 cv
173.955 351.159 li
173.955 352.362 172.98 353.337 171.777 353.337 cv
f
164.421 343.221 mo
156.503 343.221 li
155.3 343.221 154.324 342.246 154.324 341.042 cv
154.324 333.7 li
150.549 333.7 li
150.549 341.042 li
150.549 342.246 149.573 343.221 148.37 343.221 cv
147.167 343.221 146.191 342.246 146.191 341.042 cv
146.191 331.521 li
146.191 330.318 147.167 329.343 148.37 329.343 cv
156.503 329.343 li
157.706 329.343 158.682 330.318 158.682 331.521 cv
158.682 338.863 li
162.243 338.863 li
162.243 333.307 li
162.243 332.103 163.218 331.129 164.421 331.129 cv
165.625 331.129 166.6 332.103 166.6 333.307 cv
166.6 341.042 li
166.6 342.246 165.625 343.221 164.421 343.221 cv
f
152.177 370.486 mo
147.374 370.486 143.482 365.555 143.482 359.471 cv
143.482 332.857 li
143.482 329.096 145.889 326.045 148.859 326.045 cv
152.383 326.045 li
164.255 326.045 174.736 333.595 180.998 345.111 cv
182.537 347.941 183.233 351.048 183.231 354.082 cv
183.228 362.389 178.005 370.158 170.581 370.253 cv
152.177 370.486 li
164.421 362.825 mo
163.218 362.825 162.243 363.8 162.243 365.004 cv
162.243 366.207 163.218 367.183 164.421 367.183 cv
174.157 367.183 li
175.36 367.183 176.335 366.207 176.335 365.004 cv
176.335 363.8 175.36 362.825 174.157 362.825 cv
164.421 362.825 li
149.342 353.543 mo
148.139 353.543 147.164 354.518 147.164 355.722 cv
147.164 365.004 li
147.164 366.207 148.139 367.183 149.342 367.183 cv
157.693 367.183 li
158.896 367.183 159.872 366.207 159.872 365.004 cv
159.872 363.8 158.896 362.825 157.693 362.825 cv
151.521 362.825 li
151.521 355.722 li
151.521 354.518 150.545 353.543 149.342 353.543 cv
148.37 346.792 mo
147.167 346.792 146.191 347.767 146.191 348.971 cv
146.191 350.174 147.167 351.149 148.37 351.149 cv
154.523 351.149 li
154.523 357.903 li
154.523 359.107 155.499 360.082 156.702 360.082 cv
179.5 360.082 li
180.703 360.082 181.679 359.107 181.679 357.903 cv
181.679 351.754 li
181.679 350.55 180.703 349.575 179.5 349.575 cv
178.297 349.575 177.322 350.55 177.322 351.754 cv
177.322 355.726 li
158.88 355.726 li
158.88 348.971 li
158.88 347.767 157.904 346.792 156.702 346.792 cv
148.37 346.792 li
162.057 348.98 mo
160.854 348.98 159.879 349.955 159.879 351.159 cv
159.879 352.362 160.854 353.337 162.057 353.337 cv
171.777 353.337 li
172.98 353.337 173.955 352.362 173.955 351.159 cv
173.955 339.654 li
173.955 338.45 172.98 337.476 171.777 337.476 cv
170.574 337.476 169.598 338.45 169.598 339.654 cv
169.598 348.98 li
162.057 348.98 li
150.549 333.7 mo
154.324 333.7 li
154.324 341.042 li
154.324 342.246 155.3 343.221 156.503 343.221 cv
164.421 343.221 li
165.625 343.221 166.6 342.246 166.6 341.042 cv
166.6 333.307 li
166.6 332.103 165.625 331.129 164.421 331.129 cv
163.218 331.129 162.243 332.103 162.243 333.307 cv
162.243 338.863 li
158.682 338.863 li
158.682 331.521 li
158.682 330.318 157.706 329.343 156.503 329.343 cv
148.37 329.343 li
147.167 329.343 146.191 330.318 146.191 331.521 cv
146.191 341.042 li
146.191 342.246 147.167 343.221 148.37 343.221 cv
149.573 343.221 150.549 342.246 150.549 341.042 cv
150.549 333.7 li
.847059 .294118 .247059 rgb
f
157.693 367.183 mo
149.342 367.183 li
148.139 367.183 147.164 366.207 147.164 365.004 cv
147.164 355.722 li
147.164 354.518 148.139 353.543 149.342 353.543 cv
150.545 353.543 151.521 354.518 151.521 355.722 cv
151.521 362.825 li
157.693 362.825 li
158.896 362.825 159.872 363.8 159.872 365.004 cv
159.872 366.207 158.896 367.183 157.693 367.183 cv
.886274 .486274 .454902 rgb
f
174.157 367.183 mo
164.421 367.183 li
163.218 367.183 162.243 366.207 162.243 365.004 cv
162.243 363.8 163.218 362.825 164.421 362.825 cv
174.157 362.825 li
175.36 362.825 176.335 363.8 176.335 365.004 cv
176.335 366.207 175.36 367.183 174.157 367.183 cv
f
179.5 360.082 mo
156.702 360.082 li
155.499 360.082 154.523 359.107 154.523 357.903 cv
154.523 351.149 li
148.37 351.149 li
147.167 351.149 146.191 350.174 146.191 348.971 cv
146.191 347.767 147.167 346.792 148.37 346.792 cv
156.702 346.792 li
157.904 346.792 158.88 347.767 158.88 348.971 cv
158.88 355.726 li
177.322 355.726 li
177.322 351.754 li
177.322 350.55 178.297 349.575 179.5 349.575 cv
180.703 349.575 181.679 350.55 181.679 351.754 cv
181.679 357.903 li
181.679 359.107 180.703 360.082 179.5 360.082 cv
f
171.777 353.337 mo
162.057 353.337 li
160.854 353.337 159.879 352.362 159.879 351.159 cv
159.879 349.955 160.854 348.98 162.057 348.98 cv
169.598 348.98 li
169.598 339.654 li
169.598 338.45 170.574 337.476 171.777 337.476 cv
172.98 337.476 173.955 338.45 173.955 339.654 cv
173.955 351.159 li
173.955 352.362 172.98 353.337 171.777 353.337 cv
f
164.421 343.221 mo
156.503 343.221 li
155.3 343.221 154.324 342.246 154.324 341.042 cv
154.324 333.7 li
150.549 333.7 li
150.549 341.042 li
150.549 342.246 149.573 343.221 148.37 343.221 cv
147.167 343.221 146.191 342.246 146.191 341.042 cv
146.191 331.521 li
146.191 330.318 147.167 329.343 148.37 329.343 cv
156.503 329.343 li
157.706 329.343 158.682 330.318 158.682 331.521 cv
158.682 338.863 li
162.243 338.863 li
162.243 333.307 li
162.243 332.103 163.218 331.129 164.421 331.129 cv
165.625 331.129 166.6 332.103 166.6 333.307 cv
166.6 341.042 li
166.6 342.246 165.625 343.221 164.421 343.221 cv
f
134.788 370.486 mo
139.59 370.486 143.482 365.555 143.482 359.471 cv
143.482 332.857 li
143.482 329.096 141.075 326.045 138.106 326.045 cv
134.582 326.045 li
122.709 326.045 112.228 333.595 105.966 345.111 cv
100.215 355.688 106.247 370.124 116.383 370.253 cv
134.788 370.486 li
cp
.894118 .415686 .364706 rgb
f
137.622 367.183 mo
129.271 367.183 li
128.068 367.183 127.093 366.207 127.093 365.004 cv
127.093 363.8 128.068 362.825 129.271 362.825 cv
135.444 362.825 li
135.444 355.722 li
135.444 354.518 136.419 353.543 137.622 353.543 cv
138.825 353.543 139.801 354.518 139.801 355.722 cv
139.801 365.004 li
139.801 366.207 138.825 367.183 137.622 367.183 cv
cp
.937255 .686275 .670588 rgb
f
122.543 367.183 mo
112.807 367.183 li
111.604 367.183 110.629 366.207 110.629 365.004 cv
110.629 363.8 111.604 362.825 112.807 362.825 cv
122.543 362.825 li
123.747 362.825 124.722 363.8 124.722 365.004 cv
124.722 366.207 123.747 367.183 122.543 367.183 cv
cp
f
130.263 360.082 mo
107.464 360.082 li
106.261 360.082 105.286 359.107 105.286 357.903 cv
105.286 351.754 li
105.286 350.55 106.261 349.575 107.464 349.575 cv
108.667 349.575 109.643 350.55 109.643 351.754 cv
109.643 355.726 li
128.084 355.726 li
128.084 348.971 li
128.084 347.767 129.06 346.792 130.263 346.792 cv
138.594 346.792 li
139.797 346.792 140.772 347.767 140.772 348.971 cv
140.772 350.174 139.797 351.149 138.594 351.149 cv
132.441 351.149 li
132.441 357.903 li
132.441 359.107 131.466 360.082 130.263 360.082 cv
cp
f
124.907 353.337 mo
115.188 353.337 li
113.984 353.337 113.009 352.362 113.009 351.159 cv
113.009 339.654 li
113.009 338.45 113.984 337.476 115.188 337.476 cv
116.391 337.476 117.366 338.45 117.366 339.654 cv
117.366 348.98 li
124.907 348.98 li
126.11 348.98 127.085 349.955 127.085 351.159 cv
127.085 352.362 126.11 353.337 124.907 353.337 cv
cp
f
138.594 343.221 mo
137.391 343.221 136.416 342.246 136.416 341.042 cv
136.416 333.7 li
132.64 333.7 li
132.64 341.042 li
132.64 342.246 131.665 343.221 130.461 343.221 cv
122.543 343.221 li
121.34 343.221 120.365 342.246 120.365 341.042 cv
120.365 333.307 li
120.365 332.104 121.34 331.129 122.543 331.129 cv
123.747 331.129 124.722 332.104 124.722 333.307 cv
124.722 338.863 li
128.283 338.863 li
128.283 331.521 li
128.283 330.318 129.258 329.343 130.461 329.343 cv
138.594 329.343 li
139.797 329.343 140.772 330.318 140.772 331.521 cv
140.772 341.042 li
140.772 342.246 139.797 343.221 138.594 343.221 cv
cp
f
351.866 11.7065 mo
368.626 11.9858 382.185 25.7129 382.185 42.54 cv
382.185 59.3745 368.626 73.1016 351.866 73.3809 cv
351.689 73.3882 351.52 73.3882 351.343 73.3882 cv
334.332 73.3882 320.496 59.5513 320.496 42.54 cv
320.496 25.5361 334.332 11.6992 351.343 11.6992 cv
351.52 11.6992 351.689 11.6992 351.866 11.7065 cv
.509804 .839216 .847059 rgb
f
382.185 42.54 mo
382.185 25.7129 368.626 11.9858 351.866 11.7065 cv
351.689 11.6992 351.52 11.6992 351.343 11.6992 cv
334.332 11.6992 320.496 25.5361 320.496 42.54 cv
320.496 59.5513 334.332 73.3882 351.343 73.3882 cv
351.52 73.3882 351.689 73.3882 351.866 73.3809 cv
368.626 73.1016 382.185 59.3745 382.185 42.54 cv
351.866 5.54879 mo
372.029 5.82817 388.342 22.3178 388.342 42.54 cv
388.342 62.7696 372.029 79.2588 351.866 79.5385 cv
351.689 79.5454 351.52 79.5454 351.343 79.5454 cv
330.938 79.5454 314.337 62.9463 314.337 42.54 cv
314.337 22.1411 330.938 5.54146 351.343 5.54146 cv
351.52 5.54146 351.689 5.54146 351.866 5.54879 cv
.105882 .584314 .635294 rgb
f
351.501 44.6777 mo
351.501 46.3984 350.106 47.7935 348.386 47.7935 cv
346.666 47.7935 345.271 46.3984 345.271 44.6777 cv
345.271 42.957 346.666 41.562 348.386 41.562 cv
350.106 41.562 351.501 42.957 351.501 44.6777 cv
f
329.977 44.1128 mo
329.977 45.1387 329.145 45.9707 328.12 45.9707 cv
327.092 45.9707 326.261 45.1387 326.261 44.1128 cv
326.261 43.0864 327.092 42.2549 328.12 42.2549 cv
329.145 42.2549 329.977 43.0864 329.977 44.1128 cv
cp
.0509804 .576471 .34902 rgb
f
348.467 55.4063 mo
348.467 57.0444 347.138 58.373 345.5 58.373 cv
343.862 58.373 342.533 57.0444 342.533 55.4063 cv
342.533 53.7671 343.862 52.4395 345.5 52.4395 cv
347.138 52.4395 348.467 53.7671 348.467 55.4063 cv
cp
f
339.818 38.1763 mo
339.818 38.8413 339.279 39.3813 338.613 39.3813 cv
337.947 39.3813 337.408 38.8413 337.408 38.1763 cv
337.408 37.5103 337.947 36.9707 338.613 36.9707 cv
339.279 36.9707 339.818 37.5103 339.818 38.1763 cv
cp
f
348.34 34.082 mo
348.34 35.6509 347.069 36.9224 345.5 36.9224 cv
343.931 36.9224 342.66 35.6509 342.66 34.082 cv
342.66 32.5137 343.931 31.2422 345.5 31.2422 cv
347.069 31.2422 348.34 32.5137 348.34 34.082 cv
cp
.992157 .737255 0 rgb
f
356.314 35.7378 mo
356.314 37.1489 355.17 38.2929 353.759 38.2929 cv
352.348 38.2929 351.204 37.1489 351.204 35.7378 cv
351.204 34.3266 352.348 33.1826 353.759 33.1826 cv
355.17 33.1826 356.314 34.3266 356.314 35.7378 cv
.105882 .584314 .635294 rgb
f
366.599 44.6777 mo
366.599 46.5762 365.06 48.1152 363.162 48.1152 cv
361.263 48.1152 359.724 46.5762 359.724 44.6777 cv
359.724 42.7788 361.263 41.2398 363.162 41.2398 cv
365.06 41.2398 366.599 42.7788 366.599 44.6777 cv
.992157 .737255 0 rgb
f
356.906 52.3896 mo
356.906 53.8281 355.74 54.9947 354.3 54.9947 cv
352.862 54.9947 351.695 53.8281 351.695 52.3896 cv
351.695 50.9507 352.862 49.7842 354.3 49.7842 cv
355.74 49.7842 356.906 50.9507 356.906 52.3896 cv
f
341.881 44.8853 mo
341.881 45.9585 341.011 46.8291 339.938 46.8291 cv
338.865 46.8291 337.994 45.9585 337.994 44.8853 cv
337.994 43.812 338.865 42.9419 339.938 42.9419 cv
341.011 42.9419 341.881 43.812 341.881 44.8853 cv
cp
f
335.282 40.0835 mo
335.282 40.9629 334.569 41.6768 333.689 41.6768 cv
332.808 41.6768 332.095 40.9629 332.095 40.0835 cv
332.095 39.2036 332.808 38.4902 333.689 38.4902 cv
334.569 38.4902 335.282 39.2036 335.282 40.0835 cv
cp
f
341.384 31.375 mo
341.384 33.1807 339.92 34.6445 338.116 34.6445 cv
336.31 34.6445 334.846 33.1807 334.846 31.375 cv
334.846 29.5698 336.31 28.1064 338.116 28.1064 cv
339.92 28.1064 341.384 29.5698 341.384 31.375 cv
cp
f
337.68 23.9194 mo
337.68 24.9443 336.849 25.7749 335.824 25.7749 cv
334.799 25.7749 333.969 24.9443 333.969 23.9194 cv
333.969 22.894 334.799 22.0635 335.824 22.0635 cv
336.849 22.0635 337.68 22.894 337.68 23.9194 cv
cp
.0509804 .576471 .34902 rgb
f
346.055 19.4458 mo
346.055 21.0249 344.775 22.3047 343.196 22.3047 cv
341.617 22.3047 340.337 21.0249 340.337 19.4458 cv
340.337 17.8662 341.617 16.5859 343.196 16.5859 cv
344.775 16.5859 346.055 17.8662 346.055 19.4458 cv
cp
.105882 .584314 .635294 rgb
f
355.106 15.3926 mo
355.106 16.9517 353.842 18.2153 352.283 18.2153 cv
350.724 18.2153 349.46 16.9517 349.46 15.3926 cv
349.46 13.8339 350.724 12.5698 352.283 12.5698 cv
353.842 12.5698 355.106 13.8339 355.106 15.3926 cv
f
361.118 21.5884 mo
361.118 23.2422 359.777 24.5835 358.123 24.5835 cv
356.468 24.5835 355.127 23.2422 355.127 21.5884 cv
355.127 19.9341 356.468 18.5933 358.123 18.5933 cv
359.777 18.5933 361.118 19.9341 361.118 21.5884 cv
.992157 .737255 0 rgb
f
367.463 25.2344 mo
367.463 26.3882 366.529 27.3232 365.374 27.3232 cv
364.221 27.3232 363.286 26.3882 363.286 25.2344 cv
363.286 24.0806 364.221 23.1455 365.374 23.1455 cv
366.529 23.1455 367.463 24.0806 367.463 25.2344 cv
f
367.908 32.4487 mo
367.908 34.4219 366.308 36.0215 364.334 36.0215 cv
362.361 36.0215 360.761 34.4219 360.761 32.4487 cv
360.761 30.4755 362.361 28.8755 364.334 28.8755 cv
366.308 28.8755 367.908 30.4755 367.908 32.4487 cv
.105882 .584314 .635294 rgb
f
368.984 39.0606 mo
368.984 39.8852 368.315 40.5542 367.49 40.5542 cv
366.666 40.5542 365.997 39.8852 365.997 39.0606 cv
365.997 38.2358 366.666 37.5679 367.49 37.5679 cv
368.315 37.5679 368.984 38.2358 368.984 39.0606 cv
.992157 .737255 0 rgb
f
374.51 46.2236 mo
374.51 47.7851 373.245 49.0513 371.683 49.0513 cv
370.123 49.0513 368.855 47.7851 368.855 46.2236 cv
368.855 44.6626 370.123 43.396 371.683 43.396 cv
373.245 43.396 374.51 44.6626 374.51 46.2236 cv
.0509804 .576471 .34902 rgb
f
372.093 54.9947 mo
372.093 56.3697 370.978 57.4843 369.603 57.4843 cv
368.228 57.4843 367.113 56.3697 367.113 54.9947 cv
367.113 53.6191 368.228 52.5049 369.603 52.5049 cv
370.978 52.5049 372.093 53.6191 372.093 54.9947 cv
.105882 .584314 .635294 rgb
f
371.252 63.3052 mo
371.252 65.0831 369.81 66.5249 368.033 66.5249 cv
366.254 66.5249 364.813 65.0831 364.813 63.3052 cv
364.813 61.5274 366.254 60.0859 368.033 60.0859 cv
369.81 60.0859 371.252 61.5274 371.252 63.3052 cv
.0509804 .576471 .34902 rgb
f
361.807 69.5239 mo
361.807 70.1948 361.263 70.7388 360.592 70.7388 cv
359.92 70.7388 359.377 70.1948 359.377 69.5239 cv
359.377 68.8526 359.92 68.3086 360.592 68.3086 cv
361.263 68.3086 361.807 68.8526 361.807 69.5239 cv
f
351.889 64.7568 mo
351.889 65.7241 351.105 66.5083 350.138 66.5083 cv
349.17 66.5083 348.386 65.7241 348.386 64.7568 cv
348.386 63.7891 349.17 63.0049 350.138 63.0049 cv
351.105 63.0049 351.889 63.7891 351.889 64.7568 cv
.992157 .737255 0 rgb
f
343.907 64.5083 mo
343.907 65.3555 343.219 66.0425 342.373 66.0425 cv
341.526 66.0425 340.839 65.3555 340.839 64.5083 cv
340.839 63.6611 341.526 62.9746 342.373 62.9746 cv
343.219 62.9746 343.907 63.6611 343.907 64.5083 cv
cp
f
335.939 61.75 mo
335.939 62.5757 335.27 63.2451 334.445 63.2451 cv
333.619 63.2451 332.95 62.5757 332.95 61.75 cv
332.95 60.9248 333.619 60.2559 334.445 60.2559 cv
335.27 60.2559 335.939 60.9248 335.939 61.75 cv
cp
f
333.55 53.2144 mo
333.55 53.8569 333.031 54.3779 332.387 54.3779 cv
331.745 54.3779 331.224 53.8569 331.224 53.2144 cv
331.224 52.5718 331.745 52.0508 332.387 52.0508 cv
333.031 52.0508 333.55 52.5718 333.55 53.2144 cv
cp
.105882 .584314 .635294 rgb
f
326.687 49.0029 mo
326.687 50.0122 325.87 50.8301 324.861 50.8301 cv
323.852 50.8301 323.035 50.0122 323.035 49.0029 cv
323.035 47.9946 323.852 47.1768 324.861 47.1768 cv
325.87 47.1768 326.687 47.9946 326.687 49.0029 cv
cp
f
326.715 37.9307 mo
326.715 38.8682 325.957 39.6279 325.019 39.6279 cv
324.081 39.6279 323.322 38.8682 323.322 37.9307 cv
323.322 36.9937 324.081 36.2334 325.019 36.2334 cv
325.957 36.2334 326.715 36.9937 326.715 37.9307 cv
cp
.0509804 .576471 .34902 rgb
f
349.54 28.1064 mo
349.54 29.2852 348.583 30.2407 347.406 30.2407 cv
346.227 30.2407 345.271 29.2852 345.271 28.1064 cv
345.271 26.9272 346.227 25.9717 347.406 25.9717 cv
348.583 25.9717 349.54 26.9272 349.54 28.1064 cv
cp
f
341.79 23.5503 mo
341.79 24.3779 341.119 25.0488 340.291 25.0488 cv
339.463 25.0488 338.792 24.3779 338.792 23.5503 cv
338.792 22.7231 339.463 22.0522 340.291 22.0522 cv
341.119 22.0522 341.79 22.7231 341.79 23.5503 cv
cp
f
353.463 20.9248 mo
353.463 22.1216 352.494 23.0923 351.295 23.0923 cv
350.098 23.0923 349.127 22.1216 349.127 20.9248 cv
349.127 19.7276 350.098 18.7568 351.295 18.7568 cv
352.494 18.7568 353.463 19.7276 353.463 20.9248 cv
f
358.516 28.7031 mo
358.516 29.5601 357.821 30.2559 356.963 30.2559 cv
356.106 30.2559 355.411 29.5601 355.411 28.7031 cv
355.411 27.8452 356.106 27.1504 356.963 27.1504 cv
357.821 27.1504 358.516 27.8452 358.516 28.7031 cv
.992157 .737255 0 rgb
f
369.382 30.1929 mo
369.382 30.98 368.745 31.6177 367.958 31.6177 cv
367.17 31.6177 366.534 30.98 366.534 30.1929 cv
366.534 29.4067 367.17 28.7686 367.958 28.7686 cv
368.745 28.7686 369.382 29.4067 369.382 30.1929 cv
.0509804 .576471 .34902 rgb
f
374.579 40.8052 mo
374.579 41.7539 373.809 42.5225 372.861 42.5225 cv
371.914 42.5225 371.144 41.7539 371.144 40.8052 cv
371.144 39.8569 371.914 39.0884 372.861 39.0884 cv
373.809 39.0884 374.579 39.8569 374.579 40.8052 cv
.992157 .737255 0 rgb
f
376.262 50.7925 mo
376.262 52.4351 374.931 53.7661 373.289 53.7661 cv
371.647 53.7661 370.315 52.4351 370.315 50.7925 cv
370.315 49.1503 371.647 47.8193 373.289 47.8193 cv
374.931 47.8193 376.262 49.1503 376.262 50.7925 cv
f
368.999 52.8486 mo
368.999 54.6753 367.518 56.1563 365.692 56.1563 cv
363.864 56.1563 362.384 54.6753 362.384 52.8486 cv
362.384 51.0224 363.864 49.541 365.692 49.541 cv
367.518 49.541 368.999 51.0224 368.999 52.8486 cv
.0509804 .576471 .34902 rgb
f
360.591 57.2402 mo
360.591 57.8902 360.064 58.4174 359.414 58.4174 cv
358.764 58.4174 358.237 57.8902 358.237 57.2402 cv
358.237 56.5898 358.764 56.063 359.414 56.063 cv
360.064 56.063 360.591 56.5898 360.591 57.2402 cv
f
356.36 68.7808 mo
356.36 70.021 355.355 71.0264 354.114 71.0264 cv
352.874 71.0264 351.869 70.021 351.869 68.7808 cv
351.869 67.5405 352.874 66.5346 354.114 66.5346 cv
355.355 66.5346 356.36 67.5405 356.36 68.7808 cv
f
345.359 66.9629 mo
345.359 67.9805 344.534 68.8052 343.517 68.8052 cv
342.5 68.8052 341.675 67.9805 341.675 66.9629 cv
341.675 65.9458 342.5 65.1211 343.517 65.1211 cv
344.534 65.1211 345.359 65.9458 345.359 66.9629 cv
cp
.992157 .737255 0 rgb
f
340.393 55.4063 mo
340.393 56.4272 339.565 57.2549 338.544 57.2549 cv
337.523 57.2549 336.695 56.4272 336.695 55.4063 cv
336.695 54.3848 337.523 53.5571 338.544 53.5571 cv
339.565 53.5571 340.393 54.3848 340.393 55.4063 cv
cp
f
331.502 53.2983 mo
331.502 54.6489 330.408 55.7432 329.057 55.7432 cv
327.707 55.7432 326.613 54.6489 326.613 53.2983 cv
326.613 51.9482 327.707 50.8535 329.057 50.8535 cv
330.408 50.8535 331.502 51.9482 331.502 53.2983 cv
cp
f
334.207 43.8096 mo
334.207 45.7202 332.657 47.269 330.748 47.269 cv
328.836 47.269 327.288 45.7202 327.288 43.8096 cv
327.288 41.8989 328.836 40.3501 330.748 40.3501 cv
332.657 40.3501 334.207 41.8989 334.207 43.8096 cv
cp
.105882 .584314 .635294 rgb
f
331.05 38.0479 mo
331.05 39.5083 329.867 40.6929 328.406 40.6929 cv
326.946 40.6929 325.761 39.5083 325.761 38.0479 cv
325.761 36.5874 326.946 35.4033 328.406 35.4033 cv
329.867 35.4033 331.05 36.5874 331.05 38.0479 cv
cp
f
335.001 29.8394 mo
335.001 31.8208 333.395 33.4268 331.414 33.4268 cv
329.432 33.4268 327.827 31.8208 327.827 29.8394 cv
327.827 27.8584 329.432 26.2524 331.414 26.2524 cv
333.395 26.2524 335.001 27.8584 335.001 29.8394 cv
cp
f
351.866 73.3809 mo
351.866 65.0442 li
351.881 64.9507 351.889 64.8547 351.889 64.7568 cv
351.889 64.6589 351.881 64.5628 351.866 64.4693 cv
351.866 53.3191 li
352.24 54.2988 353.189 54.9947 354.3 54.9947 cv
355.74 54.9947 356.906 53.8281 356.906 52.3896 cv
356.906 50.9507 355.74 49.7842 354.3 49.7842 cv
353.189 49.7842 352.24 50.48 351.866 51.4599 cv
351.866 37.4536 li
352.333 37.9692 353.009 38.2929 353.759 38.2929 cv
355.17 38.2929 356.314 37.1489 356.314 35.7378 cv
356.314 34.3266 355.17 33.1826 353.759 33.1826 cv
353.009 33.1826 352.333 33.5064 351.866 34.0219 cv
351.866 23.0166 li
352.787 22.7663 353.463 21.9244 353.463 20.9248 cv
353.463 19.9248 352.787 19.0828 351.866 18.8325 cv
351.866 18.1847 li
352.002 18.2048 352.141 18.2153 352.283 18.2153 cv
353.842 18.2153 355.106 16.9517 355.106 15.3926 cv
355.106 13.8339 353.842 12.5698 352.283 12.5698 cv
352.141 12.5698 352.002 12.5803 351.866 12.6005 cv
351.866 11.7065 li
368.626 11.9858 382.185 25.7129 382.185 42.54 cv
382.185 59.3745 368.626 73.1016 351.866 73.3809 cv
354.114 66.5346 mo
352.874 66.5346 351.869 67.5405 351.869 68.7808 cv
351.869 70.021 352.874 71.0264 354.114 71.0264 cv
355.355 71.0264 356.36 70.021 356.36 68.7808 cv
356.36 67.5405 355.355 66.5346 354.114 66.5346 cv
360.592 68.3086 mo
359.92 68.3086 359.377 68.8526 359.377 69.5239 cv
359.377 70.1948 359.92 70.7388 360.592 70.7388 cv
361.263 70.7388 361.807 70.1948 361.807 69.5239 cv
361.807 68.8526 361.263 68.3086 360.592 68.3086 cv
368.033 60.0859 mo
366.254 60.0859 364.813 61.5274 364.813 63.3052 cv
364.813 65.0831 366.254 66.5249 368.033 66.5249 cv
369.81 66.5249 371.252 65.0831 371.252 63.3052 cv
371.252 61.5274 369.81 60.0859 368.033 60.0859 cv
359.414 56.063 mo
358.764 56.063 358.237 56.5898 358.237 57.2402 cv
358.237 57.8902 358.764 58.4174 359.414 58.4174 cv
360.064 58.4174 360.591 57.8902 360.591 57.2402 cv
360.591 56.5898 360.064 56.063 359.414 56.063 cv
367.237 55.7736 mo
367.564 56.7672 368.5 57.4843 369.603 57.4843 cv
370.978 57.4843 372.093 56.3697 372.093 54.9947 cv
372.093 53.6191 370.978 52.5049 369.603 52.5049 cv
369.391 52.5049 369.185 52.5314 368.988 52.5814 cv
368.852 50.8801 367.428 49.541 365.692 49.541 cv
363.864 49.541 362.384 51.0224 362.384 52.8486 cv
362.384 54.6753 363.864 56.1563 365.692 56.1563 cv
366.25 56.1563 366.776 56.0179 367.237 55.7736 cv
370.951 48.9554 mo
370.552 49.4611 370.315 50.099 370.315 50.7925 cv
370.315 52.4351 371.647 53.7661 373.289 53.7661 cv
374.931 53.7661 376.262 52.4351 376.262 50.7925 cv
376.262 49.3823 375.281 48.2015 373.963 47.8961 cv
374.307 47.4277 374.51 46.8493 374.51 46.2236 cv
374.51 44.6626 373.245 43.396 371.683 43.396 cv
370.123 43.396 368.855 44.6626 368.855 46.2236 cv
368.855 47.5317 369.744 48.6325 370.951 48.9554 cv
363.162 41.2398 mo
361.263 41.2398 359.724 42.7788 359.724 44.6777 cv
359.724 46.5762 361.263 48.1152 363.162 48.1152 cv
365.06 48.1152 366.599 46.5762 366.599 44.6777 cv
366.599 42.7788 365.06 41.2398 363.162 41.2398 cv
372.861 39.0884 mo
371.914 39.0884 371.144 39.8569 371.144 40.8052 cv
371.144 41.7539 371.914 42.5225 372.861 42.5225 cv
373.809 42.5225 374.579 41.7539 374.579 40.8052 cv
374.579 39.8569 373.809 39.0884 372.861 39.0884 cv
367.49 37.5679 mo
366.666 37.5679 365.997 38.2358 365.997 39.0606 cv
365.997 39.8852 366.666 40.5542 367.49 40.5542 cv
368.315 40.5542 368.984 39.8852 368.984 39.0606 cv
368.984 38.2358 368.315 37.5679 367.49 37.5679 cv
364.334 28.8755 mo
362.361 28.8755 360.761 30.4755 360.761 32.4487 cv
360.761 34.4219 362.361 36.0215 364.334 36.0215 cv
366.308 36.0215 367.908 34.4219 367.908 32.4487 cv
367.908 32.1599 367.873 31.879 367.809 31.61 cv
367.858 31.6151 367.907 31.6177 367.958 31.6177 cv
368.745 31.6177 369.382 30.98 369.382 30.1929 cv
369.382 29.4067 368.745 28.7686 367.958 28.7686 cv
367.343 28.7686 366.82 29.1576 366.62 29.7024 cv
366.001 29.1861 365.204 28.8755 364.334 28.8755 cv
356.963 27.1504 mo
356.106 27.1504 355.411 27.8452 355.411 28.7031 cv
355.411 29.5601 356.106 30.2559 356.963 30.2559 cv
357.821 30.2559 358.516 29.5601 358.516 28.7031 cv
358.516 27.8452 357.821 27.1504 356.963 27.1504 cv
365.374 23.1455 mo
364.221 23.1455 363.286 24.0806 363.286 25.2344 cv
363.286 26.3882 364.221 27.3232 365.374 27.3232 cv
366.529 27.3232 367.463 26.3882 367.463 25.2344 cv
367.463 24.0806 366.529 23.1455 365.374 23.1455 cv
358.123 18.5933 mo
356.468 18.5933 355.127 19.9341 355.127 21.5884 cv
355.127 23.2422 356.468 24.5835 358.123 24.5835 cv
359.777 24.5835 361.118 23.2422 361.118 21.5884 cv
361.118 19.9341 359.777 18.5933 358.123 18.5933 cv
.282353 .662745 .690196 rgb
f
351.866 79.5385 mo
351.866 73.3809 li
368.626 73.1016 382.185 59.3745 382.185 42.54 cv
382.185 42.54 li
382.185 25.7129 368.626 11.9858 351.866 11.7065 cv
351.866 5.54879 li
372.029 5.82817 388.342 22.3178 388.342 42.54 cv
388.342 62.7696 372.029 79.2588 351.866 79.5385 cv
.0588235 .462745 .517647 rgb
f
353.759 38.2929 mo
353.009 38.2929 352.333 37.9692 351.866 37.4536 cv
351.866 34.0219 li
352.333 33.5064 353.009 33.1826 353.759 33.1826 cv
355.17 33.1826 356.314 34.3266 356.314 35.7378 cv
356.314 37.1489 355.17 38.2929 353.759 38.2929 cv
f
363.162 48.1152 mo
361.263 48.1152 359.724 46.5762 359.724 44.6777 cv
359.724 42.7788 361.263 41.2398 363.162 41.2398 cv
365.06 41.2398 366.599 42.7788 366.599 44.6777 cv
366.599 46.5762 365.06 48.1152 363.162 48.1152 cv
.54902 .584314 0 rgb
f
354.3 54.9947 mo
353.189 54.9947 352.24 54.2988 351.866 53.3191 cv
351.866 51.4599 li
352.24 50.48 353.189 49.7842 354.3 49.7842 cv
355.74 49.7842 356.906 50.9507 356.906 52.3896 cv
356.906 53.8281 355.74 54.9947 354.3 54.9947 cv
f
352.283 18.2153 mo
352.141 18.2153 352.002 18.2048 351.866 18.1847 cv
351.866 12.6005 li
352.002 12.5803 352.141 12.5698 352.283 12.5698 cv
353.842 12.5698 355.106 13.8339 355.106 15.3926 cv
355.106 16.9517 353.842 18.2153 352.283 18.2153 cv
.0588235 .462745 .517647 rgb
f
358.123 24.5835 mo
356.468 24.5835 355.127 23.2422 355.127 21.5884 cv
355.127 19.9341 356.468 18.5933 358.123 18.5933 cv
359.777 18.5933 361.118 19.9341 361.118 21.5884 cv
361.118 23.2422 359.777 24.5835 358.123 24.5835 cv
.54902 .584314 0 rgb
f
365.374 27.3232 mo
364.221 27.3232 363.286 26.3882 363.286 25.2344 cv
363.286 24.0806 364.221 23.1455 365.374 23.1455 cv
366.529 23.1455 367.463 24.0806 367.463 25.2344 cv
367.463 26.3882 366.529 27.3232 365.374 27.3232 cv
f
364.334 36.0215 mo
362.361 36.0215 360.761 34.4219 360.761 32.4487 cv
360.761 30.4755 362.361 28.8755 364.334 28.8755 cv
365.204 28.8755 366.001 29.1861 366.62 29.7024 cv
366.564 29.8554 366.534 30.0205 366.534 30.1929 cv
366.534 30.9298 367.092 31.5357 367.809 31.61 cv
367.873 31.879 367.908 32.1599 367.908 32.4487 cv
367.908 34.4219 366.308 36.0215 364.334 36.0215 cv
.0588235 .462745 .517647 rgb
f
367.49 40.5542 mo
366.666 40.5542 365.997 39.8852 365.997 39.0606 cv
365.997 38.2358 366.666 37.5679 367.49 37.5679 cv
368.315 37.5679 368.984 38.2358 368.984 39.0606 cv
368.984 39.8852 368.315 40.5542 367.49 40.5542 cv
.54902 .584314 0 rgb
f
370.951 48.9554 mo
369.744 48.6325 368.855 47.5317 368.855 46.2236 cv
368.855 44.6626 370.123 43.396 371.683 43.396 cv
373.245 43.396 374.51 44.6626 374.51 46.2236 cv
374.51 46.8493 374.307 47.4277 373.963 47.8961 cv
373.746 47.8458 373.521 47.8193 373.289 47.8193 cv
372.34 47.8193 371.495 48.2636 370.951 48.9554 cv
.027451 .454902 .286274 rgb
f
369.603 57.4843 mo
368.5 57.4843 367.564 56.7672 367.237 55.7736 cv
368.285 55.2186 368.999 54.1169 368.999 52.8486 cv
368.999 52.7587 368.995 52.6696 368.988 52.5814 cv
369.185 52.5314 369.391 52.5049 369.603 52.5049 cv
370.978 52.5049 372.093 53.6191 372.093 54.9947 cv
372.093 56.3697 370.978 57.4843 369.603 57.4843 cv
.0588235 .462745 .517647 rgb
f
368.033 66.5249 mo
366.254 66.5249 364.813 65.0831 364.813 63.3052 cv
364.813 61.5274 366.254 60.0859 368.033 60.0859 cv
369.81 60.0859 371.252 61.5274 371.252 63.3052 cv
371.252 65.0831 369.81 66.5249 368.033 66.5249 cv
.027451 .454902 .286274 rgb
f
360.592 70.7388 mo
359.92 70.7388 359.377 70.1948 359.377 69.5239 cv
359.377 68.8526 359.92 68.3086 360.592 68.3086 cv
361.263 68.3086 361.807 68.8526 361.807 69.5239 cv
361.807 70.1948 361.263 70.7388 360.592 70.7388 cv
f
351.866 65.0442 mo
351.866 64.4693 li
351.881 64.5628 351.889 64.6589 351.889 64.7568 cv
351.889 64.8547 351.881 64.9507 351.866 65.0442 cv
.54902 .584314 0 rgb
f
351.866 23.0166 mo
351.866 18.8325 li
352.787 19.0828 353.463 19.9248 353.463 20.9248 cv
353.463 21.9244 352.787 22.7663 351.866 23.0166 cv
.027451 .454902 .286274 rgb
f
356.963 30.2559 mo
356.106 30.2559 355.411 29.5601 355.411 28.7031 cv
355.411 27.8452 356.106 27.1504 356.963 27.1504 cv
357.821 27.1504 358.516 27.8452 358.516 28.7031 cv
358.516 29.5601 357.821 30.2559 356.963 30.2559 cv
.54902 .584314 0 rgb
f
367.958 31.6177 mo
367.907 31.6177 367.858 31.6151 367.809 31.61 cv
367.092 31.5357 366.534 30.9298 366.534 30.1929 cv
366.534 30.0205 366.564 29.8554 366.62 29.7024 cv
366.82 29.1576 367.343 28.7686 367.958 28.7686 cv
368.745 28.7686 369.382 29.4067 369.382 30.1929 cv
369.382 30.98 368.745 31.6177 367.958 31.6177 cv
.027451 .454902 .286274 rgb
f
372.861 42.5225 mo
371.914 42.5225 371.144 41.7539 371.144 40.8052 cv
371.144 39.8569 371.914 39.0884 372.861 39.0884 cv
373.809 39.0884 374.579 39.8569 374.579 40.8052 cv
374.579 41.7539 373.809 42.5225 372.861 42.5225 cv
.54902 .584314 0 rgb
f
373.289 53.7661 mo
371.647 53.7661 370.315 52.4351 370.315 50.7925 cv
370.315 50.099 370.552 49.4611 370.951 48.9554 cv
371.495 48.2636 372.34 47.8193 373.289 47.8193 cv
373.521 47.8193 373.746 47.8458 373.963 47.8961 cv
375.281 48.2015 376.262 49.3823 376.262 50.7925 cv
376.262 52.4351 374.931 53.7661 373.289 53.7661 cv
f
365.692 56.1563 mo
363.864 56.1563 362.384 54.6753 362.384 52.8486 cv
362.384 51.0224 363.864 49.541 365.692 49.541 cv
367.428 49.541 368.852 50.8801 368.988 52.5814 cv
368.995 52.6696 368.999 52.7587 368.999 52.8486 cv
368.999 54.1169 368.285 55.2186 367.237 55.7736 cv
366.776 56.0179 366.25 56.1563 365.692 56.1563 cv
.027451 .454902 .286274 rgb
f
359.414 58.4174 mo
358.764 58.4174 358.237 57.8902 358.237 57.2402 cv
358.237 56.5898 358.764 56.063 359.414 56.063 cv
360.064 56.063 360.591 56.5898 360.591 57.2402 cv
360.591 57.8902 360.064 58.4174 359.414 58.4174 cv
f
354.114 71.0264 mo
352.874 71.0264 351.869 70.021 351.869 68.7808 cv
351.869 67.5405 352.874 66.5346 354.114 66.5346 cv
355.355 66.5346 356.36 67.5405 356.36 68.7808 cv
356.36 70.021 355.355 71.0264 354.114 71.0264 cv
f
283.153 267.817 mo
211.573 267.817 li
211.573 225.279 li
211.573 223.245 213.223 221.595 215.259 221.595 cv
279.467 221.595 li
281.502 221.595 283.153 223.245 283.153 225.279 cv
283.153 267.817 li
.0117647 .65098 .466667 rgb
f
213.43 227.134 mo
213.43 225.099 215.084 223.452 217.12 223.452 cv
277.611 223.452 li
279.647 223.452 281.292 225.099 281.292 227.134 cv
281.292 265.962 li
213.43 265.962 li
213.43 227.134 li
281.322 219.734 mo
213.402 219.734 li
211.366 219.734 209.712 221.388 209.712 223.423 cv
209.712 269.674 li
285.01 269.674 li
285.01 223.423 li
285.01 221.388 283.357 219.734 281.322 219.734 cv
.258824 .129412 .0431373 rgb
f
287.927 269.674 mo
287.927 273.098 li
206.795 273.098 li
206.795 269.674 li
287.927 269.674 li
.117647 .0431373 .00784314 rgb
f
281.29 265.961 mo
247.363 265.961 li
247.363 223.452 li
277.609 223.452 li
279.644 223.452 281.29 225.098 281.29 227.134 cv
281.29 265.961 li
.00392157 .513725 .380392 rgb
f
281.292 265.962 mo
247.363 265.962 li
247.363 265.961 li
281.29 265.961 li
281.29 227.134 li
281.29 227.134 li
281.29 225.098 279.644 223.452 277.609 223.452 cv
247.363 223.452 li
277.611 223.452 li
279.647 223.452 281.292 225.099 281.292 227.134 cv
281.292 265.962 li
.00784314 .580392 .423529 rgb
f
282.96 220.118 mo
282.466 219.873 281.91 219.734 281.322 219.734 cv
247.363 219.734 li
247.363 219.733 li
281.32 219.733 li
281.909 219.733 282.466 219.872 282.96 220.118 cv
.775594 .895671 .908466 rgb
f
285.008 269.673 mo
247.363 269.673 li
247.363 265.962 li
281.292 265.962 li
281.292 227.134 li
281.292 225.099 279.647 223.452 277.611 223.452 cv
247.363 223.452 li
247.363 219.734 li
281.322 219.734 li
281.91 219.734 282.466 219.873 282.96 220.118 cv
284.173 220.723 285.008 221.976 285.008 223.423 cv
285.008 269.673 li
.2 .113725 .0392157 rgb
f
287.927 269.674 mo
247.363 269.674 li
285.01 269.674 li
287.925 269.673 li
287.925 269.674 li
.775594 .895671 .908466 rgb
f
285.01 269.674 mo
247.363 269.674 li
247.363 269.673 li
285.008 269.673 li
285.01 269.673 li
285.01 269.674 li
.2 .113725 .0392157 rgb
f
287.925 273.097 mo
247.363 273.097 li
247.363 269.674 li
287.927 269.674 li
287.925 273.097 li
.0901961 .0352941 .00392157 rgb
f
230.875 267.817 mo
220.998 267.817 li
220.998 269.675 li
230.875 269.675 li
230.875 267.817 li
cp
1 1 1 rgb
f
229.676 252.476 mo
222.554 252.476 li
222.554 240.109 li
229.676 240.109 li
229.676 242.257 li
225.176 242.257 li
225.176 244.974 li
229.363 244.974 li
229.363 247.121 li
225.176 247.121 li
225.176 250.311 li
229.676 250.311 li
229.676 252.476 li
cp
f
231.444 248.939 mo
231.444 247.088 li
239.844 247.088 li
239.844 248.939 li
231.444 248.939 li
cp
231.444 245.667 mo
231.444 243.813 li
239.844 243.813 li
239.844 245.667 li
231.444 245.667 li
cp
f
247.381 252.476 mo
244.404 242.773 li
244.328 242.773 li
244.435 244.747 244.488 246.063 244.488 246.724 cv
244.488 252.476 li
242.145 252.476 li
242.145 240.109 li
245.714 240.109 li
248.641 249.566 li
248.692 249.566 li
251.796 240.109 li
255.367 240.109 li
255.367 252.476 li
252.922 252.476 li
252.922 246.623 li
252.922 246.346 252.925 246.027 252.934 245.667 cv
252.943 245.306 252.981 244.347 253.049 242.79 cv
252.972 242.79 li
249.784 252.476 li
247.381 252.476 li
cp
f
263.732 242.113 mo
262.746 242.113 261.981 242.484 261.44 243.227 cv
260.899 243.968 260.628 245.001 260.628 246.326 cv
260.628 249.084 261.663 250.463 263.732 250.463 cv
264.601 250.463 265.652 250.246 266.887 249.812 cv
266.887 252.011 li
265.873 252.434 264.74 252.646 263.487 252.646 cv
261.689 252.646 260.312 252.1 259.359 251.009 cv
258.406 249.917 257.929 248.351 257.929 246.31 cv
257.929 245.024 258.164 243.896 258.631 242.93 cv
259.099 241.962 259.772 241.221 260.65 240.705 cv
261.526 240.189 262.553 239.932 263.732 239.932 cv
264.934 239.932 266.14 240.222 267.353 240.803 cv
266.506 242.935 li
266.044 242.714 265.58 242.523 265.112 242.358 cv
264.643 242.196 264.184 242.113 263.732 242.113 cv
cp
f
273.407 246.707 mo
268.367 246.707 li
268.367 245.646 li
270.175 243.816 li
270.712 243.269 271.062 242.888 271.226 242.675 cv
271.391 242.463 271.509 242.267 271.582 242.086 cv
271.654 241.905 271.69 241.718 271.69 241.523 cv
271.69 241.234 271.611 241.019 271.451 240.877 cv
271.292 240.736 271.079 240.666 270.812 240.666 cv
270.533 240.666 270.262 240.73 269.999 240.858 cv
269.736 240.986 269.461 241.168 269.175 241.405 cv
268.346 240.424 li
268.702 240.122 268.996 239.908 269.23 239.783 cv
269.463 239.657 269.717 239.562 269.994 239.494 cv
270.269 239.427 270.579 239.394 270.921 239.394 cv
271.372 239.394 271.769 239.476 272.114 239.64 cv
272.459 239.804 272.727 240.034 272.917 240.33 cv
273.109 240.626 273.204 240.965 273.204 241.347 cv
273.204 241.679 273.145 241.99 273.029 242.281 cv
272.912 242.572 272.731 242.87 272.486 243.176 cv
272.242 243.481 271.81 243.917 271.192 244.482 cv
270.265 245.355 li
270.265 245.425 li
273.407 245.425 li
273.407 246.707 li
cp
f
336.167 378.276 mo
334.718 376.648 li
343.107 369.181 li
344.557 370.81 li
336.167 378.276 li
cp
.509804 .839216 .847059 rgb
f
351.003 375.043 mo
339.638 375.043 li
339.638 373.915 li
351.003 373.915 li
351.003 375.043 li
f
377.672 347.163 mo
377.672 358.142 371.412 367.665 362.263 372.339 cv
361.308 372.823 360.324 373.264 359.309 373.64 cv
359.104 373.72 358.898 373.793 358.692 373.867 cv
358.655 373.875 li
357.222 374.366 355.738 374.756 354.216 375.021 cv
353.107 375.204 351.983 375.33 350.836 375.388 cv
350.367 375.41 349.888 375.425 349.411 375.425 cv
348.55 375.425 347.7 375.374 346.853 375.3 cv
346.919 375.043 li
347.199 373.911 li
348.764 367.68 li
349.021 366.651 li
349.154 366.658 349.279 366.665 349.411 366.665 cv
349.888 366.665 350.367 366.651 350.836 366.607 cv
354.29 366.364 357.487 365.218 360.206 363.403 cv
365.453 359.913 368.913 353.938 368.913 347.163 cv
368.913 343.71 368.01 340.461 366.429 337.647 cv
365.944 336.773 365.393 335.942 364.768 335.164 cv
364.122 334.311 363.387 333.518 362.594 332.79 cv
362.197 332.431 361.719 332.452 361.154 332.686 cv
360.301 333.04 359.257 333.9 358.081 334.687 cv
357.508 335.068 356.906 335.436 356.275 335.722 cv
356.193 335.759 li
359.008 326.037 li
360.426 321.129 li
370.56 325.42 377.672 335.458 377.672 347.163 cv
.105882 .584314 .635294 rgb
f
361.807 363.403 mo
361.807 367.68 li
325.933 367.68 li
325.933 363.403 li
361.807 363.403 li
f
362.263 371.67 mo
362.263 382.406 li
354.216 382.406 li
354.216 371.67 li
354.216 369.465 355.996 367.68 358.2 367.68 cv
358.28 367.68 li
360.477 367.68 362.263 369.465 362.263 371.67 cv
.0352941 .360784 .376471 rgb
f
360.48 371.673 mo
360.48 370.435 359.478 369.432 358.24 369.432 cv
357.001 369.432 355.998 370.435 355.998 371.673 cv
355.998 372.911 357.001 373.915 358.24 373.915 cv
359.478 373.915 360.48 372.911 360.48 371.673 cv
.509804 .839216 .847059 rgb
f
368.326 333.643 mo
368.326 335.26 367.591 336.699 366.429 337.647 cv
365.533 338.375 364.394 338.815 363.153 338.815 cv
360.654 338.815 358.567 337.045 358.081 334.687 cv
358.016 334.348 357.979 334.002 357.979 333.643 cv
357.979 330.784 360.301 328.47 363.153 328.47 cv
366.01 328.47 368.326 330.784 368.326 333.643 cv
.0352941 .360784 .376471 rgb
f
365.376 333.643 mo
365.376 334.869 364.382 335.864 363.156 335.864 cv
361.928 335.864 360.933 334.869 360.933 333.643 cv
360.933 332.415 361.928 331.42 363.156 331.42 cv
364.382 331.42 365.376 332.415 365.376 333.643 cv
.509804 .839216 .847059 rgb
f
357.303 360.722 mo
357.303 363.403 li
355.444 363.403 li
355.444 360.722 li
357.303 360.722 li
.0352941 .360784 .376471 rgb
f
357.854 359.979 mo
357.854 361.037 li
354.893 361.037 li
354.893 359.979 li
357.854 359.979 li
f
359.015 326.037 mo
356.275 335.722 li
353.152 346.744 li
351.005 346.142 li
350.836 346.091 li
346.016 344.731 li
343.871 344.121 li
349.734 323.406 li
350.836 323.723 li
351.88 324.016 li
356.862 325.427 li
359.008 326.037 li
359.015 326.037 li
.509804 .839216 .847059 rgb
f
351.005 346.142 mo
350.836 346.737 li
350.249 348.809 li
349.462 348.589 li
346.045 347.619 li
345.259 347.398 li
346.016 344.731 li
350.836 346.091 li
351.005 346.142 li
.0352941 .360784 .376471 rgb
f
348.674 351.375 mo
345.258 350.408 li
346.378 346.455 li
349.793 347.422 li
348.674 351.375 li
cp
f
360.683 311.929 mo
360.081 314.066 li
358.773 318.682 li
356.862 325.427 li
351.88 324.016 li
353.791 317.264 li
355.099 312.655 li
355.702 310.518 li
360.683 311.929 li
f
361.154 314.368 mo
359.845 318.982 li
358.773 318.682 li
353.791 317.264 li
352.717 316.962 li
354.018 312.348 li
355.099 312.655 li
360.081 314.066 li
361.154 314.368 li
f
360.683 311.929 mo
360.081 314.066 li
358.773 318.682 li
356.862 325.427 li
351.88 324.016 li
353.791 317.264 li
355.099 312.655 li
355.702 310.518 li
360.683 311.929 li
f
344.496 363.07 mo
331.107 363.07 li
330.924 363.07 330.779 362.924 330.779 362.742 cv
330.779 362.56 330.924 362.414 331.107 362.414 cv
344.496 362.414 li
345.908 362.414 349.023 361.678 350.756 361.24 cv
351.462 361.053 li
358.251 361.362 li
358.433 361.371 358.573 361.525 358.564 361.706 cv
358.555 361.887 358.398 362.032 358.22 362.019 cv
351.533 361.713 li
350.921 361.876 li
349.156 362.323 345.978 363.07 344.496 363.07 cv
f
369.744 385.978 mo
369.744 386.014 li
325.007 386.014 li
325.007 385.978 li
325.007 384.008 326.609 382.406 328.579 382.406 cv
366.165 382.406 li
368.142 382.406 369.744 384.008 369.744 385.978 cv
f
350.836 375.388 mo
350.836 367.68 li
361.807 367.68 li
361.807 363.403 li
360.206 363.403 li
365.453 359.913 368.913 353.938 368.913 347.163 cv
368.913 347.163 li
368.913 347.163 li
368.913 343.71 368.01 340.461 366.429 337.647 cv
367.591 336.699 368.326 335.26 368.326 333.643 cv
368.326 330.784 366.01 328.47 363.153 328.47 cv
360.301 328.47 357.979 330.784 357.979 333.643 cv
357.979 334.002 358.016 334.348 358.081 334.687 cv
357.508 335.068 356.906 335.436 356.275 335.722 cv
359.015 326.037 li
359.008 326.037 li
360.426 321.129 li
370.56 325.42 377.672 335.458 377.672 347.163 cv
377.672 358.142 371.412 367.665 362.263 372.339 cv
362.263 371.67 li
362.263 369.465 360.477 367.68 358.28 367.68 cv
358.2 367.68 li
355.996 367.68 354.216 369.465 354.216 371.67 cv
354.216 375.021 li
354.216 375.021 li
353.107 375.204 351.983 375.33 350.836 375.388 cv
.0588235 .462745 .517647 rgb
f
361.807 367.68 mo
350.836 367.68 li
350.836 363.403 li
355.444 363.403 li
357.303 363.403 li
360.206 363.403 li
360.206 363.403 li
361.807 363.403 li
361.807 367.68 li
f
362.263 382.406 mo
354.216 382.406 li
354.216 375.021 li
354.216 375.021 li
354.216 371.67 li
354.216 369.465 355.996 367.68 358.2 367.68 cv
358.28 367.68 li
360.477 367.68 362.263 369.465 362.263 371.67 cv
362.263 372.339 li
362.263 382.406 li
358.24 369.432 mo
357.001 369.432 355.998 370.435 355.998 371.673 cv
355.998 372.911 357.001 373.915 358.24 373.915 cv
359.478 373.915 360.48 372.911 360.48 371.673 cv
360.48 370.435 359.478 369.432 358.24 369.432 cv
.0196078 .286274 .305882 rgb
f
358.24 373.915 mo
357.001 373.915 355.998 372.911 355.998 371.673 cv
355.998 370.435 357.001 369.432 358.24 369.432 cv
359.478 369.432 360.48 370.435 360.48 371.673 cv
360.48 372.911 359.478 373.915 358.24 373.915 cv
.282353 .662745 .690196 rgb
f
363.153 338.815 mo
360.654 338.815 358.567 337.045 358.081 334.687 cv
358.081 334.687 li
358.016 334.348 357.979 334.002 357.979 333.643 cv
357.979 330.784 360.301 328.47 363.153 328.47 cv
366.01 328.47 368.326 330.784 368.326 333.643 cv
368.326 335.26 367.591 336.699 366.429 337.647 cv
366.429 337.647 li
365.533 338.375 364.394 338.815 363.153 338.815 cv
363.156 331.42 mo
361.928 331.42 360.933 332.415 360.933 333.643 cv
360.933 334.869 361.928 335.864 363.156 335.864 cv
364.382 335.864 365.376 334.869 365.376 333.643 cv
365.376 332.415 364.382 331.42 363.156 331.42 cv
.0196078 .286274 .305882 rgb
f
363.156 335.864 mo
361.928 335.864 360.933 334.869 360.933 333.643 cv
360.933 332.415 361.928 331.42 363.156 331.42 cv
364.382 331.42 365.376 332.415 365.376 333.643 cv
365.376 334.869 364.382 335.864 363.156 335.864 cv
.282353 .662745 .690196 rgb
f
357.303 363.403 mo
355.444 363.403 li
355.444 361.892 li
357.303 361.977 li
357.303 363.403 li
.0196078 .286274 .305882 rgb
f
353.152 346.744 mo
351.005 346.142 li
350.836 346.091 li
350.836 323.723 li
351.88 324.016 li
356.862 325.427 li
359.008 326.037 li
359.015 326.037 li
356.275 335.722 li
353.152 346.744 li
.282353 .662745 .690196 rgb
f
350.836 346.737 mo
350.836 346.091 li
351.005 346.142 li
350.836 346.737 li
.0196078 .286274 .305882 rgb
f
359.845 318.982 mo
358.773 318.682 li
360.081 314.066 li
361.154 314.368 li
359.845 318.982 li
f
357.303 361.319 mo
355.444 361.234 li
355.444 361.037 li
357.303 361.037 li
357.303 361.319 li
f
357.854 361.037 mo
357.303 361.037 li
355.444 361.037 li
354.893 361.037 li
354.893 359.979 li
357.854 359.979 li
357.854 361.037 li
f
353.791 317.264 mo
353.791 317.264 li
352.717 316.962 li
354.018 312.348 li
355.099 312.655 li
353.791 317.264 li
f
356.862 325.427 mo
351.88 324.016 li
353.791 317.264 li
355.099 312.655 li
355.702 310.518 li
360.683 311.929 li
360.081 314.066 li
358.773 318.682 li
356.862 325.427 li
f
357.303 361.977 mo
357.303 361.977 li
355.444 361.892 li
355.444 361.234 li
357.303 361.319 li
357.303 361.977 li
f
369.744 386.014 mo
350.836 386.014 li
350.836 382.406 li
354.216 382.406 li
362.263 382.406 li
366.165 382.406 li
368.142 382.406 369.744 384.008 369.744 385.978 cv
369.744 386.014 li
f
18.5215 385.312 mo
7.79977 385.312 li
5.55324 385.312 3.72514 383.484 3.72514 381.238 cv
3.72514 345.165 li
3.72514 342.919 5.55324 341.092 7.79977 341.092 cv
69.3491 341.092 li
71.5957 341.092 73.4239 342.919 73.4239 345.165 cv
73.4239 353.109 li
73.4239 355.215 71.8428 356.959 69.7461 357.166 cv
69.6011 357.176 69.4751 357.183 69.3491 357.183 cv
67.6367 357.183 li
67.6367 355.824 li
69.3491 355.824 li
69.4438 355.824 69.5381 355.817 69.6324 355.81 cv
71.0103 355.675 72.0645 354.513 72.0645 353.109 cv
72.0645 345.165 li
72.0645 343.668 70.8462 342.45 69.3491 342.45 cv
7.79977 342.45 li
6.30275 342.45 5.085 343.668 5.085 345.165 cv
5.085 381.238 li
5.085 382.735 6.30275 383.953 7.79977 383.953 cv
18.5215 383.953 li
20.0185 383.953 21.2364 382.735 21.2364 381.238 cv
21.2364 380.503 li
21.2364 378.734 22.3638 377.179 24.0415 376.632 cv
24.4434 376.497 24.8716 376.43 25.3105 376.43 cv
25.3477 377.788 li
25.0181 377.788 24.7339 377.833 24.4668 377.922 cv
23.3466 378.287 22.5962 379.324 22.5962 380.503 cv
22.5962 381.238 li
22.5962 383.484 20.768 385.312 18.5215 385.312 cv
.105882 .584314 .635294 rgb
f
39.9561 376.712 mo
39.9561 377.534 li
38.229 377.615 li
33.0859 377.844 li
32.2403 377.88 li
32.2403 376.293 li
33.0859 376.337 li
38.229 376.616 li
39.9561 376.712 li
.258824 .129412 .0431373 rgb
f
55.7817 367.284 mo
20.6621 367.284 li
15.4062 367.284 11.146 363.022 11.146 357.768 cv
11.146 341.454 li
11.146 336.197 15.4062 331.937 20.6621 331.937 cv
55.7817 331.937 li
61.0371 331.937 65.2984 336.197 65.2984 341.454 cv
65.2984 357.768 li
65.2984 363.022 61.0371 367.284 55.7817 367.284 cv
.105882 .584314 .635294 rgb
f
gsave
55.7817 367.284 mo
20.6621 367.284 li
15.4062 367.284 11.146 363.022 11.146 357.768 cv
11.146 341.454 li
11.146 336.197 15.4062 331.937 20.6621 331.937 cv
55.7817 331.937 li
61.0371 331.937 65.2984 336.197 65.2984 341.454 cv
65.2984 357.768 li
65.2984 363.022 61.0371 367.284 55.7817 367.284 cv
clp
38.2221 351.65 mo
26.2905 351.65 16.584 361.357 16.584 373.288 cv
16.584 385.219 26.2905 394.926 38.2221 394.926 cv
50.1533 394.926 59.8599 385.219 59.8599 373.288 cv
59.8599 361.357 50.1533 351.65 38.2221 351.65 cv
38.2221 395.38 mo
26.0405 395.38 16.1304 385.47 16.1304 373.288 cv
16.1304 361.106 26.0405 351.196 38.2221 351.196 cv
50.4034 351.196 60.3135 361.106 60.3135 373.288 cv
60.3135 385.47 50.4034 395.38 38.2221 395.38 cv
1 1 1 rgb
f
38.2221 351.423 mo
50.2783 351.423 60.0869 361.231 60.0869 373.288 cv
60.0869 361.231 50.2783 351.423 38.2221 351.423 cv
26.1655 351.423 16.357 361.231 16.357 373.288 cv
16.357 361.231 26.1655 351.423 38.2221 351.423 cv
38.2221 351.877 mo
26.4161 351.877 16.8101 361.481 16.8101 373.288 cv
16.8101 385.095 26.4161 394.699 38.2221 394.699 cv
50.0288 394.699 59.6338 385.095 59.6338 373.288 cv
59.6338 361.481 50.0288 351.877 38.2221 351.877 cv
38.2221 395.606 mo
25.916 395.606 15.9043 385.594 15.9043 373.288 cv
15.9043 360.982 25.916 350.97 38.2221 350.97 cv
50.5283 350.97 60.5401 360.982 60.5401 373.288 cv
60.5401 385.594 50.5283 395.606 38.2221 395.606 cv
f
59.4648 370.46 mo
59.4189 369.994 li
64.7139 369.171 li
64.7769 369.753 li
59.4648 370.46 li
cp
f
59.6465 373.354 mo
59.6455 372.886 li
62.5029 372.828 li
62.5044 373.359 li
59.6465 373.354 li
cp
f
59.4644 376.244 mo
59.5083 375.778 li
62.3477 376.108 li
62.2954 376.636 li
59.4644 376.244 li
cp
f
58.8599 379.075 mo
58.9976 378.627 li
61.7656 379.34 li
61.6113 379.848 li
58.8599 379.075 li
cp
f
57.8882 381.803 mo
58.0669 381.37 li
60.7124 382.45 li
60.5098 382.941 li
57.8882 381.803 li
cp
f
56.5708 384.384 mo
56.5708 384.384 56.6401 384.289 56.6968 384.187 cv
56.751 384.083 56.8052 383.979 56.8052 383.979 cv
61.4482 386.654 li
61.4482 386.654 61.3794 386.783 61.3101 386.911 cv
61.2393 387.04 61.1548 387.159 61.1548 387.159 cv
56.5708 384.384 li
cp
f
56.311 384.774 mo
56.5708 384.384 li
61.1548 387.159 li
60.8335 387.648 li
56.311 384.774 li
cp
f
21.0015 386.066 mo
21.0015 386.066 21.0679 386.163 21.1333 386.26 cv
21.2036 386.353 21.2822 386.439 21.2822 386.439 cv
19.0269 388.195 li
19.0269 388.195 18.9385 388.096 18.8584 387.99 cv
18.7832 387.881 18.708 387.771 18.708 387.771 cv
21.0015 386.066 li
cp
f
19.4497 383.622 mo
19.6758 384.032 li
15.0391 386.72 li
14.7554 386.206 li
19.4497 383.622 li
cp
f
19.2227 383.213 mo
19.4497 383.622 li
14.7554 386.206 li
14.4727 385.693 li
19.2227 383.213 li
cp
f
18.0513 380.566 mo
18.0513 380.566 18.0854 380.679 18.1206 380.79 cv
18.167 380.897 18.2139 381.005 18.2139 381.005 cv
15.5464 382.03 li
15.5464 382.03 15.4937 381.909 15.4414 381.786 cv
15.4014 381.66 15.3618 381.534 15.3618 381.534 cv
18.0513 380.566 li
cp
f
17.2759 377.773 mo
17.3701 378.234 li
14.5884 378.891 li
14.4805 378.371 li
17.2759 377.773 li
cp
f
16.8525 374.904 mo
16.9023 375.37 li
14.0581 375.65 li
14.0029 375.123 li
16.8525 374.904 li
cp
f
16.8154 372.008 mo
16.8154 372.008 16.8032 372.124 16.7915 372.24 cv
16.7925 372.357 16.7935 372.475 16.7935 372.475 cv
13.937 372.369 li
13.937 372.369 13.937 372.236 13.9365 372.104 cv
13.9497 371.972 13.9624 371.84 13.9624 371.84 cv
16.8154 372.008 li
cp
f
17.1987 369.139 mo
17.1069 369.597 li
11.8281 368.675 li
11.9419 368.101 li
17.1987 369.139 li
cp
f
17.2896 368.679 mo
17.1987 369.139 li
11.9419 368.101 li
12.0566 367.526 li
17.2896 368.679 li
cp
f
18.0898 365.896 mo
18.0898 365.896 18.0415 366.004 18.0029 366.114 cv
17.9692 366.227 17.9355 366.339 17.9355 366.339 cv
15.2329 365.41 li
15.2329 365.41 15.2715 365.282 15.3101 365.156 cv
15.354 365.031 15.4082 364.909 15.4082 364.909 cv
18.0898 365.896 li
cp
f
19.2891 363.259 mo
19.0688 363.673 li
16.5161 362.389 li
16.7646 361.92 li
19.2891 363.259 li
cp
f
20.8022 360.786 mo
20.5454 361.177 li
18.1875 359.563 li
18.48 359.119 li
20.8022 360.786 li
cp
f
22.6582 358.559 mo
22.3296 358.893 li
20.21 356.976 li
20.5811 356.597 li
22.6582 358.559 li
cp
f
24.7847 356.591 mo
24.4272 356.893 li
20.9731 352.796 li
21.4209 352.419 li
24.7847 356.591 li
cp
f
25.1421 356.287 mo
24.7847 356.591 li
21.4209 352.419 li
21.8696 352.044 li
25.1421 356.287 li
cp
f
27.5605 354.696 mo
27.1504 354.921 li
25.6738 352.474 li
26.1382 352.218 li
27.5605 354.696 li
cp
f
30.1626 353.429 mo
29.7329 353.614 li
28.6025 350.989 li
29.0898 350.779 li
30.1626 353.429 li
cp
f
32.9097 352.511 mo
32.4595 352.64 li
31.6953 349.886 li
31.6953 349.886 31.8213 349.846 31.9482 349.806 cv
32.0732 349.76 32.2051 349.741 32.2051 349.741 cv
32.9097 352.511 li
cp
f
35.7676 352.007 mo
35.3008 352.055 li
34.9102 349.223 li
35.4385 349.168 li
35.7676 352.007 li
cp
f
38.6621 351.862 mo
38.1938 351.864 li
38.1796 346.506 li
38.7656 346.505 li
38.6621 351.862 li
f
39.1304 351.858 mo
38.6621 351.862 li
38.7656 346.505 li
39.351 346.505 li
39.1304 351.858 li
f
42.0054 352.191 mo
41.5474 352.099 li
41.9893 349.274 li
42.5098 349.379 li
42.0054 352.191 li
f
44.8135 352.894 mo
44.3657 352.759 li
45.187 350.021 li
45.6948 350.176 li
44.8135 352.894 li
f
47.5078 353.959 mo
47.5078 353.959 47.4067 353.899 47.2993 353.853 cv
47.1909 353.808 47.0825 353.764 47.0825 353.764 cv
48.2662 351.162 li
48.2662 351.162 48.3887 351.213 48.5118 351.264 cv
48.6328 351.317 48.7481 351.384 48.7481 351.384 cv
47.5078 353.959 li
f
50.02 355.405 mo
49.6294 355.146 li
51.1519 352.728 li
51.5948 353.02 li
50.02 355.405 li
f
52.3384 357.147 mo
51.9722 356.854 li
55.4092 352.742 li
55.8633 353.112 li
52.3384 357.147 li
f
52.6845 357.462 mo
52.5181 357.298 li
52.3384 357.147 li
55.8633 353.112 li
55.8633 353.112 55.98 353.2 56.0869 353.301 cv
56.1919 353.401 56.2969 353.504 56.2969 353.504 cv
52.6845 357.462 li
f
54.6777 359.565 mo
54.3765 359.207 li
56.5293 357.327 li
56.8711 357.733 li
54.6777 359.565 li
f
56.3975 361.895 mo
56.1309 361.511 li
58.5176 359.94 li
58.8188 360.376 li
56.3975 361.895 li
f
57.749 364.456 mo
57.5659 364.025 li
60.144 362.792 li
60.3535 363.279 li
57.749 364.456 li
f
58.7568 367.169 mo
58.6157 366.724 li
61.3379 365.851 li
61.4976 366.357 li
58.7568 367.169 li
f
59.4189 369.994 mo
59.3213 369.535 li
64.5972 368.599 li
64.7139 369.171 li
59.4189 369.994 li
cp
f
37.1089 363.58 mo
38.5981 373.388 li
34.9028 364.182 li
33.4136 354.374 li
37.1089 363.58 li
cp
.756863 .152941 .176471 rgb
f
grestore
62.5815 357.768 mo
62.5815 361.515 59.5317 364.565 55.7842 364.565 cv
20.6597 364.565 li
16.9121 364.565 13.8623 361.515 13.8623 357.768 cv
13.8623 341.455 li
13.8623 337.707 16.9121 334.657 20.6597 334.657 cv
55.7842 334.657 li
59.5317 334.657 62.5815 337.707 62.5815 341.455 cv
62.5815 357.768 li
55.7842 329.22 mo
20.6597 329.22 li
13.9136 329.22 8.42479 334.709 8.42479 341.455 cv
8.42479 357.768 li
8.42479 364.514 13.9136 370.002 20.6597 370.002 cv
55.7842 370.002 li
62.5298 370.002 68.0191 364.514 68.0191 357.768 cv
68.0191 341.455 li
68.0191 334.709 62.5298 329.22 55.7842 329.22 cv
.258824 .129412 .0431373 rgb
f
69.6797 355.239 mo
69.6797 357.768 li
65.6016 357.768 li
65.6016 355.239 li
69.6797 355.239 li
.105882 .584314 .635294 rgb
f
38.666 345.608 mo
36.7514 345.608 li
36.7514 345.205 li
37.439 344.511 li
37.6426 344.302 37.7759 344.158 37.8379 344.076 cv
37.9727 343.853 li
38.0137 343.64 li
38.0137 343.529 37.9838 343.448 37.9233 343.395 cv
37.8628 343.341 37.7817 343.312 37.6807 343.312 cv
37.5742 343.312 37.4712 343.338 37.3716 343.387 cv
37.2715 343.436 37.167 343.504 37.0586 343.595 cv
36.7436 343.222 li
36.8789 343.106 36.9907 343.026 37.0791 342.979 cv
37.168 342.931 37.2646 342.894 37.3696 342.868 cv
37.4746 342.843 37.5918 342.83 37.7222 342.83 cv
37.893 342.83 38.044 342.861 38.1753 342.924 cv
38.3061 342.986 38.4082 343.074 38.4809 343.185 cv
38.5532 343.299 38.5894 343.427 38.5894 343.572 cv
38.5894 343.698 38.5669 343.816 38.5229 343.927 cv
38.4785 344.037 38.4097 344.151 38.3169 344.267 cv
38.2236 344.383 38.0596 344.548 37.8247 344.764 cv
37.4726 345.096 li
37.4726 345.121 li
38.666 345.121 li
38.666 345.608 li
1 1 1 rgb
f
39.5015 344.239 mo
39.5015 344.575 39.5308 344.815 39.5888 344.962 cv
39.6465 345.106 39.7446 345.18 39.8819 345.18 cv
40.0166 345.18 40.1138 345.105 40.1743 344.959 cv
40.2338 344.811 40.2642 344.571 40.2642 344.239 cv
40.2642 343.903 40.2334 343.661 40.1733 343.515 cv
40.1123 343.368 40.0152 343.295 39.8819 343.295 cv
39.7456 343.295 39.6484 343.368 39.5898 343.515 cv
39.5308 343.661 39.5015 343.903 39.5015 344.239 cv
40.8408 344.239 mo
40.8408 344.718 40.7627 345.071 40.6054 345.301 cv
40.4492 345.53 40.2075 345.646 39.8819 345.646 cv
39.5659 345.646 39.3277 345.526 39.167 345.29 cv
39.0064 345.053 38.9268 344.702 38.9268 344.239 cv
38.9268 343.756 39.0044 343.399 39.1606 343.171 cv
39.3169 342.94 39.5571 342.826 39.8819 342.826 cv
40.1978 342.826 40.437 342.946 40.5986 343.185 cv
40.7602 343.426 40.8408 343.777 40.8408 344.239 cv
f
57.6816 349.373 mo
57.6816 349.544 57.6299 349.689 57.5259 349.81 cv
57.4223 349.929 57.2768 350.011 57.0899 350.056 cv
57.0899 350.067 li
57.311 350.096 57.478 350.162 57.5918 350.27 cv
57.7056 350.376 57.7617 350.52 57.7617 350.701 cv
57.7617 350.964 57.6665 351.17 57.4756 351.316 cv
57.2847 351.463 57.0112 351.536 56.6568 351.536 cv
56.3599 351.536 56.0962 351.487 55.8662 351.388 cv
55.8662 350.896 li
55.9721 350.949 56.0889 350.993 56.2168 351.027 cv
56.3442 351.061 56.4702 351.077 56.5952 351.077 cv
56.7861 351.077 56.9272 351.045 57.0186 350.98 cv
57.1094 350.915 57.1552 350.811 57.1552 350.667 cv
57.1552 350.538 57.1025 350.447 56.9981 350.394 cv
56.8926 350.34 56.7256 350.314 56.4956 350.314 cv
56.2881 350.314 li
56.2881 349.869 li
56.4995 349.869 li
56.7119 349.869 56.8667 349.842 56.9649 349.785 cv
57.063 349.729 57.1123 349.635 57.1123 349.5 cv
57.1123 349.293 56.9824 349.189 56.7226 349.189 cv
56.6323 349.189 56.541 349.204 56.4477 349.234 cv
56.355 349.264 56.2519 349.315 56.1377 349.39 cv
55.8701 348.99 li
56.1196 348.811 56.4175 348.721 56.7636 348.721 cv
57.0474 348.721 57.271 348.778 57.4351 348.893 cv
57.5991 349.009 57.6816 349.168 57.6816 349.373 cv
f
58.624 350.13 mo
58.624 350.466 58.6533 350.706 58.711 350.853 cv
58.769 350.997 58.8672 351.07 59.0044 351.07 cv
59.1391 351.07 59.2364 350.996 59.2964 350.85 cv
59.3564 350.702 59.3867 350.462 59.3867 350.13 cv
59.3867 349.794 59.356 349.552 59.2954 349.405 cv
59.2349 349.259 59.1377 349.185 59.0044 349.185 cv
58.8682 349.185 58.771 349.259 58.7119 349.405 cv
58.6533 349.552 58.624 349.794 58.624 350.13 cv
59.9634 350.13 mo
59.9634 350.608 59.8848 350.962 59.728 351.191 cv
59.5718 351.421 59.3301 351.536 59.0044 351.536 cv
58.688 351.536 58.4497 351.418 58.2896 351.181 cv
58.1289 350.943 58.0488 350.593 58.0488 350.13 cv
58.0488 349.646 58.127 349.29 58.2828 349.061 cv
58.4394 348.831 58.6797 348.717 59.0044 348.717 cv
59.3199 348.717 59.5591 348.837 59.7207 349.076 cv
59.8823 349.316 59.9634 349.668 59.9634 350.13 cv
f
19.3018 351.498 mo
18.7231 351.498 li
18.7231 349.913 li
18.729 349.652 li
18.7378 349.368 li
18.6416 349.464 18.5752 349.527 18.5376 349.558 cv
18.2227 349.811 li
17.9438 349.462 li
18.8262 348.759 li
19.3018 348.759 li
19.3018 351.498 li
cp
f
20.6206 350.129 mo
20.6206 350.465 20.6499 350.705 20.708 350.852 cv
20.7656 350.996 20.8638 351.069 21.001 351.069 cv
21.1362 351.069 21.2329 350.995 21.2935 350.849 cv
21.353 350.701 21.3833 350.461 21.3833 350.129 cv
21.3833 349.793 21.3525 349.551 21.2925 349.404 cv
21.2319 349.258 21.1348 349.185 21.001 349.185 cv
20.8647 349.185 20.7676 349.258 20.709 349.404 cv
20.6499 349.551 20.6206 349.793 20.6206 350.129 cv
cp
21.9604 350.129 mo
21.9604 350.607 21.8818 350.961 21.7251 351.19 cv
21.5684 351.42 21.3267 351.535 21.001 351.535 cv
20.6851 351.535 20.4468 351.417 20.2866 351.18 cv
20.1255 350.942 20.0459 350.592 20.0459 350.129 cv
20.0459 349.646 20.124 349.289 20.2798 349.061 cv
20.436 348.83 20.6763 348.716 21.001 348.716 cv
21.3169 348.716 21.5562 348.836 21.7178 349.075 cv
21.8794 349.315 21.9604 349.667 21.9604 350.129 cv
cp
f
30.1406 378.386 mo
24.2495 377.933 li
24.2495 376.233 li
30.1406 375.781 li
30.1406 378.386 li
cp
.105882 .584314 .635294 rgb
f
33.0864 378.669 mo
29.4092 378.669 li
29.4092 375.498 li
33.0864 375.498 li
33.0864 378.669 li
cp
f
38.229 377.615 mo
38.229 376.616 li
39.9561 376.712 li
39.9561 377.534 li
38.229 377.615 li
.027451 .0745098 .027451 rgb
f
55.7842 364.565 mo
38.229 364.565 li
38.229 351.877 li
46.8261 351.88 54.2545 356.974 57.6563 364.303 cv
57.0612 364.474 56.4333 364.565 55.7842 364.565 cv
58.35 363.65 mo
57.9836 362.888 57.5746 362.149 57.1271 361.438 cv
58.8188 360.376 li
58.5176 359.94 li
56.8636 361.029 li
56.3985 360.324 55.8943 359.646 55.3545 359 cv
56.8711 357.733 li
56.5293 357.327 li
55.0379 358.629 li
54.483 357.994 53.8927 357.39 53.2702 356.82 cv
56.2969 353.504 li
56.2969 353.504 56.1919 353.401 56.0869 353.301 cv
55.98 353.2 55.8633 353.112 55.8633 353.112 cv
52.9077 356.496 li
52.9077 356.496 li
55.8633 353.112 li
55.4092 352.742 li
52.5372 356.178 li
51.8909 355.637 51.2144 355.131 50.5091 354.665 cv
51.5948 353.02 li
51.1519 352.728 li
50.0995 354.4 li
49.3883 353.951 48.6487 353.54 47.8865 353.173 cv
48.7481 351.384 li
48.7481 351.384 48.6328 351.317 48.5118 351.264 cv
48.3887 351.213 48.2662 351.162 48.2662 351.162 cv
47.4455 352.966 li
46.6819 352.618 45.8937 352.311 45.0873 352.05 cv
45.6948 350.176 li
45.187 350.021 li
44.622 351.905 li
43.8197 351.664 42.9992 351.468 42.162 351.318 cv
42.5098 349.379 li
41.9893 349.274 li
41.6821 351.238 li
40.8577 351.109 40.0176 351.025 39.1662 350.989 cv
39.351 346.505 li
38.7656 346.505 li
38.6793 350.974 li
38.6793 350.974 li
38.7656 346.505 li
38.229 346.506 li
38.229 345.608 li
38.666 345.608 li
38.666 345.121 li
38.229 345.121 li
38.229 344.368 li
38.2631 344.331 38.2924 344.297 38.3169 344.267 cv
38.4097 344.151 38.4785 344.037 38.5229 343.927 cv
38.5669 343.816 38.5894 343.698 38.5894 343.572 cv
38.5894 343.427 38.5532 343.299 38.4809 343.185 cv
38.4185 343.09 38.3343 343.012 38.229 342.952 cv
38.229 334.657 li
55.7842 334.657 li
59.5317 334.657 62.5815 337.707 62.5815 341.455 cv
62.5815 357.768 li
62.5815 359.83 61.6579 361.681 60.2028 362.929 cv
60.144 362.792 li
58.35 363.65 li
59.0044 348.717 mo
58.6797 348.717 58.4394 348.831 58.2828 349.061 cv
58.127 349.29 58.0488 349.646 58.0488 350.13 cv
58.0488 350.593 58.1289 350.943 58.2896 351.181 cv
58.4497 351.418 58.688 351.536 59.0044 351.536 cv
59.3301 351.536 59.5718 351.421 59.728 351.191 cv
59.8848 350.962 59.9634 350.608 59.9634 350.13 cv
59.9634 349.668 59.8823 349.316 59.7207 349.076 cv
59.5591 348.837 59.3199 348.717 59.0044 348.717 cv
55.8662 350.896 mo
55.8662 351.388 li
56.0962 351.487 56.3599 351.536 56.6568 351.536 cv
57.0112 351.536 57.2847 351.463 57.4756 351.316 cv
57.6665 351.17 57.7617 350.964 57.7617 350.701 cv
57.7617 350.52 57.7056 350.376 57.5918 350.27 cv
57.478 350.162 57.311 350.096 57.0899 350.067 cv
57.0899 350.056 li
57.2768 350.011 57.4223 349.929 57.5259 349.81 cv
57.6299 349.689 57.6816 349.544 57.6816 349.373 cv
57.6816 349.168 57.5991 349.009 57.4351 348.893 cv
57.271 348.778 57.0474 348.721 56.7636 348.721 cv
56.4175 348.721 56.1196 348.811 55.8701 348.99 cv
56.1377 349.39 li
56.2519 349.315 56.355 349.264 56.4477 349.234 cv
56.541 349.204 56.6323 349.189 56.7226 349.189 cv
56.9824 349.189 57.1123 349.293 57.1123 349.5 cv
57.1123 349.635 57.063 349.729 56.9649 349.785 cv
56.8667 349.842 56.7119 349.869 56.4995 349.869 cv
56.2881 349.869 li
56.2881 350.314 li
56.4956 350.314 li
56.7256 350.314 56.8926 350.34 56.9981 350.394 cv
57.1025 350.447 57.1552 350.538 57.1552 350.667 cv
57.1552 350.811 57.1094 350.915 57.0186 350.98 cv
56.9272 351.045 56.7861 351.077 56.5952 351.077 cv
56.4702 351.077 56.3442 351.061 56.2168 351.027 cv
56.0889 350.993 55.9721 350.949 55.8662 350.896 cv
39.8819 342.826 mo
39.5571 342.826 39.3169 342.94 39.1606 343.171 cv
39.0044 343.399 38.9268 343.756 38.9268 344.239 cv
38.9268 344.702 39.0064 345.053 39.167 345.29 cv
39.3277 345.526 39.5659 345.646 39.8819 345.646 cv
40.2075 345.646 40.4492 345.53 40.6054 345.301 cv
40.7627 345.071 40.8408 344.718 40.8408 344.239 cv
40.8408 343.777 40.7602 343.426 40.5986 343.185 cv
40.437 342.946 40.1978 342.826 39.8819 342.826 cv
.0588235 .462745 .517647 rgb
f
57.6563 364.303 mo
54.2545 356.974 46.8261 351.88 38.229 351.877 cv
38.229 351.864 li
38.6621 351.862 li
38.6793 350.974 li
38.6793 350.974 li
38.6621 351.862 li
39.1304 351.858 li
39.1662 350.989 li
40.0176 351.025 40.8577 351.109 41.6821 351.238 cv
41.5474 352.099 li
42.0054 352.191 li
42.162 351.318 li
42.9992 351.468 43.8197 351.664 44.622 351.905 cv
44.3657 352.759 li
44.8135 352.894 li
45.0873 352.05 li
45.8937 352.311 46.6819 352.618 47.4455 352.966 cv
47.0825 353.764 li
47.0825 353.764 47.1909 353.808 47.2993 353.853 cv
47.4067 353.899 47.5078 353.959 47.5078 353.959 cv
47.8865 353.173 li
48.6487 353.54 49.3883 353.951 50.0995 354.4 cv
49.6294 355.146 li
50.02 355.405 li
50.5091 354.665 li
51.2144 355.131 51.8909 355.637 52.5372 356.178 cv
51.9722 356.854 li
52.3384 357.147 li
52.9077 356.496 li
52.9077 356.496 li
52.3384 357.147 li
52.5181 357.298 li
52.6845 357.462 li
53.2702 356.82 li
53.8927 357.39 54.483 357.994 55.0379 358.629 cv
54.3765 359.207 li
54.6777 359.565 li
55.3545 359 li
55.8943 359.646 56.3985 360.324 56.8636 361.029 cv
56.1309 361.511 li
56.3975 361.895 li
57.1271 361.438 li
57.5746 362.149 57.9836 362.888 58.35 363.65 cv
57.5659 364.025 li
57.681 364.296 li
57.6728 364.298 57.6645 364.301 57.6563 364.303 cv
.552941 .792157 .815686 rgb
f
38.229 351.864 mo
38.229 346.506 li
38.7656 346.505 li
38.6793 350.974 li
38.6621 351.862 li
38.229 351.864 li
f
38.6621 351.862 mo
38.6793 350.974 li
38.7656 346.505 li
39.351 346.505 li
39.1662 350.989 li
39.1304 351.858 li
38.6621 351.862 li
f
42.0054 352.191 mo
41.5474 352.099 li
41.6821 351.238 li
41.9893 349.274 li
42.5098 349.379 li
42.162 351.318 li
42.0054 352.191 li
f
44.8135 352.894 mo
44.3657 352.759 li
44.622 351.905 li
45.187 350.021 li
45.6948 350.176 li
45.0873 352.05 li
44.8135 352.894 li
f
47.5078 353.959 mo
47.5078 353.959 47.4067 353.899 47.2993 353.853 cv
47.1909 353.808 47.0825 353.764 47.0825 353.764 cv
47.4455 352.966 li
48.2662 351.162 li
48.2662 351.162 48.3887 351.213 48.5118 351.264 cv
48.6328 351.317 48.7481 351.384 48.7481 351.384 cv
47.8865 353.173 li
47.5078 353.959 li
f
50.02 355.405 mo
49.6294 355.146 li
50.0995 354.4 li
51.1519 352.728 li
51.5948 353.02 li
50.5091 354.665 li
50.02 355.405 li
f
52.3384 357.147 mo
51.9722 356.854 li
52.5372 356.178 li
55.4092 352.742 li
55.8633 353.112 li
52.9077 356.496 li
52.3384 357.147 li
f
52.6845 357.462 mo
52.5181 357.298 li
52.3384 357.147 li
52.9077 356.496 li
55.8633 353.112 li
55.8633 353.112 55.98 353.2 56.0869 353.301 cv
56.1919 353.401 56.2969 353.504 56.2969 353.504 cv
53.2702 356.82 li
52.6845 357.462 li
f
54.6777 359.565 mo
54.3765 359.207 li
55.0379 358.629 li
56.5293 357.327 li
56.8711 357.733 li
55.3545 359 li
54.6777 359.565 li
f
56.3975 361.895 mo
56.1309 361.511 li
56.8636 361.029 li
58.5176 359.94 li
58.8188 360.376 li
57.1271 361.438 li
56.3975 361.895 li
f
57.681 364.296 mo
57.5659 364.025 li
58.35 363.65 li
60.144 362.792 li
60.2028 362.929 li
59.4779 363.55 58.6212 364.022 57.681 364.296 cv
f
39.8819 345.18 mo
39.7446 345.18 39.6465 345.106 39.5888 344.962 cv
39.5308 344.815 39.5015 344.575 39.5015 344.239 cv
39.5015 343.903 39.5308 343.661 39.5898 343.515 cv
39.6484 343.368 39.7456 343.295 39.8819 343.295 cv
40.0152 343.295 40.1123 343.368 40.1733 343.515 cv
40.2334 343.661 40.2642 343.903 40.2642 344.239 cv
40.2642 344.571 40.2338 344.811 40.1743 344.959 cv
40.1138 345.105 40.0166 345.18 39.8819 345.18 cv
.0588235 .462745 .517647 rgb
f
55.7842 370.002 mo
38.229 370.002 li
38.229 364.565 li
55.7842 364.565 li
56.4333 364.565 57.0612 364.474 57.6563 364.303 cv
57.6645 364.301 57.6728 364.298 57.681 364.296 cv
58.6212 364.022 59.4779 363.55 60.2028 362.929 cv
61.6579 361.681 62.5815 359.83 62.5815 357.768 cv
62.5815 341.455 li
62.5815 337.707 59.5317 334.657 55.7842 334.657 cv
38.229 334.657 li
38.229 329.22 li
55.7842 329.22 li
62.5298 329.22 68.0191 334.709 68.0191 341.455 cv
68.0191 342.45 li
68.0191 355.239 li
65.6016 355.239 li
65.6016 357.768 li
68.0191 357.768 li
68.0191 364.514 62.5298 370.002 55.7842 370.002 cv
.141176 .101961 .0352941 rgb
f
69.6797 357.768 mo
68.0191 357.768 li
65.6016 357.768 li
65.6016 355.239 li
68.0191 355.239 li
69.6797 355.239 li
69.6797 357.768 li
.0588235 .462745 .517647 rgb
f
38.666 345.608 mo
38.229 345.608 li
38.229 345.121 li
38.666 345.121 li
38.666 345.608 li
38.229 344.368 mo
38.229 342.952 li
38.3343 343.012 38.4185 343.09 38.4809 343.185 cv
38.5532 343.299 38.5894 343.427 38.5894 343.572 cv
38.5894 343.698 38.5669 343.816 38.5229 343.927 cv
38.4785 344.037 38.4097 344.151 38.3169 344.267 cv
38.2924 344.297 38.2631 344.331 38.229 344.368 cv
.552941 .792157 .815686 rgb
f
39.8819 345.646 mo
39.5659 345.646 39.3277 345.526 39.167 345.29 cv
39.0064 345.053 38.9268 344.702 38.9268 344.239 cv
38.9268 343.756 39.0044 343.399 39.1606 343.171 cv
39.3169 342.94 39.5571 342.826 39.8819 342.826 cv
40.1978 342.826 40.437 342.946 40.5986 343.185 cv
40.7602 343.426 40.8408 343.777 40.8408 344.239 cv
40.8408 344.718 40.7627 345.071 40.6054 345.301 cv
40.4492 345.53 40.2075 345.646 39.8819 345.646 cv
39.8819 343.295 mo
39.7456 343.295 39.6484 343.368 39.5898 343.515 cv
39.5308 343.661 39.5015 343.903 39.5015 344.239 cv
39.5015 344.575 39.5308 344.815 39.5888 344.962 cv
39.6465 345.106 39.7446 345.18 39.8819 345.18 cv
40.0166 345.18 40.1138 345.105 40.1743 344.959 cv
40.2338 344.811 40.2642 344.571 40.2642 344.239 cv
40.2642 343.903 40.2334 343.661 40.1733 343.515 cv
40.1123 343.368 40.0152 343.295 39.8819 343.295 cv
f
56.6568 351.536 mo
56.3599 351.536 56.0962 351.487 55.8662 351.388 cv
55.8662 350.896 li
55.9721 350.949 56.0889 350.993 56.2168 351.027 cv
56.3442 351.061 56.4702 351.077 56.5952 351.077 cv
56.7861 351.077 56.9272 351.045 57.0186 350.98 cv
57.1094 350.915 57.1552 350.811 57.1552 350.667 cv
57.1552 350.538 57.1025 350.447 56.9981 350.394 cv
56.8926 350.34 56.7256 350.314 56.4956 350.314 cv
56.2881 350.314 li
56.2881 349.869 li
56.4995 349.869 li
56.7119 349.869 56.8667 349.842 56.9649 349.785 cv
57.063 349.729 57.1123 349.635 57.1123 349.5 cv
57.1123 349.293 56.9824 349.189 56.7226 349.189 cv
56.6323 349.189 56.541 349.204 56.4477 349.234 cv
56.355 349.264 56.2519 349.315 56.1377 349.39 cv
55.8701 348.99 li
56.1196 348.811 56.4175 348.721 56.7636 348.721 cv
57.0474 348.721 57.271 348.778 57.4351 348.893 cv
57.5991 349.009 57.6816 349.168 57.6816 349.373 cv
57.6816 349.544 57.6299 349.689 57.5259 349.81 cv
57.4223 349.929 57.2768 350.011 57.0899 350.056 cv
57.0899 350.067 li
57.311 350.096 57.478 350.162 57.5918 350.27 cv
57.7056 350.376 57.7617 350.52 57.7617 350.701 cv
57.7617 350.964 57.6665 351.17 57.4756 351.316 cv
57.2847 351.463 57.0112 351.536 56.6568 351.536 cv
f
59.0044 351.07 mo
58.8672 351.07 58.769 350.997 58.711 350.853 cv
58.6533 350.706 58.624 350.466 58.624 350.13 cv
58.624 349.794 58.6533 349.552 58.7119 349.405 cv
58.771 349.259 58.8682 349.185 59.0044 349.185 cv
59.1377 349.185 59.2349 349.259 59.2954 349.405 cv
59.356 349.552 59.3867 349.794 59.3867 350.13 cv
59.3867 350.462 59.3564 350.702 59.2964 350.85 cv
59.2364 350.996 59.1391 351.07 59.0044 351.07 cv
.0588235 .462745 .517647 rgb
f
59.0044 351.536 mo
58.688 351.536 58.4497 351.418 58.2896 351.181 cv
58.1289 350.943 58.0488 350.593 58.0488 350.13 cv
58.0488 349.646 58.127 349.29 58.2828 349.061 cv
58.4394 348.831 58.6797 348.717 59.0044 348.717 cv
59.3199 348.717 59.5591 348.837 59.7207 349.076 cv
59.8823 349.316 59.9634 349.668 59.9634 350.13 cv
59.9634 350.608 59.8848 350.962 59.728 351.191 cv
59.5718 351.421 59.3301 351.536 59.0044 351.536 cv
59.0044 349.185 mo
58.8682 349.185 58.771 349.259 58.7119 349.405 cv
58.6533 349.552 58.624 349.794 58.624 350.13 cv
58.624 350.466 58.6533 350.706 58.711 350.853 cv
58.769 350.997 58.8672 351.07 59.0044 351.07 cv
59.1391 351.07 59.2364 350.996 59.2964 350.85 cv
59.3564 350.702 59.3867 350.462 59.3867 350.13 cv
59.3867 349.794 59.356 349.552 59.2954 349.405 cv
59.2349 349.259 59.1377 349.185 59.0044 349.185 cv
.552941 .792157 .815686 rgb
f
373.351 218.664 mo
373.351 274.158 li
373.351 276.224 371.676 277.898 369.611 277.898 cv
333.069 277.898 li
331.004 277.898 329.329 276.224 329.329 274.158 cv
329.329 218.664 li
329.329 216.6 331.004 214.932 333.069 214.932 cv
369.611 214.932 li
371.676 214.932 373.351 216.6 373.351 218.664 cv
.105882 .584314 .635294 rgb
f
339.851 239.683 mo
336.783 239.683 li
335.896 239.683 335.176 238.964 335.176 238.077 cv
335.176 235.009 li
335.176 234.122 335.896 233.402 336.783 233.402 cv
339.851 233.402 li
340.738 233.402 341.457 234.122 341.457 235.009 cv
341.457 238.077 li
341.457 238.964 340.738 239.683 339.851 239.683 cv
cp
.0352941 .360784 .376471 rgb
f
348.627 239.683 mo
345.56 239.683 li
344.673 239.683 343.954 238.964 343.954 238.077 cv
343.954 235.009 li
343.954 234.122 344.673 233.402 345.56 233.402 cv
348.627 233.402 li
349.514 233.402 350.234 234.122 350.234 235.009 cv
350.234 238.077 li
350.234 238.964 349.514 239.683 348.627 239.683 cv
cp
f
357.404 239.683 mo
354.336 239.683 li
353.449 239.683 352.731 238.964 352.731 238.077 cv
352.731 235.009 li
352.731 234.122 353.449 233.402 354.336 233.402 cv
357.404 233.402 li
358.291 233.402 359.009 234.122 359.009 235.009 cv
359.009 238.077 li
359.009 238.964 358.291 239.683 357.404 239.683 cv
f
339.851 248.099 mo
336.783 248.099 li
335.896 248.099 335.176 247.38 335.176 246.492 cv
335.176 243.426 li
335.176 242.537 335.896 241.819 336.783 241.819 cv
339.851 241.819 li
340.738 241.819 341.457 242.537 341.457 243.426 cv
341.457 246.492 li
341.457 247.38 340.738 248.099 339.851 248.099 cv
cp
.509804 .839216 .847059 rgb
f
348.627 248.099 mo
345.56 248.099 li
344.673 248.099 343.954 247.38 343.954 246.492 cv
343.954 243.426 li
343.954 242.537 344.673 241.819 345.56 241.819 cv
348.627 241.819 li
349.514 241.819 350.234 242.537 350.234 243.426 cv
350.234 246.492 li
350.234 247.38 349.514 248.099 348.627 248.099 cv
cp
f
357.404 248.099 mo
354.336 248.099 li
353.449 248.099 352.731 247.38 352.731 246.492 cv
352.731 243.426 li
352.731 242.537 353.449 241.819 354.336 241.819 cv
357.404 241.819 li
358.291 241.819 359.009 242.537 359.009 243.426 cv
359.009 246.492 li
359.009 247.38 358.291 248.099 357.404 248.099 cv
f
339.851 256.515 mo
336.783 256.515 li
335.896 256.515 335.176 255.795 335.176 254.908 cv
335.176 251.841 li
335.176 250.954 335.896 250.234 336.783 250.234 cv
339.851 250.234 li
340.738 250.234 341.457 250.954 341.457 251.841 cv
341.457 254.908 li
341.457 255.795 340.738 256.515 339.851 256.515 cv
cp
f
348.627 256.515 mo
345.56 256.515 li
344.673 256.515 343.954 255.795 343.954 254.908 cv
343.954 251.841 li
343.954 250.954 344.673 250.234 345.56 250.234 cv
348.627 250.234 li
349.514 250.234 350.234 250.954 350.234 251.841 cv
350.234 254.908 li
350.234 255.795 349.514 256.515 348.627 256.515 cv
cp
f
357.404 256.515 mo
354.336 256.515 li
353.449 256.515 352.731 255.795 352.731 254.908 cv
352.731 251.841 li
352.731 250.954 353.449 250.234 354.336 250.234 cv
357.404 250.234 li
358.291 250.234 359.009 250.954 359.009 251.841 cv
359.009 254.908 li
359.009 255.795 358.291 256.515 357.404 256.515 cv
f
339.851 264.93 mo
336.783 264.93 li
335.896 264.93 335.176 264.212 335.176 263.323 cv
335.176 260.256 li
335.176 259.369 335.896 258.65 336.783 258.65 cv
339.851 258.65 li
340.738 258.65 341.457 259.369 341.457 260.256 cv
341.457 263.323 li
341.457 264.212 340.738 264.93 339.851 264.93 cv
cp
f
348.627 264.93 mo
345.56 264.93 li
344.673 264.93 343.954 264.212 343.954 263.323 cv
343.954 260.256 li
343.954 259.369 344.673 258.65 345.56 258.65 cv
348.627 258.65 li
349.514 258.65 350.234 259.369 350.234 260.256 cv
350.234 263.323 li
350.234 264.212 349.514 264.93 348.627 264.93 cv
cp
f
357.404 264.93 mo
354.336 264.93 li
353.449 264.93 352.731 264.212 352.731 263.323 cv
352.731 260.256 li
352.731 259.369 353.449 258.65 354.336 258.65 cv
357.404 258.65 li
358.291 258.65 359.009 259.369 359.009 260.256 cv
359.009 263.323 li
359.009 264.212 358.291 264.93 357.404 264.93 cv
f
350.232 268.671 mo
350.232 271.74 li
350.232 272.627 349.513 273.347 348.626 273.347 cv
336.785 273.347 li
335.898 273.347 335.178 272.627 335.178 271.74 cv
335.178 268.671 li
335.178 267.784 335.898 267.065 336.785 267.065 cv
348.626 267.065 li
349.513 267.065 350.232 267.784 350.232 268.671 cv
cp
f
357.404 273.346 mo
354.336 273.346 li
353.449 273.346 352.731 272.627 352.731 271.74 cv
352.731 268.672 li
352.731 267.785 353.449 267.065 354.336 267.065 cv
357.404 267.065 li
358.291 267.065 359.009 267.785 359.009 268.672 cv
359.009 271.74 li
359.009 272.627 358.291 273.346 357.404 273.346 cv
f
365.899 239.683 mo
362.832 239.683 li
361.945 239.683 361.225 238.964 361.225 238.077 cv
361.225 235.009 li
361.225 234.122 361.945 233.402 362.832 233.402 cv
365.899 233.402 li
366.786 233.402 367.505 234.122 367.505 235.009 cv
367.505 238.077 li
367.505 238.964 366.786 239.683 365.899 239.683 cv
.0352941 .360784 .376471 rgb
f
365.899 248.099 mo
362.832 248.099 li
361.945 248.099 361.225 247.38 361.225 246.492 cv
361.225 243.426 li
361.225 242.537 361.945 241.819 362.832 241.819 cv
365.899 241.819 li
366.786 241.819 367.505 242.537 367.505 243.426 cv
367.505 246.492 li
367.505 247.38 366.786 248.099 365.899 248.099 cv
.509804 .839216 .847059 rgb
f
365.899 256.515 mo
362.832 256.515 li
361.945 256.515 361.225 255.795 361.225 254.908 cv
361.225 251.841 li
361.225 250.954 361.945 250.234 362.832 250.234 cv
365.899 250.234 li
366.786 250.234 367.505 250.954 367.505 251.841 cv
367.505 254.908 li
367.505 255.795 366.786 256.515 365.899 256.515 cv
f
367.504 260.257 mo
367.504 271.74 li
367.504 272.627 366.786 273.347 365.898 273.347 cv
362.829 273.347 li
361.942 273.347 361.223 272.627 361.223 271.74 cv
361.223 260.257 li
361.223 259.37 361.942 258.651 362.829 258.651 cv
365.898 258.651 li
366.786 258.651 367.504 259.37 367.504 260.257 cv
f
gsave
369.611 277.898 mo
351.339 277.898 li
351.339 230.723 li
351.341 230.723 li
365.055 230.723 li
366.657 230.723 367.965 229.415 367.965 227.813 cv
367.965 221.228 li
367.965 221.228 li
367.965 219.62 366.657 218.318 365.055 218.318 cv
351.339 218.318 li
351.339 214.932 li
369.611 214.932 li
371.676 214.932 373.351 216.6 373.351 218.664 cv
373.351 274.158 li
373.351 276.224 371.676 277.898 369.611 277.898 cv
362.829 258.651 mo
361.942 258.651 361.223 259.37 361.223 260.257 cv
361.223 271.74 li
361.223 272.627 361.942 273.347 362.829 273.347 cv
365.898 273.347 li
366.786 273.347 367.504 272.627 367.504 271.74 cv
367.504 260.257 li
367.504 259.37 366.786 258.651 365.898 258.651 cv
362.829 258.651 li
354.336 267.065 mo
353.449 267.065 352.731 267.785 352.731 268.672 cv
352.731 271.74 li
352.731 272.627 353.449 273.346 354.336 273.346 cv
357.404 273.346 li
358.291 273.346 359.009 272.627 359.009 271.74 cv
359.009 268.672 li
359.009 267.785 358.291 267.065 357.404 267.065 cv
354.336 267.065 li
354.336 258.65 mo
353.449 258.65 352.731 259.369 352.731 260.256 cv
352.731 263.323 li
352.731 264.212 353.449 264.93 354.336 264.93 cv
357.404 264.93 li
358.291 264.93 359.009 264.212 359.009 263.323 cv
359.009 260.256 li
359.009 259.369 358.291 258.65 357.404 258.65 cv
354.336 258.65 li
362.832 250.234 mo
361.945 250.234 361.225 250.954 361.225 251.841 cv
361.225 254.908 li
361.225 255.795 361.945 256.515 362.832 256.515 cv
365.899 256.515 li
366.786 256.515 367.505 255.795 367.505 254.908 cv
367.505 251.841 li
367.505 250.954 366.786 250.234 365.899 250.234 cv
362.832 250.234 li
354.336 250.234 mo
353.449 250.234 352.731 250.954 352.731 251.841 cv
352.731 254.908 li
352.731 255.795 353.449 256.515 354.336 256.515 cv
357.404 256.515 li
358.291 256.515 359.009 255.795 359.009 254.908 cv
359.009 251.841 li
359.009 250.954 358.291 250.234 357.404 250.234 cv
354.336 250.234 li
362.832 241.819 mo
361.945 241.819 361.225 242.537 361.225 243.426 cv
361.225 246.492 li
361.225 247.38 361.945 248.099 362.832 248.099 cv
365.899 248.099 li
366.786 248.099 367.505 247.38 367.505 246.492 cv
367.505 243.426 li
367.505 242.537 366.786 241.819 365.899 241.819 cv
362.832 241.819 li
354.336 241.819 mo
353.449 241.819 352.731 242.537 352.731 243.426 cv
352.731 246.492 li
352.731 247.38 353.449 248.099 354.336 248.099 cv
357.404 248.099 li
358.291 248.099 359.009 247.38 359.009 246.492 cv
359.009 243.426 li
359.009 242.537 358.291 241.819 357.404 241.819 cv
354.336 241.819 li
362.832 233.402 mo
361.945 233.402 361.225 234.122 361.225 235.009 cv
361.225 238.077 li
361.225 238.964 361.945 239.683 362.832 239.683 cv
365.899 239.683 li
366.786 239.683 367.505 238.964 367.505 238.077 cv
367.505 235.009 li
367.505 234.122 366.786 233.402 365.899 233.402 cv
362.832 233.402 li
354.336 233.402 mo
353.449 233.402 352.731 234.122 352.731 235.009 cv
352.731 238.077 li
352.731 238.964 353.449 239.683 354.336 239.683 cv
357.404 239.683 li
358.291 239.683 359.009 238.964 359.009 238.077 cv
359.009 235.009 li
359.009 234.122 358.291 233.402 357.404 233.402 cv
354.336 233.402 li
clp
351.339 214.932 mo
373.351 214.932 li
373.351 277.898 li
351.339 277.898 li
cp
.0588235 .462745 .517647 rgb
f
grestore
357.404 239.683 mo
354.336 239.683 li
353.449 239.683 352.731 238.964 352.731 238.077 cv
352.731 235.009 li
352.731 234.122 353.449 233.402 354.336 233.402 cv
357.404 233.402 li
358.291 233.402 359.009 234.122 359.009 235.009 cv
359.009 238.077 li
359.009 238.964 358.291 239.683 357.404 239.683 cv
.0196078 .286274 .305882 rgb
f
357.404 248.099 mo
354.336 248.099 li
353.449 248.099 352.731 247.38 352.731 246.492 cv
352.731 243.426 li
352.731 242.537 353.449 241.819 354.336 241.819 cv
357.404 241.819 li
358.291 241.819 359.009 242.537 359.009 243.426 cv
359.009 246.492 li
359.009 247.38 358.291 248.099 357.404 248.099 cv
.282353 .662745 .690196 rgb
f
357.404 256.515 mo
354.336 256.515 li
353.449 256.515 352.731 255.795 352.731 254.908 cv
352.731 251.841 li
352.731 250.954 353.449 250.234 354.336 250.234 cv
357.404 250.234 li
358.291 250.234 359.009 250.954 359.009 251.841 cv
359.009 254.908 li
359.009 255.795 358.291 256.515 357.404 256.515 cv
f
357.404 264.93 mo
354.336 264.93 li
353.449 264.93 352.731 264.212 352.731 263.323 cv
352.731 260.256 li
352.731 259.369 353.449 258.65 354.336 258.65 cv
357.404 258.65 li
358.291 258.65 359.009 259.369 359.009 260.256 cv
359.009 263.323 li
359.009 264.212 358.291 264.93 357.404 264.93 cv
f
357.404 273.346 mo
354.336 273.346 li
353.449 273.346 352.731 272.627 352.731 271.74 cv
352.731 268.672 li
352.731 267.785 353.449 267.065 354.336 267.065 cv
357.404 267.065 li
358.291 267.065 359.009 267.785 359.009 268.672 cv
359.009 271.74 li
359.009 272.627 358.291 273.346 357.404 273.346 cv
f
365.899 239.683 mo
362.832 239.683 li
361.945 239.683 361.225 238.964 361.225 238.077 cv
361.225 235.009 li
361.225 234.122 361.945 233.402 362.832 233.402 cv
365.899 233.402 li
366.786 233.402 367.505 234.122 367.505 235.009 cv
367.505 238.077 li
367.505 238.964 366.786 239.683 365.899 239.683 cv
.0196078 .286274 .305882 rgb
f
365.899 248.099 mo
362.832 248.099 li
361.945 248.099 361.225 247.38 361.225 246.492 cv
361.225 243.426 li
361.225 242.537 361.945 241.819 362.832 241.819 cv
365.899 241.819 li
366.786 241.819 367.505 242.537 367.505 243.426 cv
367.505 246.492 li
367.505 247.38 366.786 248.099 365.899 248.099 cv
.282353 .662745 .690196 rgb
f
365.899 256.515 mo
362.832 256.515 li
361.945 256.515 361.225 255.795 361.225 254.908 cv
361.225 251.841 li
361.225 250.954 361.945 250.234 362.832 250.234 cv
365.899 250.234 li
366.786 250.234 367.505 250.954 367.505 251.841 cv
367.505 254.908 li
367.505 255.795 366.786 256.515 365.899 256.515 cv
f
365.898 273.347 mo
362.829 273.347 li
361.942 273.347 361.223 272.627 361.223 271.74 cv
361.223 260.257 li
361.223 259.37 361.942 258.651 362.829 258.651 cv
365.898 258.651 li
366.786 258.651 367.504 259.37 367.504 260.257 cv
367.504 271.74 li
367.504 272.627 366.786 273.347 365.898 273.347 cv
f
365.053 230.264 mo
337.629 230.264 li
336.275 230.264 335.176 229.165 335.176 227.811 cv
335.176 221.228 li
335.176 219.873 336.275 218.775 337.629 218.775 cv
365.053 218.775 li
366.407 218.775 367.505 219.873 367.505 221.228 cv
367.505 227.811 li
367.505 229.165 366.407 230.264 365.053 230.264 cv
.992157 .737255 0 rgb
f
367.047 227.813 mo
367.047 228.908 366.151 229.805 365.055 229.805 cv
337.631 229.805 li
336.529 229.805 335.632 228.908 335.632 227.813 cv
335.632 221.228 li
335.632 220.127 336.529 219.237 337.631 219.237 cv
365.055 219.237 li
366.151 219.237 367.047 220.127 367.047 221.228 cv
367.047 227.813 li
365.055 218.318 mo
337.631 218.318 li
336.022 218.318 334.714 219.62 334.714 221.228 cv
334.714 227.813 li
334.714 229.415 336.022 230.723 337.631 230.723 cv
365.055 230.723 li
366.657 230.723 367.965 229.415 367.965 227.813 cv
367.965 221.228 li
367.965 219.62 366.657 218.318 365.055 218.318 cv
.0352941 .360784 .376471 rgb
f
365.055 229.805 mo
351.341 229.805 li
351.341 219.237 li
365.055 219.237 li
366.151 219.237 367.047 220.127 367.047 221.228 cv
367.047 227.813 li
367.047 228.908 366.151 229.805 365.055 229.805 cv
.992157 .580392 0 rgb
f
365.055 230.723 mo
351.341 230.723 li
351.341 229.805 li
365.055 229.805 li
366.151 229.805 367.047 228.908 367.047 227.813 cv
367.047 221.228 li
367.047 220.127 366.151 219.237 365.055 219.237 cv
351.341 219.237 li
351.341 218.318 li
365.055 218.318 li
366.657 218.318 367.965 219.62 367.965 221.228 cv
367.965 227.813 li
367.965 229.415 366.657 230.723 365.055 230.723 cv
.0352941 .282353 .207843 rgb
f
356.396 227.047 mo
355.389 227.047 li
355.389 224.291 li
355.399 223.838 li
355.416 223.343 li
355.248 223.51 355.132 223.619 355.067 223.672 cv
354.519 224.111 li
354.034 223.505 li
355.568 222.283 li
356.396 222.283 li
356.396 227.047 li
cp
.0352941 .360784 .376471 rgb
f
358.997 225.053 mo
357.735 225.053 li
357.735 224.339 li
358.997 224.339 li
358.997 223.068 li
359.709 223.068 li
359.709 224.339 li
360.97 224.339 li
360.97 225.053 li
359.709 225.053 li
359.709 226.308 li
358.997 226.308 li
358.997 225.053 li
cp
f
364.854 227.047 mo
361.524 227.047 li
361.524 226.347 li
362.72 225.138 li
363.074 224.774 363.305 224.523 363.414 224.384 cv
363.523 224.244 363.601 224.113 363.649 223.994 cv
363.697 223.874 363.72 223.751 363.72 223.623 cv
363.72 223.432 363.667 223.289 363.562 223.196 cv
363.457 223.103 363.316 223.056 363.14 223.056 cv
362.956 223.056 362.777 223.099 362.602 223.183 cv
362.429 223.268 362.248 223.389 362.059 223.544 cv
361.511 222.896 li
361.746 222.696 361.94 222.555 362.094 222.473 cv
362.249 222.39 362.417 222.326 362.599 222.281 cv
362.782 222.237 362.986 222.216 363.211 222.216 cv
363.509 222.216 363.772 222.269 364 222.378 cv
364.229 222.486 364.406 222.639 364.532 222.834 cv
364.658 223.029 364.72 223.254 364.72 223.505 cv
364.72 223.725 364.682 223.931 364.605 224.123 cv
364.528 224.315 364.409 224.513 364.247 224.715 cv
364.084 224.916 363.799 225.204 363.391 225.577 cv
362.778 226.154 li
362.778 226.2 li
364.854 226.2 li
364.854 227.047 li
cp
f
168.036 235.286 mo
168.036 244.949 162.459 253.304 154.346 257.309 cv
152.105 258.426 149.665 259.197 147.101 259.572 cv
146.822 259.624 146.535 259.66 146.249 259.689 cv
145.345 259.792 144.419 259.844 143.486 259.844 cv
142.552 259.844 141.634 259.792 140.723 259.689 cv
140.436 259.66 140.157 259.624 139.87 259.572 cv
137.306 259.205 134.866 258.426 132.624 257.316 cv
124.505 253.312 118.928 244.949 118.928 235.286 cv
118.928 221.729 129.92 210.735 143.486 210.735 cv
157.043 210.735 168.036 221.729 168.036 235.286 cv
.992157 .737255 0 rgb
f
154.346 241.804 mo
154.346 269.162 li
132.624 269.162 li
132.624 241.804 li
154.346 241.804 li
f
154.346 265.855 mo
154.346 273.865 li
154.346 274.056 154.332 274.239 154.31 274.423 cv
154.221 275.201 153.935 275.914 153.508 276.524 cv
153.472 276.561 li
152.634 277.729 151.267 278.487 149.724 278.487 cv
137.247 278.487 li
135.704 278.487 134.337 277.729 133.499 276.561 cv
133.462 276.524 li
133.036 275.914 132.749 275.201 132.662 274.423 cv
132.64 274.239 132.624 274.056 132.624 273.865 cv
132.624 265.855 li
154.346 265.855 li
.105882 .584314 .635294 rgb
f
148.879 276.679 mo
148.879 276.774 li
148.879 277.002 148.864 277.222 148.835 277.436 cv
148.791 277.803 148.71 278.148 148.593 278.487 cv
147.887 280.588 145.895 282.095 143.559 282.095 cv
143.449 282.095 li
141.105 282.095 139.113 280.588 138.394 278.487 cv
138.269 278.148 138.188 277.803 138.143 277.436 cv
138.107 277.208 138.092 276.973 138.092 276.737 cv
138.092 276.679 li
148.879 276.679 li
f
154.346 269.162 mo
154.346 272.167 li
132.624 272.167 li
132.624 269.162 li
154.346 269.162 li
.0156863 .384314 .4 rgb
f
154.346 274.423 mo
154.346 274.452 li
154.346 275.261 154.023 275.996 153.508 276.524 cv
153.472 276.561 li
152.936 277.098 152.186 277.436 151.37 277.436 cv
135.601 277.436 li
134.785 277.436 134.036 277.098 133.499 276.561 cv
133.462 276.524 li
132.948 275.996 132.624 275.261 132.624 274.452 cv
132.624 274.423 li
154.346 274.423 li
f
146.672 266.225 mo
146.438 266.225 146.247 266.034 146.247 265.799 cv
146.247 243.817 li
146.32 243.578 li
152.469 234.536 li
152.321 234.634 152.179 234.75 152.026 234.875 cv
151.547 235.267 151.005 235.71 150.034 235.71 cv
148.963 235.71 148.463 234.808 148.022 234.011 cv
147.588 233.228 147.286 232.752 146.755 232.752 cv
146.225 232.752 145.923 233.228 145.489 234.011 cv
145.047 234.808 144.548 235.71 143.479 235.71 cv
142.409 235.71 141.909 234.807 141.469 234.011 cv
141.036 233.228 140.733 232.752 140.205 232.752 cv
139.675 232.752 139.373 233.228 138.94 234.011 cv
138.499 234.807 138 235.71 136.931 235.71 cv
135.935 235.71 135.356 235.128 134.845 234.613 cv
134.74 234.508 134.638 234.404 134.535 234.31 cv
140.649 243.303 li
140.723 243.542 li
140.723 265.799 li
140.723 266.034 140.532 266.225 140.297 266.225 cv
140.062 266.225 139.872 266.034 139.872 265.799 cv
139.872 243.672 li
133.011 233.58 li
132.922 233.451 132.913 233.282 132.987 233.144 cv
133.061 233.004 133.206 232.916 133.363 232.916 cv
134.359 232.916 134.937 233.499 135.449 234.014 cv
135.899 234.468 136.29 234.858 136.931 234.858 cv
137.46 234.858 137.762 234.383 138.195 233.6 cv
138.636 232.804 139.135 231.9 140.205 231.9 cv
141.273 231.9 141.773 232.804 142.214 233.6 cv
142.647 234.383 142.949 234.858 143.479 234.858 cv
144.008 234.858 144.311 234.383 144.744 233.6 cv
145.185 232.804 145.685 231.9 146.755 231.9 cv
147.825 231.9 148.326 232.803 148.767 233.6 cv
149.201 234.383 149.503 234.858 150.034 234.858 cv
150.702 234.858 151.049 234.575 151.487 234.217 cv
151.965 233.825 152.507 233.383 153.479 233.383 cv
153.636 233.383 153.781 233.47 153.855 233.609 cv
153.929 233.748 153.919 233.916 153.831 234.047 cv
147.098 243.947 li
147.098 265.799 li
147.098 266.034 146.908 266.225 146.672 266.225 cv
.298039 .0313726 .0509804 rgb
f
149.724 278.487 mo
148.593 278.487 li
148.71 278.148 148.791 277.803 148.835 277.436 cv
151.37 277.436 li
152.186 277.436 152.936 277.098 153.472 276.561 cv
152.634 277.729 151.267 278.487 149.724 278.487 cv
.0117647 .341176 .403922 rgb
f
143.559 282.095 mo
143.486 282.095 li
143.486 277.436 li
148.835 277.436 li
148.791 277.803 148.71 278.148 148.593 278.487 cv
148.593 278.487 li
147.887 280.588 145.895 282.095 143.559 282.095 cv
f
154.346 265.855 mo
147.094 265.855 li
147.096 265.846 147.097 265.837 147.097 265.828 cv
154.346 265.814 li
154.346 265.855 li
146.251 265.855 mo
143.486 265.855 li
143.486 265.835 li
146.248 265.83 li
146.249 265.838 146.25 265.847 146.251 265.855 cv
.105882 .431373 0 rgb
f
154.31 274.423 mo
143.486 274.423 li
143.486 272.167 li
154.346 272.167 li
154.346 273.865 li
154.346 274.056 154.332 274.239 154.31 274.423 cv
154.31 274.423 li
154.346 269.162 mo
143.486 269.162 li
143.486 265.855 li
146.251 265.855 li
146.278 266.064 146.457 266.225 146.672 266.225 cv
146.889 266.225 147.067 266.064 147.094 265.855 cv
154.346 265.855 li
154.346 269.162 li
.0117647 .341176 .403922 rgb
f
154.346 272.167 mo
154.346 272.167 li
143.486 272.167 li
143.486 269.162 li
154.346 269.162 li
154.346 272.167 li
0 .223529 .254902 rgb
f
151.37 277.436 mo
148.835 277.436 li
143.486 277.436 li
143.486 274.423 li
154.31 274.423 li
154.31 274.423 li
154.346 274.423 li
154.346 274.452 li
154.346 275.261 154.023 275.996 153.508 276.524 cv
153.472 276.561 li
153.472 276.561 li
152.936 277.098 152.186 277.436 151.37 277.436 cv
f
146.672 266.225 mo
146.457 266.225 146.278 266.064 146.251 265.855 cv
146.25 265.847 146.249 265.838 146.248 265.83 cv
147.097 265.828 li
147.097 265.837 147.096 265.846 147.094 265.855 cv
147.067 266.064 146.889 266.225 146.672 266.225 cv
.0313725 .0196078 .0313725 rgb
f
147.527 241.804 mo
143.486 241.804 li
143.486 235.71 li
144.55 235.706 145.048 234.806 145.489 234.011 cv
145.923 233.228 146.225 232.752 146.755 232.752 cv
147.286 232.752 147.588 233.228 148.022 234.011 cv
148.463 234.808 148.963 235.71 150.034 235.71 cv
151.005 235.71 151.547 235.267 152.026 234.875 cv
152.179 234.75 152.321 234.634 152.469 234.536 cv
147.527 241.804 li
.992157 .423529 0 rgb
f
143.486 265.835 mo
143.486 241.804 li
147.527 241.804 li
146.32 243.578 li
146.247 243.817 li
146.247 265.799 li
146.247 265.809 146.247 265.82 146.248 265.83 cv
143.486 265.835 li
f
154.346 257.309 mo
154.346 241.804 li
148.556 241.804 li
153.831 234.047 li
153.919 233.916 153.929 233.748 153.855 233.609 cv
153.781 233.47 153.636 233.383 153.479 233.383 cv
152.507 233.383 151.965 233.825 151.487 234.217 cv
151.049 234.575 150.702 234.858 150.034 234.858 cv
149.503 234.858 149.201 234.383 148.767 233.6 cv
148.326 232.803 147.825 231.9 146.755 231.9 cv
145.685 231.9 145.185 232.804 144.744 233.6 cv
144.313 234.379 144.011 234.854 143.486 234.858 cv
143.486 210.735 li
157.043 210.735 168.036 221.729 168.036 235.286 cv
168.036 244.949 162.459 253.304 154.346 257.309 cv
f
147.097 265.828 mo
147.098 265.818 147.098 265.809 147.098 265.799 cv
147.098 243.947 li
148.556 241.804 li
154.346 241.804 li
154.346 257.309 li
154.346 265.814 li
147.097 265.828 li
f
146.248 265.83 mo
146.247 265.82 146.247 265.809 146.247 265.799 cv
146.247 243.817 li
146.32 243.578 li
147.527 241.804 li
152.469 234.536 li
152.321 234.634 152.179 234.75 152.026 234.875 cv
151.547 235.267 151.005 235.71 150.034 235.71 cv
148.963 235.71 148.463 234.808 148.022 234.011 cv
147.588 233.228 147.286 232.752 146.755 232.752 cv
146.225 232.752 145.923 233.228 145.489 234.011 cv
145.048 234.806 144.55 235.706 143.486 235.71 cv
143.486 234.858 li
144.011 234.854 144.313 234.379 144.744 233.6 cv
145.185 232.804 145.685 231.9 146.755 231.9 cv
147.825 231.9 148.326 232.803 148.767 233.6 cv
149.201 234.383 149.503 234.858 150.034 234.858 cv
150.702 234.858 151.049 234.575 151.487 234.217 cv
151.965 233.825 152.507 233.383 153.479 233.383 cv
153.636 233.383 153.781 233.47 153.855 233.609 cv
153.929 233.748 153.919 233.916 153.831 234.047 cv
148.556 241.804 li
147.098 243.947 li
147.098 265.799 li
147.098 265.809 147.098 265.818 147.097 265.828 cv
146.248 265.83 li
.298039 .0196078 .00784314 rgb
f
75.9438 122.632 mo
75.4224 123.124 74.8125 123.426 74.1436 123.595 cv
72.6152 121.978 li
66.3471 115.35 li
60.1528 108.795 li
58.6314 107.186 li
58.8301 106.524 59.1753 105.929 59.6895 105.437 cv
60.8945 106.708 li
67.7803 113.99 li
74.7461 121.36 li
75.9438 122.632 li
1 .807843 0 rgb
f
70.7046 123.433 mo
69.3965 123.109 67.9785 122.543 66.5014 121.86 cv
63.4888 118.671 li
63.1724 118.34 li
62.9521 118.105 li
59.9321 114.909 li
59.3291 113.402 58.8447 111.948 58.5947 110.625 cv
61.2329 113.41 li
64.606 116.988 li
68.0737 120.655 li
68.0811 120.655 li
70.7046 123.433 li
f
61.622 123.051 mo
61.622 123.043 li
60.0059 121.332 li
58.4697 119.707 li
55.2881 116.342 li
56.6182 116.849 58.0288 117.525 59.4619 118.252 cv
59.6826 118.363 59.9028 118.48 60.123 118.59 cv
61.4384 119.979 li
62.8349 121.463 li
62.9375 121.691 63.0405 121.919 63.1357 122.147 cv
63.1435 122.147 li
63.7827 123.617 64.3706 125.057 64.8037 126.417 cv
61.622 123.051 li
f
65.5171 130.649 mo
65.4805 131.472 65.2817 132.221 64.8921 132.86 cv
63.6138 131.509 li
56.8311 124.329 li
50.1372 117.246 li
48.8584 115.894 li
49.5196 115.54 50.2691 115.387 51.0996 115.394 cv
53.0249 117.429 li
58.2641 122.977 li
63.5839 128.606 li
65.5171 130.649 li
f
63.0918 134.434 mo
62.3867 134.742 61.5781 134.837 60.7036 134.771 cv
58.6314 132.574 li
58.624 132.574 li
53.664 127.32 li
48.7993 122.184 li
48.7993 122.176 li
46.7129 119.972 li
46.6977 119.09 46.8379 118.296 47.1831 117.598 cv
48.5351 119.023 li
48.5351 119.039 li
55.0893 125.968 li
61.747 133.008 li
63.0918 134.434 li
f
56.2724 133.566 mo
55.1485 133.103 53.9726 132.537 52.7822 131.927 cv
52.2828 131.678 51.7832 131.413 51.2759 131.148 cv
50.4897 130.318 li
49.7988 129.59 li
49.5639 129.069 49.3286 128.547 49.1079 128.033 cv
48.5645 126.813 48.0644 125.615 47.6675 124.462 cv
50.9966 127.981 li
50.9966 127.989 li
51.9224 128.966 li
52.9365 130.039 li
52.9438 130.039 li
52.9512 130.046 li
56.2724 133.566 li
f
51.2759 137.504 mo
51.2759 137.498 li
47.3149 133.309 li
43.4497 129.223 li
40.9956 126.629 li
42.23 126.872 43.5826 127.357 44.9858 127.981 cv
48.4395 131.633 li
48.7481 131.957 li
49.167 132.397 li
49.167 132.405 li
52.6132 136.043 li
53.1567 137.482 53.561 138.857 53.7378 140.106 cv
51.2759 137.504 li
f
53.4873 143.324 mo
53.2817 143.853 52.981 144.332 52.5469 144.743 cv
52.3046 144.934 li
51.1069 143.67 li
44.1484 136.299 li
37.2925 129.047 li
36.0942 127.783 li
36.3003 127.548 li
36.7334 127.144 37.2256 126.872 37.7695 126.688 cv
39.188 128.194 li
39.1954 128.194 li
45.5738 134.955 li
52.0698 141.826 li
53.4873 143.324 li
f
49.8647 145.845 mo
48.917 145.904 47.8589 145.728 46.7349 145.396 cv
43.935 142.436 li
40.9736 139.297 li
38.1226 136.285 li
35.3228 133.324 li
35.0581 132.177 34.9405 131.112 35.0513 130.164 cv
36.8511 132.075 li
36.8584 132.075 li
42.4067 137.946 li
48.0644 143.942 li
49.8647 145.845 li
f
37.3433 138.941 mo
37.7402 139.846 38.1573 140.761 38.5772 141.677 cv
39.4683 142.147 40.3579 142.615 41.2378 143.061 cv
37.3433 138.941 li
f
35.898 140.282 mo
39.8179 144.429 li
39.4195 143.52 38.9995 142.599 38.5772 141.677 cv
37.6802 141.203 36.7837 140.731 35.898 140.282 cv
f
42.0981 153.193 mo
40.2973 151.29 li
40.29 151.283 li
34.625 145.287 li
29.0767 139.415 li
27.2769 137.512 li
28.2242 137.446 29.2823 137.622 30.4072 137.953 cv
33.2139 140.921 li
36.0649 143.934 li
39.0186 147.065 li
39.0264 147.072 li
41.8335 150.041 li
42.0981 151.187 42.2159 152.252 42.0981 153.193 cv
f
41.0547 155.567 mo
40.856 155.802 li
40.4151 156.213 39.9229 156.485 39.3789 156.662 cv
37.961 155.155 li
37.9536 155.155 li
31.4575 148.285 li
25.0796 141.531 li
23.6612 140.033 li
23.8667 139.503 24.1679 139.019 24.6015 138.607 cv
24.8443 138.416 li
26.042 139.688 li
32.8901 146.925 li
39.8569 154.303 li
41.0547 155.567 li
f
36.1455 156.721 mo
34.9038 156.478 33.5591 155.993 32.1485 155.368 cv
28.6944 151.716 li
28.2832 151.275 li
27.9892 150.967 li
24.543 147.322 li
23.9995 145.882 23.5952 144.508 23.4184 143.258 cv
25.8804 145.86 li
25.8804 145.867 li
29.7158 149.923 li
33.6841 154.119 li
33.6914 154.119 li
33.6914 154.126 li
36.1455 156.721 li
f
29.4809 158.896 mo
26.1597 155.383 li
25.1089 154.273 li
24.1973 153.304 li
20.8687 149.784 li
22 150.247 23.169 150.82 24.3667 151.43 cv
24.8662 151.68 25.3662 151.944 25.873 152.209 cv
26.5489 152.921 li
27.3496 153.766 li
27.585 154.288 27.8203 154.81 28.0405 155.324 cv
28.0484 155.324 li
28.5844 156.544 29.084 157.749 29.4809 158.896 cv
f
30.4365 163.385 mo
30.4512 164.267 30.3037 165.061 29.9658 165.752 cv
28.6138 164.326 li
28.6138 164.319 li
21.9419 157.264 li
15.4014 150.35 li
14.0498 148.916 li
14.7627 148.615 15.5635 148.52 16.4375 148.579 cv
18.5102 150.775 li
18.517 150.783 li
23.3745 155.912 li
28.3491 161.173 li
28.3491 161.181 li
30.4365 163.385 li
f
28.2905 167.463 mo
27.6216 167.809 26.8725 167.963 26.0493 167.956 cv
24.1241 165.92 li
18.7671 160.255 li
13.5645 154.751 li
11.6319 152.708 li
11.6689 151.885 11.8667 151.143 12.2491 150.497 cv
13.5356 151.849 li
13.5356 151.856 li
20.2002 158.91 li
27.0044 166.104 li
28.2905 167.463 li
f
21.8608 167.008 mo
20.5234 166.501 19.1201 165.832 17.687 165.097 cv
17.4668 164.987 17.2388 164.877 17.0185 164.76 cv
15.5928 163.253 li
14.3145 161.901 li
14.2115 161.666 14.1084 161.431 14.0059 161.203 cv
13.3589 159.733 12.7783 158.3 12.3447 156.941 cv
15.5264 160.307 li
17.0327 161.901 li
18.686 163.65 li
21.8608 167.008 li
f
15.916 169.947 mo
15.916 169.94 li
12.4257 166.251 li
9.07466 162.702 li
6.43704 159.917 li
7.74461 160.241 9.1631 160.806 10.6401 161.49 cv
13.6675 164.693 li
13.8584 164.892 li
14.1968 165.252 li
17.2241 168.456 li
17.8267 169.962 18.3115 171.41 18.561 172.74 cv
15.916 169.947 li
f
18.517 176.171 mo
18.3189 176.833 17.981 177.421 17.4589 177.913 cv
17.4516 177.92 li
16.2539 176.649 li
9.25095 169.242 li
2.40231 161.997 li
1.20507 160.725 li
1.72659 160.233 2.32913 159.924 3.00485 159.763 cv
4.53367 161.379 li
10.6841 167.89 li
16.9961 174.562 li
18.517 176.171 li
f
11.6064 160.016 mo
7.13138 157.909 2.89601 156.716 0 159.454 cv
2.40132 161.995 li
4.34134 160.161 9.30908 162.676 13.8359 165.061 cv
13.7529 164.88 13.6709 164.7 13.5884 164.52 cv
12.9004 163.017 12.2066 161.501 11.6064 160.016 cv
.105882 .584314 .635294 rgb
f
37.2334 142.942 mo
37.1528 142.898 li
36.1753 142.384 35.1758 141.862 34.1909 141.385 cv
33.9043 141.245 33.6181 141.113 33.3389 140.98 cv
33.2139 140.921 li
32.4717 140.576 31.7441 140.268 31.0532 140.011 cv
30.8994 139.952 30.7446 139.9 30.5981 139.849 cv
30.2085 139.716 29.8335 139.599 29.4809 139.511 cv
29.3413 139.474 29.2095 139.437 29.0767 139.415 cv
28.9888 139.401 li
28.8711 139.371 28.7607 139.349 28.6436 139.334 cv
28.4814 139.305 28.313 139.283 28.1582 139.268 cv
28.1509 139.268 li
27.9892 139.253 27.8349 139.246 27.6806 139.246 cv
27.4453 139.253 li
27.2099 139.275 li
26.9903 139.305 li
26.7837 139.356 li
26.5712 139.423 li
26.3799 139.481 26.2036 139.57 26.042 139.688 cv
25.7994 139.878 li
25.7114 139.959 25.6377 140.047 25.5718 140.143 cv
25.4839 140.26 li
25.3291 140.503 25.2192 140.782 25.1455 141.098 cv
25.1309 141.179 25.1162 141.267 25.1016 141.363 cv
25.0796 141.531 li
25.0796 141.568 li
25.0644 141.767 li
25.0576 142.009 li
25.0576 142.156 25.0644 142.31 25.0796 142.472 cv
25.1016 142.795 25.1455 143.141 25.2192 143.501 cv
25.2554 143.67 25.2925 143.846 25.3365 144.03 cv
25.4028 144.294 li
25.4395 144.463 25.4908 144.625 25.542 144.802 cv
25.6377 145.139 25.7476 145.5 25.8804 145.86 cv
25.8804 145.867 li
25.9463 146.065 26.02 146.271 26.1006 146.477 cv
26.2329 146.852 26.3799 147.234 26.5342 147.616 cv
26.7032 148.042 26.8867 148.468 27.0703 148.895 cv
27.1592 149.108 27.2544 149.313 27.3427 149.526 cv
27.5557 150.004 27.7691 150.489 27.9892 150.967 cv
28.0557 151.106 28.1142 151.239 28.1733 151.378 cv
28.2173 151.466 li
28.1289 151.422 li
27.9819 151.341 27.8349 151.268 27.6953 151.187 cv
26.2329 150.415 24.7563 149.636 23.3086 148.953 cv
21.457 144.368 20.5014 140.077 23.3965 137.335 cv
26.2915 134.602 30.5317 135.792 35.0068 137.901 cv
35.3379 138.717 35.6905 139.548 36.0649 140.371 cv
36.1387 140.54 li
36.418 141.164 36.7046 141.782 36.9839 142.406 cv
37.0498 142.553 37.123 142.708 37.1968 142.862 cv
37.2334 142.942 li
f
51.6138 129.348 mo
51.4375 129.26 51.2612 129.165 51.0844 129.076 cv
49.6226 128.305 48.1529 127.526 46.7051 126.843 cv
44.8535 122.257 43.898 117.958 46.7935 115.225 cv
49.689 112.484 53.9214 113.674 58.3964 115.783 cv
58.999 117.268 59.6895 118.789 60.3803 120.288 cv
60.4609 120.472 60.5493 120.648 60.6299 120.832 cv
56.1035 118.443 51.1362 115.93 49.1963 117.76 cv
47.2564 119.597 49.4902 124.697 51.6138 129.348 cv
f
30.3555 168.132 mo
27.4605 170.866 23.2202 169.675 18.7456 167.574 cv
18.5762 167.163 18.4072 166.75 18.2304 166.339 cv
18.0546 165.928 17.8711 165.509 17.687 165.097 cv
17.3858 164.421 17.0767 163.738 16.7681 163.062 cv
16.6875 162.885 16.5996 162.702 16.5186 162.526 cv
17.2388 162.9 17.9663 163.282 18.686 163.65 cv
20.6045 164.62 22.5 165.487 24.1241 165.92 cv
24.3003 165.972 24.4765 166.009 24.6455 166.045 cv
25.4468 166.222 26.1743 166.273 26.7837 166.156 cv
27.0044 166.104 li
27.1001 166.082 27.1879 166.053 27.2691 166.016 cv
27.4824 165.92 li
27.6513 165.832 27.813 165.722 27.9526 165.59 cv
28.1655 165.347 li
28.2095 165.296 li
28.2685 165.215 28.3198 165.134 28.3638 165.039 cv
28.3789 165.009 li
28.4814 164.774 li
28.5406 164.612 li
28.5698 164.517 28.5918 164.421 28.6138 164.326 cv
28.6138 164.319 li
28.6138 164.304 li
28.6436 164.179 28.6577 164.046 28.6724 163.907 cv
28.6875 163.768 28.6944 163.621 28.6944 163.466 cv
28.6944 163.312 28.6875 163.158 28.6724 162.996 cv
28.6656 162.856 28.6504 162.709 28.6284 162.562 cv
28.6216 162.489 li
28.5991 162.364 28.5844 162.239 28.5546 162.106 cv
28.5039 161.805 28.4301 161.497 28.3491 161.181 cv
28.3491 161.173 li
28.2905 160.96 28.232 160.74 28.1655 160.512 cv
28.0996 160.285 28.0259 160.057 27.9453 159.821 cv
27.9087 159.704 li
27.7026 159.102 27.4673 158.484 27.2178 157.852 cv
27.1294 157.646 27.0483 157.434 26.9531 157.213 cv
26.8648 156.999 26.7768 156.787 26.6812 156.573 cv
26.5122 156.177 26.3359 155.78 26.1597 155.383 cv
25.9541 154.92 25.7407 154.457 25.5346 154.001 cv
25.7114 154.097 25.8877 154.185 26.064 154.281 cv
26.5342 154.531 27.0123 154.78 27.4824 155.03 cv
27.666 155.126 27.8569 155.229 28.0405 155.324 cv
28.0484 155.324 li
28.8491 155.736 29.6499 156.14 30.4512 156.515 cv
32.2954 161.1 33.2505 165.392 30.3555 168.132 cv
f
53.752 146.014 mo
50.8569 148.755 46.6172 147.557 42.1494 145.456 cv
42.0024 145.088 41.8408 144.713 41.6787 144.338 cv
41.4882 143.883 41.2896 143.435 41.084 142.979 cv
41.0176 142.832 li
41.0176 142.825 li
40.7382 142.2 40.4521 141.576 40.1655 140.951 cv
40.0845 140.768 39.9966 140.591 39.9155 140.407 cv
41.2456 141.113 42.6196 141.826 43.935 142.436 cv
44.1186 142.523 44.3022 142.605 44.4859 142.685 cv
44.8535 142.847 45.2134 143.001 45.5738 143.141 cv
45.75 143.214 45.9262 143.28 46.0952 143.346 cv
46.25 143.405 46.4038 143.457 46.5513 143.508 cv
47.0801 143.692 47.5869 143.839 48.0644 143.942 cv
48.3145 143.993 48.5571 144.037 48.7924 144.059 cv
48.9024 144.074 49.0054 144.081 49.1157 144.096 cv
49.1816 144.096 li
49.4463 144.111 49.7036 144.111 49.9385 144.081 cv
50.1441 144.052 50.3427 144.015 50.5264 143.957 cv
50.7613 143.868 li
50.8867 143.817 51.0039 143.75 51.1069 143.67 cv
51.3491 143.479 li
51.4375 143.398 51.5108 143.31 51.5771 143.214 cv
51.6656 143.097 li
51.8194 142.854 51.9297 142.567 52.0029 142.259 cv
52.0473 141.995 li
52.0698 141.826 li
52.0698 141.789 li
52.0845 141.59 li
52.0918 141.348 li
52.0918 141.201 52.0845 141.046 52.0698 140.885 cv
52.062 140.724 52.0473 140.562 52.018 140.393 cv
51.996 140.224 51.9668 140.047 51.9297 139.871 cv
51.8637 139.518 51.7754 139.144 51.6724 138.769 cv
51.6284 138.6 51.5771 138.431 51.5259 138.262 cv
51.4448 138.012 51.3638 137.762 51.2759 137.504 cv
51.2759 137.498 li
51.2022 137.299 51.1362 137.093 51.0557 136.887 cv
50.9819 136.682 50.9009 136.468 50.8203 136.263 cv
50.6733 135.881 50.5185 135.491 50.3501 135.102 cv
50.2617 134.889 50.1738 134.675 50.0781 134.462 cv
49.7915 133.779 49.4829 133.088 49.167 132.405 cv
49.167 132.397 li
49.086 132.229 49.0054 132.06 48.9322 131.891 cv
49.1079 131.979 49.2846 132.075 49.4536 132.163 cv
50.9161 132.934 52.3931 133.713 53.8403 134.397 cv
55.6924 138.982 56.6475 143.28 53.752 146.014 cv
f
77.1489 123.903 mo
74.2539 126.636 70.0137 125.446 65.539 123.337 cv
64.9433 121.853 64.2456 120.339 63.562 118.833 cv
63.4888 118.671 li
63.4228 118.546 63.3711 118.421 63.3125 118.296 cv
64.8921 119.126 66.5308 119.979 68.0737 120.655 cv
68.0811 120.655 li
69.7715 121.39 71.3442 121.926 72.6152 121.978 cv
73.4966 122.029 74.2319 121.853 74.7461 121.36 cv
75.9438 122.632 li
77.1489 123.903 li
f
63.3125 118.296 mo
63.1357 118.201 62.9594 118.105 62.7832 118.017 cv
61.3208 117.246 59.8511 116.467 58.3964 115.783 cv
56.545 111.198 55.5967 106.899 58.4917 104.166 cv
60.8945 106.708 li
58.9546 108.538 61.1816 113.638 63.3125 118.296 cv
.988235 .380392 .121569 rgb
f
48.9322 131.891 mo
48.8584 131.854 li
48.7188 131.78 48.5791 131.707 48.4395 131.633 cv
46.7642 130.744 45.0371 129.87 43.4497 129.223 cv
43.2515 129.143 43.0605 129.069 42.8769 129.003 cv
42.7002 128.937 42.5313 128.871 42.3623 128.811 cv
41.9804 128.68 41.6128 128.569 41.2529 128.474 cv
40.9072 128.378 40.5766 128.305 40.2612 128.268 cv
40.0992 128.238 39.9449 128.216 39.7979 128.209 cv
39.5996 128.194 39.4155 128.187 39.2319 128.194 cv
39.1954 128.194 li
39.188 128.194 li
38.9453 128.209 li
38.813 128.224 38.6958 128.246 38.5782 128.268 cv
38.4677 128.29 38.3574 128.327 38.2549 128.363 cv
38.0561 128.444 li
37.9092 128.525 li
37.7109 128.65 li
37.6816 128.672 li
37.4981 128.819 li
37.2925 129.047 li
36.9907 129.429 36.8291 129.929 36.7773 130.509 cv
36.7632 130.649 36.7554 130.796 36.7554 130.943 cv
36.7554 131.097 36.7632 131.251 36.7773 131.413 cv
36.7851 131.589 36.8071 131.78 36.8364 131.972 cv
36.8511 132.045 li
36.8511 132.075 li
36.8804 132.236 li
36.9029 132.39 36.9394 132.552 36.9761 132.714 cv
37.0127 132.875 li
37.042 133.03 37.0864 133.184 37.1304 133.346 cv
37.2115 133.662 37.3066 133.985 37.4096 134.323 cv
37.5054 134.602 37.6006 134.882 37.7036 135.168 cv
37.8364 135.536 37.9756 135.91 38.1226 136.285 cv
38.2696 136.652 38.4239 137.02 38.5782 137.387 cv
38.835 138.004 39.1074 138.622 39.3867 139.239 cv
39.5483 139.599 39.7173 139.966 39.8789 140.327 cv
39.8789 140.334 li
39.9155 140.407 li
39.8418 140.371 li
39.6875 140.29 39.5405 140.209 39.3935 140.128 cv
38.7837 139.805 38.1665 139.481 37.5493 139.165 cv
37.4096 139.092 li
37.1968 138.982 li
36.8731 138.813 36.5576 138.651 36.2339 138.497 cv
35.8223 138.291 35.4106 138.092 35.0068 137.901 cv
33.1548 133.309 32.2001 129.017 35.0952 126.277 cv
36.1094 125.321 37.2847 124.844 38.5782 124.726 cv
40.981 124.491 43.7954 125.468 46.7051 126.843 cv
47.3003 128.327 47.9986 129.84 48.6816 131.347 cv
48.7554 131.501 48.8291 131.655 48.895 131.817 cv
48.9322 131.891 li
f
16.519 162.525 mo
14.3921 157.871 12.1606 152.769 14.1005 150.936 cv
16.0401 149.102 21.0083 151.617 25.5346 154.002 cv
25.4526 153.822 25.3696 153.642 25.288 153.462 cv
24.5991 151.958 23.9058 150.442 23.3056 148.956 cv
18.8311 146.85 14.5952 145.658 11.6997 148.395 cv
8.80271 151.133 9.75534 155.429 11.6064 160.016 cv
13.0561 160.698 14.5308 161.475 15.9931 162.247 cv
16.1675 162.339 16.3433 162.432 16.519 162.525 cv
f
42.0542 157.073 mo
41.04 158.028 39.8711 158.506 38.5782 158.631 cv
36.1674 158.866 33.3604 157.882 30.4512 156.515 cv
29.8481 155.023 29.1577 153.509 28.4668 152.01 cv
28.3863 151.827 28.2978 151.65 28.2173 151.466 cv
28.3789 151.547 28.5328 151.636 28.6944 151.716 cv
29.1138 151.937 29.54 152.157 29.9585 152.371 cv
30.3847 152.591 30.8037 152.804 31.23 153.009 cv
31.4356 153.112 31.6484 153.215 31.854 153.311 cv
32.0605 153.407 32.2583 153.501 32.4571 153.59 cv
32.6704 153.686 32.8833 153.781 33.0889 153.869 cv
33.2876 153.958 33.4858 154.039 33.6841 154.119 cv
33.6914 154.119 li
33.6914 154.126 li
34.1987 154.332 34.6982 154.516 35.1758 154.67 cv
35.3228 154.722 35.4697 154.766 35.6094 154.802 cv
35.8369 154.869 36.0649 154.927 36.2852 154.979 cv
36.418 155.008 36.5498 155.038 36.6748 155.06 cv
37.1304 155.133 37.5639 155.17 37.9536 155.155 cv
37.961 155.155 li
38.189 155.141 li
38.3286 155.133 38.4531 155.111 38.5782 155.082 cv
38.8208 155.008 li
38.9526 154.964 li
38.9678 154.957 li
39.1362 154.883 li
39.1734 154.869 li
39.4155 154.714 li
39.5332 154.626 li
39.6513 154.531 li
39.8569 154.303 li
39.9595 154.17 40.0405 154.031 40.1138 153.877 cv
40.2168 153.62 li
40.29 153.377 li
40.312 153.274 40.3345 153.164 40.3491 153.046 cv
40.3711 152.841 li
40.3858 152.701 40.3931 152.554 40.3931 152.407 cv
40.3931 152.252 40.3858 152.098 40.3711 151.937 cv
40.3638 151.775 40.3413 151.614 40.3193 151.444 cv
40.2973 151.29 li
40.2681 151.106 li
40.2315 150.923 li
40.2022 150.746 40.1577 150.57 40.1138 150.386 cv
40.0772 150.217 40.0327 150.041 39.9814 149.865 cv
39.9449 149.732 39.9082 149.592 39.8638 149.453 cv
39.8271 149.328 39.7906 149.203 39.7461 149.071 cv
39.7021 148.931 39.6582 148.792 39.6065 148.652 cv
39.438 148.138 39.2392 147.609 39.0264 147.072 cv
39.0186 147.065 li
38.9013 146.763 38.7768 146.462 38.6514 146.153 cv
38.5782 145.977 li
38.1518 144.97 37.6889 143.949 37.2334 142.942 cv
37.4096 143.038 37.5859 143.126 37.7627 143.222 cv
38.3647 143.538 38.9746 143.861 39.5776 144.169 cv
39.5923 144.185 li
39.7461 144.258 li
40.5474 144.677 41.3481 145.081 42.1494 145.456 cv
44.001 150.041 44.9492 154.332 42.0542 157.073 cv
f
65.4507 134.955 mo
62.5557 137.696 58.3159 136.505 53.8403 134.397 cv
53.5097 133.581 53.1567 132.75 52.7822 131.927 cv
52.4809 131.251 52.1723 130.568 51.8637 129.892 cv
51.7832 129.716 51.6943 129.532 51.6138 129.348 cv
52.04 129.576 52.4809 129.804 52.9145 130.031 cv
52.9365 130.039 li
52.9438 130.039 li
52.9512 130.046 li
54.9131 131.067 56.8901 132.03 58.624 132.574 cv
58.6314 132.574 li
58.749 132.611 58.8667 132.647 58.9766 132.677 cv
59.0943 132.714 59.2119 132.743 59.3222 132.772 cv
59.5498 132.838 59.7631 132.882 59.9761 132.919 cv
60.1895 132.963 60.395 132.993 60.5933 133.015 cv
60.6963 133.022 60.7915 133.03 60.8872 133.037 cv
61.1958 133.052 61.4824 133.044 61.747 133.008 cv
62.0044 132.971 62.2397 132.904 62.4527 132.816 cv
62.46 132.809 li
62.5625 132.765 62.6582 132.714 62.7461 132.655 cv
62.791 132.625 li
63.0479 132.419 li
63.3125 132.17 63.4961 131.868 63.6138 131.509 cv
63.7314 131.148 63.79 130.744 63.79 130.289 cv
63.79 130.142 63.7827 129.987 63.7676 129.826 cv
63.7602 129.679 63.7461 129.524 63.7163 129.363 cv
63.687 129.12 63.6426 128.863 63.5839 128.606 cv
63.5766 128.584 li
63.5401 128.385 63.4888 128.18 63.437 127.974 cv
63.3858 127.761 63.3193 127.541 63.2535 127.32 cv
63.1875 127.1 63.1215 126.872 63.0405 126.644 cv
62.6582 125.498 62.1582 124.278 61.622 123.051 cv
61.622 123.043 li
61.2988 122.301 60.9682 121.566 60.6299 120.832 cv
60.8067 120.919 60.9829 121.015 61.1518 121.111 cv
61.813 121.456 62.4746 121.809 63.1357 122.147 cv
63.1435 122.147 li
63.3491 122.257 li
64.084 122.632 64.8115 122.999 65.539 123.337 cv
67.3906 127.923 68.3462 132.221 65.4507 134.955 cv
f
18.6567 179.191 mo
17.4516 177.92 li
16.2539 176.649 li
16.7681 176.164 16.9887 175.443 16.9961 174.562 cv
17.0034 173.291 16.5625 171.682 15.916 169.947 cv
15.916 169.94 li
15.3354 168.36 14.5786 166.685 13.8364 165.061 cv
13.9614 165.127 14.0791 165.186 14.1968 165.252 cv
14.3584 165.34 li
15.8208 166.111 17.2973 166.89 18.7456 167.574 cv
20.5967 172.159 21.5518 176.451 18.6567 179.191 cv
f
39.916 140.408 mo
39.7407 140.315 39.565 140.223 39.3907 140.131 cv
37.9282 139.359 36.4536 138.581 35.0039 137.899 cv
35.6035 139.384 36.2974 140.9 36.9859 142.404 cv
37.0679 142.583 37.1509 142.764 37.2334 142.944 cv
37.4091 143.038 37.5844 143.13 37.7592 143.222 cv
39.2217 143.994 40.6962 144.771 42.146 145.454 cv
41.5459 143.968 40.8525 142.452 40.164 140.949 cv
40.0815 140.769 39.999 140.589 39.916 140.408 cv
f
51.6143 129.351 mo
51.438 129.258 51.2627 129.166 51.0884 129.073 cv
49.626 128.302 48.1514 127.524 46.7017 126.841 cv
47.3017 128.327 47.9951 129.843 48.6836 131.347 cv
48.7661 131.526 48.8482 131.706 48.9312 131.887 cv
49.107 131.98 49.2828 132.072 49.4566 132.165 cv
50.9189 132.936 52.3941 133.714 53.8433 134.397 cv
53.2436 132.911 52.5498 131.395 51.8614 129.891 cv
51.7793 129.712 51.6968 129.532 51.6143 129.351 cv
.105882 .584314 .635294 rgb
f
16.519 162.525 mo
16.3433 162.432 16.1675 162.339 15.9931 162.247 cv
14.5308 161.475 13.0561 160.698 11.6064 160.016 cv
12.2066 161.501 12.9004 163.017 13.5884 164.52 cv
13.6709 164.7 13.7529 164.88 13.8359 165.061 cv
14.0117 165.154 14.1875 165.246 14.3618 165.338 cv
15.8243 166.11 17.2983 166.888 18.748 167.57 cv
18.1484 166.085 17.4546 164.569 16.7666 163.065 cv
16.6841 162.886 16.6021 162.706 16.519 162.525 cv
.988235 .380392 .121569 rgb
f
28.2182 151.466 mo
28.042 151.374 27.8667 151.281 27.6919 151.188 cv
26.2295 150.416 24.7553 149.639 23.3056 148.956 cv
23.9058 150.442 24.5991 151.958 25.288 153.462 cv
25.3696 153.642 25.4526 153.822 25.5346 154.002 cv
25.7109 154.095 25.8862 154.187 26.0605 154.279 cv
27.523 155.052 28.9975 155.829 30.4473 156.512 cv
29.8472 155.026 29.1543 153.51 28.4658 152.007 cv
28.3838 151.828 28.3008 151.647 28.2182 151.466 cv
.105882 .584314 .635294 rgb
f
60.6284 120.83 mo
60.8047 120.922 60.98 121.015 61.1543 121.107 cv
62.6172 121.879 64.0913 122.657 65.5415 123.339 cv
64.9414 121.854 64.2476 120.338 63.5591 118.835 cv
63.4771 118.655 63.3945 118.475 63.312 118.293 cv
63.1357 118.201 62.9599 118.108 62.7861 118.016 cv
61.3233 117.244 59.8486 116.466 58.3994 115.784 cv
58.999 117.27 59.6928 118.786 60.3813 120.29 cv
60.4634 120.468 60.5459 120.649 60.6284 120.83 cv
.988235 .380392 .121569 rgb
f
26.1597 155.383 mo
25.1089 154.273 li
25.4468 153.958 li
25.4477 153.957 li
25.4767 153.972 25.5056 153.987 25.5346 154.002 cv
25.5346 154.002 li
25.5348 154.003 25.535 154.003 25.5352 154.003 cv
25.5908 154.126 25.647 154.249 25.7033 154.373 cv
25.8557 154.708 26.0096 155.045 26.1597 155.383 cv
1 .466667 0 rgb
f
25.7033 154.373 mo
25.647 154.249 25.5908 154.126 25.5352 154.003 cv
25.5352 154.003 25.5353 154.003 25.5353 154.003 cv
25.5909 154.126 25.647 154.249 25.7033 154.373 cv
.105882 .337255 .0745098 rgb
f
25.5346 154.002 mo
25.5056 153.987 25.4767 153.972 25.4477 153.957 cv
25.4908 153.914 li
25.4931 153.911 li
25.4979 153.922 25.5028 153.932 25.5076 153.943 cv
25.5346 154.002 li
.988235 .219608 .0156863 rgb
f
25.5353 154.003 mo
25.5353 154.003 25.5352 154.003 25.5352 154.003 cv
25.535 154.003 25.5348 154.003 25.5346 154.002 cv
25.5351 154.002 li
25.5351 154.002 li
25.5352 154.003 25.5352 154.003 25.5353 154.003 cv
25.5076 153.943 mo
25.5028 153.932 25.4979 153.922 25.4931 153.911 cv
25.4931 153.911 li
25.4931 153.911 li
25.5076 153.943 li
.105882 .337255 .0745098 rgb
f
28.6138 164.319 mo
28.6138 164.319 li
21.9419 157.264 li
23.3745 155.912 li
28.3491 161.173 li
28.3491 161.173 li
28.3491 161.181 li
28.3491 161.181 li
28.3491 161.181 li
28.4301 161.497 28.5039 161.805 28.5546 162.106 cv
28.5844 162.239 28.5991 162.364 28.6216 162.489 cv
28.6284 162.562 li
28.6504 162.709 28.6656 162.856 28.6724 162.996 cv
28.6875 163.158 28.6944 163.312 28.6944 163.466 cv
28.6944 163.621 28.6875 163.768 28.6724 163.907 cv
28.6577 164.046 28.6436 164.179 28.6138 164.304 cv
28.6138 164.319 li
1 .466667 0 rgb
f
48.0644 143.942 mo
47.5869 143.839 47.0801 143.692 46.5513 143.508 cv
46.4038 143.457 46.25 143.405 46.0952 143.346 cv
45.9262 143.28 45.75 143.214 45.5738 143.141 cv
45.2134 143.001 44.8535 142.847 44.4859 142.685 cv
44.3022 142.605 44.1186 142.523 43.935 142.436 cv
43.935 142.436 li
40.9736 139.297 li
42.4067 137.946 li
48.0644 143.942 li
f
72.901 121.987 mo
72.9007 121.987 72.9005 121.987 72.9001 121.987 cv
72.807 121.987 72.712 121.984 72.6152 121.978 cv
72.6152 121.978 li
66.3471 115.35 li
67.7803 113.99 li
74.7461 121.36 li
74.7461 121.36 li
74.2894 121.797 73.6583 121.986 72.9054 121.987 cv
72.904 121.987 72.9025 121.987 72.901 121.987 cv
f
51.2759 137.498 mo
47.3149 133.309 li
48.7481 131.957 li
49.167 132.397 li
49.167 132.397 li
49.167 132.405 li
49.167 132.405 li
49.167 132.405 li
49.4829 133.088 49.7915 133.779 50.0781 134.462 cv
50.1738 134.675 50.2617 134.889 50.3501 135.102 cv
50.5185 135.491 50.6733 135.881 50.8203 136.263 cv
50.9009 136.468 50.9819 136.682 51.0557 136.887 cv
51.1362 137.093 51.2022 137.299 51.2759 137.498 cv
f
51.1069 143.67 mo
51.1069 143.67 li
44.1484 136.299 li
45.5738 134.955 li
52.0698 141.826 li
52.0473 141.995 li
52.0029 142.259 li
51.9297 142.567 51.8194 142.854 51.6656 143.097 cv
51.5771 143.214 li
51.5108 143.31 51.4375 143.398 51.3491 143.479 cv
51.1069 143.67 li
f
16.2539 176.649 mo
16.2539 176.649 li
9.25095 169.242 li
10.6841 167.89 li
16.9961 174.562 li
16.9887 175.443 16.7681 176.164 16.2539 176.649 cv
f
15.916 169.94 mo
12.4257 166.251 li
13.7399 165.01 li
13.772 165.027 13.8039 165.044 13.8359 165.061 cv
13.8359 165.061 li
13.8362 165.061 13.8365 165.061 13.8369 165.062 cv
14.5789 166.685 15.3355 168.36 15.916 169.94 cv
f
13.8359 165.061 mo
13.8039 165.044 13.772 165.027 13.7399 165.01 cv
13.7412 165.009 li
13.7897 164.96 li
13.8051 164.994 13.8205 165.027 13.8359 165.061 cv
.105882 .337255 .0745098 rgb
f
18.7456 167.574 mo
17.2973 166.89 15.8208 166.111 14.3584 165.34 cv
14.1968 165.252 li
14.1954 165.25 li
14.251 165.28 14.3065 165.309 14.3618 165.338 cv
15.8227 166.109 17.2951 166.886 18.7433 167.568 cv
18.7441 167.57 18.7448 167.572 18.7456 167.574 cv
1 .576471 .117647 rgb
f
14.1968 165.252 mo
14.1968 165.252 li
14.1882 165.247 14.1797 165.242 14.1711 165.238 cv
14.1792 165.242 14.1873 165.246 14.1954 165.25 cv
14.1968 165.252 li
1 .466667 0 rgb
f
18.6567 179.191 mo
17.4516 177.92 li
16.2539 176.649 li
16.2539 176.649 li
16.7681 176.164 16.9887 175.443 16.9961 174.562 cv
16.9961 174.562 li
16.9961 174.552 16.9961 174.542 16.9961 174.532 cv
16.9965 173.266 16.5574 171.668 15.916 169.947 cv
15.916 169.94 li
15.916 169.94 li
15.3355 168.36 14.5789 166.685 13.8369 165.062 cv
13.9484 165.12 14.0599 165.179 14.1711 165.238 cv
14.1797 165.242 14.1882 165.247 14.1968 165.252 cv
14.1968 165.252 li
14.3584 165.34 li
15.8208 166.111 17.2973 166.89 18.7456 167.574 cv
18.7456 167.574 li
18.7456 167.574 li
19.7543 170.072 20.497 172.484 20.4955 174.605 cv
20.4943 176.376 19.9742 177.944 18.6567 179.191 cv
.988235 .219608 .0156863 rgb
f
17.3013 164.237 mo
17.1238 163.846 16.945 163.455 16.7666 163.065 cv
16.7061 162.934 16.646 162.802 16.5854 162.67 cv
16.6465 162.8 16.7092 162.933 16.7681 163.062 cv
16.9462 163.452 17.1244 163.845 17.3013 164.237 cv
18.686 163.65 mo
17.9667 163.282 17.2396 162.901 16.5197 162.526 cv
16.5195 162.526 16.5192 162.525 16.519 162.525 cv
16.4869 162.508 16.4549 162.491 16.4228 162.474 cv
16.4228 162.474 li
16.4549 162.491 16.4869 162.508 16.519 162.525 cv
16.5045 162.493 16.4899 162.461 16.4754 162.429 cv
17.0327 161.901 li
18.686 163.65 li
1 .466667 0 rgb
f
16.519 162.525 mo
16.4869 162.508 16.4549 162.491 16.4228 162.474 cv
16.4228 162.474 li
16.4746 162.43 li
16.4754 162.429 li
16.4899 162.461 16.5045 162.493 16.519 162.525 cv
.988235 .219608 .0156863 rgb
f
18.7433 167.568 mo
17.2951 166.886 15.8227 166.109 14.3618 165.338 cv
14.3065 165.309 14.251 165.28 14.1954 165.25 cv
14.1873 165.246 14.1792 165.242 14.1711 165.238 cv
14.0599 165.179 13.9484 165.12 13.8369 165.062 cv
13.8365 165.061 13.8362 165.061 13.8359 165.061 cv
13.8359 165.061 li
13.8205 165.027 13.8051 164.994 13.7897 164.96 cv
13.7924 164.958 li
13.8584 164.892 li
15.5928 163.253 li
16.4228 162.474 li
16.4549 162.491 16.4869 162.508 16.519 162.525 cv
16.5192 162.525 16.5195 162.526 16.5197 162.526 cv
16.5197 162.526 li
16.5194 162.526 16.519 162.526 16.5186 162.526 cv
16.5186 162.526 li
16.5186 162.526 li
16.5405 162.573 16.5628 162.621 16.5854 162.67 cv
16.646 162.802 16.7061 162.934 16.7666 163.065 cv
16.945 163.455 17.1238 163.846 17.3013 164.237 cv
17.4308 164.524 17.5596 164.811 17.687 165.097 cv
17.8711 165.509 18.0546 165.928 18.2304 166.339 cv
18.4064 166.749 18.5746 167.159 18.7433 167.568 cv
f
37.6881 158.676 mo
36.5561 158.676 35.4662 158.454 34.1544 158.009 cv
35.4448 158.419 36.6849 158.666 37.8453 158.666 cv
38.0933 158.666 38.3377 158.655 38.5782 158.631 cv
39.8711 158.506 41.04 158.028 42.0542 157.073 cv
43.3773 155.82 43.8977 154.244 43.8959 152.463 cv
43.8977 154.244 43.3773 155.82 42.0542 157.073 cv
41.04 158.028 39.8711 158.506 38.5782 158.631 cv
38.2755 158.661 37.9805 158.676 37.6881 158.676 cv
30.4506 156.513 mo
30.4501 156.513 30.4495 156.513 30.4491 156.513 cv
30.4466 156.51 li
29.8654 155.072 29.1972 153.604 28.5303 152.148 cv
29.1997 153.602 29.8662 155.068 30.4506 156.513 cv
37.7804 155.158 mo
37.7786 155.158 37.7769 155.158 37.7751 155.158 cv
37.7769 155.158 37.7786 155.158 37.7804 155.158 cv
37.7804 155.158 li
37.7814 155.158 mo
37.8111 155.158 37.8406 155.158 37.8699 155.158 cv
37.8406 155.158 37.8111 155.158 37.7814 155.158 cv
37.8796 155.157 mo
37.8918 155.157 37.904 155.157 37.9161 155.156 cv
37.904 155.157 37.8918 155.157 37.8796 155.157 cv
36.8071 155.08 mo
36.7915 155.078 36.7759 155.075 36.7602 155.073 cv
36.7759 155.075 36.7915 155.078 36.8071 155.08 cv
36.7397 155.07 mo
36.731 155.068 36.7223 155.067 36.7135 155.066 cv
36.7223 155.067 36.731 155.068 36.7397 155.07 cv
28.4564 151.987 mo
28.4288 151.926 28.4011 151.866 28.3733 151.805 cv
28.4014 151.865 28.4293 151.926 28.4564 151.987 cv
28.6944 151.716 mo
28.6944 151.716 li
28.5332 151.636 28.3799 151.547 28.2188 151.467 cv
28.2186 151.467 28.2184 151.466 28.2182 151.466 cv
28.2182 151.466 li
28.2167 151.465 li
28.1733 151.378 li
28.2832 151.275 li
28.6944 151.716 li
42.1494 145.456 mo
42.1483 145.455 42.1471 145.454 42.146 145.454 cv
42.0519 145.221 41.9554 144.987 41.857 144.753 cv
41.958 144.989 42.0566 145.224 42.1494 145.456 cv
42.1187 145.441 mo
41.65 145.222 41.1816 144.992 40.7131 144.755 cv
41.1834 144.992 41.6523 145.221 42.1187 145.441 cv
41.0176 142.826 mo
40.7369 142.2 40.4501 141.573 40.164 140.949 cv
40.1197 140.852 40.0754 140.756 40.0311 140.659 cv
40.0764 140.756 40.122 140.852 40.1655 140.951 cv
40.4521 141.576 40.7382 142.2 41.0176 142.825 cv
41.0176 142.826 li
39.916 140.408 mo
39.9083 140.404 39.9007 140.4 39.8931 140.396 cv
39.9155 140.407 li
39.9155 140.407 li
39.9155 140.407 li
39.9157 140.408 39.9158 140.408 39.916 140.408 cv
1 .576471 .117647 rgb
f
39.6267 144.201 mo
39.5923 144.185 li
39.5896 144.182 li
39.602 144.188 39.6143 144.195 39.6267 144.201 cv
1 .466667 0 rgb
f
40.2973 151.29 mo
40.29 151.283 li
34.625 145.287 li
36.0649 143.934 li
39.0186 147.065 li
39.0186 147.065 li
39.0186 147.065 li
39.0264 147.072 li
39.2392 147.609 39.438 148.138 39.6065 148.652 cv
39.6582 148.792 39.7021 148.931 39.7461 149.071 cv
39.7906 149.203 39.8271 149.328 39.8638 149.453 cv
39.9082 149.592 39.9449 149.732 39.9814 149.865 cv
40.0327 150.041 40.0772 150.217 40.1138 150.386 cv
40.1577 150.57 40.2022 150.746 40.2315 150.923 cv
40.2681 151.106 li
40.2973 151.29 li
f
37.961 155.155 mo
37.961 155.155 li
37.9536 155.155 li
31.4575 148.285 li
32.8901 146.925 li
39.8569 154.303 li
39.6513 154.531 li
39.5332 154.626 li
39.4155 154.714 li
39.1734 154.869 li
39.1362 154.883 li
38.9678 154.957 li
38.9526 154.964 li
38.8208 155.008 li
38.5782 155.082 li
38.4531 155.111 38.3286 155.133 38.189 155.141 cv
37.961 155.155 li
f
33.6841 154.119 mo
33.4858 154.039 33.2876 153.958 33.0889 153.869 cv
32.8833 153.781 32.6704 153.686 32.4571 153.59 cv
32.2583 153.501 32.0605 153.407 31.854 153.311 cv
31.6484 153.215 31.4356 153.112 31.23 153.009 cv
30.8037 152.804 30.3847 152.591 29.9585 152.371 cv
29.54 152.157 29.1138 151.937 28.6944 151.716 cv
28.6944 151.716 li
28.2832 151.275 li
29.7158 149.923 li
33.6841 154.119 li
f
28.2167 151.465 mo
28.1309 151.42 li
28.1733 151.378 li
28.2167 151.465 li
37.2321 142.942 mo
37.1528 142.898 li
37.196 142.863 li
37.208 142.889 37.2201 142.915 37.2321 142.942 cv
.105882 .337255 .0745098 rgb
f
39.9155 140.407 mo
39.8931 140.396 li
39.8764 140.387 39.8596 140.378 39.8428 140.369 cv
39.8789 140.334 li
39.9155 140.407 li
.988235 .219608 .0156863 rgb
f
37.8453 158.666 mo
36.6849 158.666 35.4448 158.419 34.1544 158.009 cv
33.1066 157.654 31.9167 157.155 30.4506 156.513 cv
29.8662 155.068 29.1997 153.602 28.5303 152.148 cv
28.5088 152.101 28.4873 152.054 28.4658 152.007 cv
28.4627 152 28.4595 151.993 28.4564 151.987 cv
28.4293 151.926 28.4014 151.865 28.3733 151.805 cv
28.3219 151.693 28.2702 151.58 28.2188 151.467 cv
28.3799 151.547 28.5332 151.636 28.6944 151.716 cv
28.6944 151.716 li
29.1138 151.937 29.54 152.157 29.9585 152.371 cv
30.3847 152.591 30.8037 152.804 31.23 153.009 cv
31.4356 153.112 31.6484 153.215 31.854 153.311 cv
32.0605 153.407 32.2583 153.501 32.4571 153.59 cv
32.6704 153.686 32.8833 153.781 33.0889 153.869 cv
33.2876 153.958 33.4858 154.039 33.6841 154.119 cv
33.6841 154.119 li
33.6914 154.119 li
33.6914 154.126 li
33.6914 154.126 li
34.1987 154.332 34.6982 154.516 35.1758 154.67 cv
35.3228 154.722 35.4697 154.766 35.6094 154.802 cv
35.8369 154.869 36.0649 154.927 36.2852 154.979 cv
36.418 155.008 36.5498 155.038 36.6748 155.06 cv
36.6877 155.062 36.7006 155.064 36.7135 155.066 cv
36.7223 155.067 36.731 155.068 36.7397 155.07 cv
36.7466 155.071 36.7534 155.072 36.7602 155.073 cv
36.7759 155.075 36.7915 155.078 36.8071 155.08 cv
37.1465 155.13 37.4723 155.158 37.7751 155.158 cv
37.7769 155.158 37.7786 155.158 37.7804 155.158 cv
37.7804 155.158 li
37.7804 155.158 li
37.7808 155.158 37.7811 155.158 37.7814 155.158 cv
37.8111 155.158 37.8406 155.158 37.8699 155.158 cv
37.8731 155.158 37.8764 155.157 37.8796 155.157 cv
37.8918 155.157 37.904 155.157 37.9161 155.156 cv
37.9287 155.156 37.9412 155.156 37.9536 155.155 cv
37.9536 155.155 li
37.9536 155.155 li
37.961 155.155 li
38.189 155.141 li
38.3286 155.133 38.4531 155.111 38.5782 155.082 cv
38.8208 155.008 li
38.9526 154.964 li
38.9678 154.957 li
39.1362 154.883 li
39.1734 154.869 li
39.4155 154.714 li
39.5332 154.626 li
39.6513 154.531 li
39.8569 154.303 li
39.9595 154.17 40.0405 154.031 40.1138 153.877 cv
40.2168 153.62 li
40.29 153.377 li
40.312 153.274 40.3345 153.164 40.3491 153.046 cv
40.3711 152.841 li
40.3858 152.701 40.3931 152.554 40.3931 152.407 cv
40.3931 152.407 li
40.3931 152.407 li
40.3931 152.252 40.3858 152.098 40.3711 151.937 cv
40.3638 151.775 40.3413 151.614 40.3193 151.444 cv
40.2973 151.29 li
40.2681 151.106 li
40.2315 150.923 li
40.2022 150.746 40.1577 150.57 40.1138 150.386 cv
40.0772 150.217 40.0327 150.041 39.9814 149.865 cv
39.9449 149.732 39.9082 149.592 39.8638 149.453 cv
39.8271 149.328 39.7906 149.203 39.7461 149.071 cv
39.7021 148.931 39.6582 148.792 39.6065 148.652 cv
39.438 148.138 39.2392 147.609 39.0264 147.072 cv
39.0186 147.065 li
39.0186 147.065 li
38.9013 146.763 38.7768 146.462 38.6514 146.153 cv
38.5782 145.977 li
38.1522 144.971 37.6897 143.951 37.2345 142.945 cv
37.4099 143.038 37.5848 143.13 37.7592 143.222 cv
38.3681 143.543 38.9792 143.866 39.5896 144.182 cv
39.5923 144.185 li
39.6267 144.201 li
39.9892 144.389 40.3516 144.574 40.7131 144.755 cv
41.1816 144.992 41.65 145.222 42.1187 145.441 cv
42.1278 145.445 42.1369 145.45 42.146 145.454 cv
42.146 145.454 li
42.1471 145.454 42.1483 145.455 42.1494 145.456 cv
42.1494 145.456 li
42.1494 145.456 li
43.1547 147.945 43.8938 150.348 43.8959 152.463 cv
43.8977 154.244 43.3773 155.82 42.0542 157.073 cv
41.04 158.028 39.8711 158.506 38.5782 158.631 cv
38.3377 158.655 38.0933 158.666 37.8453 158.666 cv
f
42.146 145.454 mo
42.1369 145.45 42.1278 145.445 42.1187 145.441 cv
41.6523 145.221 41.1834 144.992 40.7131 144.755 cv
40.3516 144.574 39.9892 144.389 39.6267 144.201 cv
39.6143 144.195 39.602 144.188 39.5896 144.182 cv
38.9792 143.866 38.3681 143.543 37.7592 143.222 cv
37.5848 143.13 37.4099 143.038 37.2345 142.945 cv
37.2345 142.945 li
37.2341 142.944 37.2337 142.943 37.2334 142.942 cv
37.2321 142.942 li
37.2321 142.942 li
37.2201 142.915 37.208 142.889 37.196 142.863 cv
37.1968 142.862 li
37.7993 142.296 li
38.4971 141.634 li
38.5415 141.598 li
39.2319 140.943 li
39.8418 140.371 li
39.8428 140.369 li
39.8596 140.378 39.8764 140.387 39.8931 140.396 cv
39.9007 140.4 39.9083 140.404 39.916 140.408 cv
39.9533 140.493 39.9921 140.576 40.0311 140.659 cv
40.0754 140.756 40.1197 140.852 40.164 140.949 cv
40.4501 141.573 40.7369 142.2 41.0176 142.826 cv
41.0176 142.826 li
41.0176 142.832 li
41.084 142.979 li
41.2896 143.435 41.4882 143.883 41.6787 144.338 cv
41.7384 144.477 41.7981 144.615 41.857 144.753 cv
41.9554 144.987 42.0519 145.221 42.146 145.454 cv
42.146 145.454 li
f
30.4466 156.51 mo
30.4466 156.51 li
29.8466 155.025 29.154 153.51 28.4658 152.007 cv
28.3838 151.828 28.3008 151.647 28.2182 151.466 cv
28.2182 151.466 li
28.2182 151.466 li
28.2184 151.466 28.2186 151.467 28.2188 151.467 cv
28.2702 151.58 28.3219 151.693 28.3733 151.805 cv
28.4011 151.866 28.4288 151.926 28.4564 151.987 cv
28.4595 151.993 28.4627 152 28.4658 152.007 cv
28.4873 152.054 28.5088 152.101 28.5303 152.148 cv
29.1972 153.604 29.8654 155.072 30.4466 156.51 cv
.105882 .337255 .0745098 rgb
f
61.2712 136.563 mo
60.6608 136.563 60.0256 136.492 59.3686 136.363 cv
60.0106 136.485 60.6351 136.551 61.2375 136.551 cv
62.8199 136.551 64.2511 136.09 65.4507 134.955 cv
66.7684 133.711 67.2885 132.143 67.2896 130.371 cv
67.2885 132.143 66.7684 133.711 65.4507 134.955 cv
64.2445 136.097 62.8386 136.563 61.2712 136.563 cv
65.3123 123.231 mo
64.6603 122.923 64.0076 122.593 63.3491 122.257 cv
63.2499 122.204 li
63.9398 122.559 64.6285 122.905 65.3123 123.231 cv
65.1257 122.338 mo
64.6312 121.176 64.0935 120.001 63.5591 118.835 cv
63.5329 118.777 63.5066 118.72 63.4803 118.662 cv
63.4888 118.671 li
63.4888 118.671 li
63.562 118.833 li
64.0928 120.003 64.6322 121.177 65.1257 122.338 cv
1 .576471 .117647 rgb
f
63.4888 118.671 mo
63.4803 118.662 li
63.4674 118.634 63.4544 118.605 63.4414 118.577 cv
63.4565 118.608 63.4722 118.64 63.4888 118.671 cv
1 .466667 0 rgb
f
63.1397 122.147 mo
63.1357 122.147 li
63.1353 122.146 63.135 122.145 63.1346 122.144 cv
63.1362 122.145 63.1381 122.146 63.1397 122.147 cv
1 .576471 .117647 rgb
f
68.0737 120.655 mo
66.5311 119.979 64.8928 119.127 63.3136 118.297 cv
63.313 118.296 63.3125 118.295 63.312 118.293 cv
63.3116 118.293 63.3113 118.293 63.3109 118.293 cv
63.3022 118.274 63.2937 118.255 63.285 118.236 cv
64.606 116.988 li
68.0737 120.655 li
1 .466667 0 rgb
f
61.622 123.043 mo
60.0059 121.332 li
60.5713 120.802 li
60.5722 120.801 li
60.5915 120.811 60.6106 120.821 60.6299 120.832 cv
60.6298 120.831 60.6296 120.831 60.6295 120.831 cv
60.6392 120.836 60.6489 120.841 60.6586 120.846 cv
60.649 120.841 60.6395 120.836 60.6299 120.832 cv
60.9682 121.566 61.2988 122.301 61.622 123.043 cv
63.1397 122.147 mo
63.1357 122.147 li
62.4746 121.809 61.813 121.456 61.1518 121.111 cv
61.0951 121.079 61.0376 121.047 60.9795 121.015 cv
61.0379 121.046 61.0962 121.076 61.1543 121.107 cv
61.8132 121.455 62.4743 121.803 63.1346 122.144 cv
63.135 122.145 63.1353 122.146 63.1357 122.147 cv
63.1397 122.147 li
63.1397 122.147 li
f
63.6138 131.509 mo
63.6138 131.509 li
56.8311 124.329 li
58.2641 122.977 li
63.5839 128.606 li
63.6426 128.863 63.687 129.12 63.7163 129.363 cv
63.7461 129.524 63.7602 129.679 63.7676 129.826 cv
63.7827 129.987 63.79 130.142 63.79 130.289 cv
63.79 130.744 63.7314 131.148 63.6138 131.509 cv
f
61.1739 133.044 mo
61.0806 133.044 60.985 133.042 60.8872 133.037 cv
60.7915 133.03 60.6963 133.022 60.5933 133.015 cv
60.395 132.993 60.1895 132.963 59.9761 132.919 cv
59.7631 132.882 59.5498 132.838 59.3222 132.772 cv
59.2119 132.743 59.0943 132.714 58.9766 132.677 cv
58.8667 132.647 58.749 132.611 58.6314 132.574 cv
58.6314 132.574 li
58.624 132.574 li
53.664 127.32 li
55.0893 125.968 li
61.747 133.008 li
61.5662 133.033 61.3752 133.044 61.1739 133.044 cv
f
52.1998 130.631 mo
52.0871 130.384 51.9742 130.138 51.8614 129.891 cv
51.8178 129.796 51.7742 129.701 51.7305 129.605 cv
51.7756 129.702 51.8209 129.798 51.8637 129.892 cv
51.9759 130.137 52.088 130.384 52.1998 130.631 cv
52.9365 130.039 mo
52.9145 130.031 li
52.4809 129.804 52.04 129.576 51.6138 129.348 cv
51.6196 129.362 51.6255 129.375 51.6315 129.388 cv
51.6257 129.376 51.62 129.363 51.6143 129.351 cv
51.5912 129.338 51.5682 129.326 51.5451 129.314 cv
51.5457 129.314 li
51.5684 129.325 51.5911 129.337 51.6138 129.348 cv
51.6138 129.348 li
51.6138 129.348 li
51.6038 129.326 51.5937 129.304 51.5837 129.282 cv
51.5845 129.282 li
51.9224 128.966 li
52.9365 130.039 li
f
51.6138 129.348 mo
51.5911 129.337 51.5684 129.325 51.5457 129.314 cv
51.5478 129.312 li
51.5837 129.282 li
51.5937 129.304 51.6038 129.326 51.6138 129.348 cv
60.6299 120.832 mo
60.6106 120.821 60.5915 120.811 60.5722 120.801 cv
60.5998 120.767 li
60.6093 120.788 60.6189 120.809 60.6284 120.83 cv
60.6288 120.83 60.6291 120.83 60.6295 120.831 cv
60.6296 120.831 60.6298 120.831 60.6299 120.832 cv
.105882 .337255 .0745098 rgb
f
63.3109 118.293 mo
63.2927 118.283 63.2745 118.274 63.2564 118.264 cv
63.2832 118.238 li
63.285 118.236 li
63.2937 118.255 63.3022 118.274 63.3109 118.293 cv
.988235 .219608 .0156863 rgb
f
61.2375 136.551 mo
60.6351 136.551 60.0106 136.485 59.3686 136.363 cv
57.663 136.028 55.8081 135.3 53.8433 134.397 cv
53.8433 134.397 li
53.8433 134.397 li
53.3419 133.154 52.7746 131.891 52.1998 130.631 cv
52.088 130.384 51.9759 130.137 51.8637 129.892 cv
51.8209 129.798 51.7756 129.702 51.7305 129.605 cv
51.6975 129.533 51.6645 129.461 51.6315 129.388 cv
51.6255 129.375 51.6196 129.362 51.6138 129.348 cv
52.04 129.576 52.4809 129.804 52.9145 130.031 cv
52.9365 130.039 li
52.9438 130.039 li
52.9512 130.046 li
54.9131 131.067 56.8901 132.03 58.624 132.574 cv
58.624 132.574 li
58.624 132.574 li
58.6314 132.574 li
58.6314 132.574 li
58.749 132.611 58.8667 132.647 58.9766 132.677 cv
59.0943 132.714 59.2119 132.743 59.3222 132.772 cv
59.5498 132.838 59.7631 132.882 59.9761 132.919 cv
60.1895 132.963 60.395 132.993 60.5933 133.015 cv
60.6963 133.022 60.7915 133.03 60.8872 133.037 cv
60.985 133.042 61.0806 133.044 61.1739 133.044 cv
61.3752 133.044 61.5662 133.033 61.747 133.008 cv
61.747 133.008 li
62.0044 132.971 62.2397 132.904 62.4527 132.816 cv
62.46 132.809 li
62.5625 132.765 62.6582 132.714 62.7461 132.655 cv
62.791 132.625 li
63.0479 132.419 li
63.3125 132.17 63.4961 131.868 63.6138 131.509 cv
63.6138 131.509 li
63.6138 131.509 li
63.6138 131.509 li
63.7314 131.148 63.79 130.744 63.79 130.289 cv
63.79 130.142 63.7827 129.987 63.7676 129.826 cv
63.7602 129.679 63.7461 129.524 63.7163 129.363 cv
63.687 129.12 63.6426 128.863 63.5839 128.606 cv
63.5839 128.606 li
63.5766 128.584 li
63.5401 128.385 63.4888 128.18 63.437 127.974 cv
63.3858 127.761 63.3193 127.541 63.2535 127.32 cv
63.1875 127.1 63.1215 126.872 63.0405 126.644 cv
62.6582 125.498 62.1582 124.278 61.622 123.051 cv
61.622 123.043 li
61.622 123.043 li
61.2988 122.301 60.9682 121.566 60.6299 120.832 cv
60.6395 120.836 60.649 120.841 60.6586 120.846 cv
60.7659 120.902 60.8729 120.959 60.9795 121.015 cv
61.0376 121.047 61.0951 121.079 61.1518 121.111 cv
61.813 121.456 62.4746 121.809 63.1357 122.147 cv
63.1397 122.147 li
63.1765 122.166 63.2131 122.185 63.2499 122.204 cv
63.3491 122.257 li
64.0076 122.593 64.6603 122.923 65.3123 123.231 cv
65.3881 123.267 65.464 123.303 65.5397 123.339 cv
66.5483 125.837 67.2909 128.25 67.2896 130.371 cv
67.2885 132.143 66.7684 133.711 65.4507 134.955 cv
64.2511 136.09 62.8199 136.551 61.2375 136.551 cv
f
53.8433 134.397 mo
53.8433 134.397 li
53.2436 132.911 52.5498 131.395 51.8614 129.891 cv
51.7793 129.712 51.6968 129.532 51.6143 129.351 cv
51.5449 129.314 li
51.5451 129.314 li
51.5682 129.326 51.5912 129.338 51.6143 129.351 cv
51.62 129.363 51.6257 129.376 51.6315 129.388 cv
51.6645 129.461 51.6975 129.533 51.7305 129.605 cv
51.7742 129.701 51.8178 129.796 51.8614 129.891 cv
51.9742 130.138 52.0871 130.384 52.1998 130.631 cv
52.7746 131.891 53.3419 133.154 53.8433 134.397 cv
.105882 .337255 .0745098 rgb
f
65.5397 123.339 mo
65.464 123.303 65.3881 123.267 65.3123 123.231 cv
64.6285 122.905 63.9398 122.559 63.2499 122.204 cv
63.2131 122.185 63.1765 122.166 63.1397 122.147 cv
63.1397 122.147 li
63.1381 122.146 63.1362 122.145 63.1346 122.144 cv
62.4743 121.803 61.8132 121.455 61.1543 121.107 cv
61.0962 121.076 61.0379 121.046 60.9795 121.015 cv
60.8729 120.959 60.7659 120.902 60.6586 120.846 cv
60.6489 120.841 60.6392 120.836 60.6295 120.831 cv
60.6291 120.83 60.6288 120.83 60.6284 120.83 cv
60.6189 120.809 60.6093 120.788 60.5998 120.767 cv
60.6011 120.766 li
61.4384 119.979 li
63.1724 118.34 li
63.2535 118.267 li
63.2564 118.264 li
63.2745 118.274 63.2927 118.283 63.3109 118.293 cv
63.3113 118.293 63.3116 118.293 63.312 118.293 cv
63.3125 118.295 63.313 118.296 63.3136 118.297 cv
63.3136 118.297 li
63.3132 118.297 63.3129 118.297 63.3125 118.296 cv
63.3125 118.296 li
63.3125 118.296 li
63.3564 118.39 63.3964 118.484 63.4414 118.577 cv
63.4544 118.605 63.4674 118.634 63.4803 118.662 cv
63.5066 118.72 63.5329 118.777 63.5591 118.835 cv
64.0935 120.001 64.6312 121.176 65.1257 122.338 cv
65.2677 122.672 65.4059 123.005 65.539 123.337 cv
65.539 123.337 li
65.5392 123.337 65.5394 123.338 65.5397 123.339 cv
.988235 .219608 .0156863 rgb
f
26.0716 166.219 mo
26.0699 166.219 26.0682 166.219 26.0665 166.219 cv
25.6389 166.219 25.1722 166.159 24.6769 166.052 cv
24.6665 166.05 24.656 166.048 24.6455 166.045 cv
24.6455 166.045 li
24.4765 166.009 24.3003 165.972 24.1241 165.92 cv
24.1241 165.92 li
18.7671 160.255 li
20.2002 158.91 li
27.0044 166.104 li
26.7837 166.156 li
26.7602 166.16 26.7365 166.165 26.7126 166.169 cv
26.5115 166.203 26.2978 166.219 26.0736 166.219 cv
26.0729 166.219 26.0723 166.219 26.0716 166.219 cv
1 .466667 0 rgb
f
72.941 125.494 mo
72.9391 125.494 72.9376 125.494 72.9358 125.494 cv
72.9376 125.494 72.9391 125.494 72.941 125.494 cv
72.941 125.494 li
72.9431 125.494 mo
74.509 125.493 75.9263 125.042 77.1177 123.932 cv
75.9261 125.042 74.5093 125.493 72.9431 125.494 cv
65.7161 123.42 mo
65.6995 123.412 65.6826 123.404 65.666 123.397 cv
65.6826 123.404 65.6995 123.412 65.7161 123.42 cv
65.6615 123.394 mo
65.6451 123.387 65.6292 123.379 65.6128 123.372 cv
65.6292 123.379 65.6451 123.387 65.6615 123.394 cv
65.5886 123.36 mo
65.5725 123.353 65.557 123.345 65.5408 123.338 cv
65.5408 123.338 li
65.557 123.345 65.5725 123.353 65.5886 123.36 cv
.284706 .667451 .708235 rgb
f
72.941 125.494 mo
72.9391 125.494 72.9376 125.494 72.9358 125.494 cv
70.7498 125.492 68.2734 124.613 65.7161 123.42 cv
65.6995 123.412 65.6826 123.404 65.666 123.397 cv
65.6646 123.396 65.6628 123.395 65.6615 123.394 cv
65.6451 123.387 65.6292 123.379 65.6128 123.372 cv
65.6049 123.368 65.5965 123.364 65.5886 123.36 cv
65.5725 123.353 65.557 123.345 65.5408 123.338 cv
65.4068 123.006 65.2681 122.672 65.1257 122.338 cv
64.6322 121.177 64.0928 120.003 63.562 118.833 cv
63.4888 118.671 li
63.4722 118.64 63.4565 118.608 63.4414 118.577 cv
63.3988 118.484 63.3562 118.39 63.3136 118.297 cv
64.8928 119.127 66.5311 119.979 68.0737 120.655 cv
68.0811 120.655 li
69.7715 121.39 71.3442 121.926 72.6152 121.978 cv
72.712 121.984 72.807 121.987 72.9001 121.987 cv
72.9005 121.987 72.9007 121.987 72.901 121.987 cv
72.901 121.987 li
72.901 121.987 li
72.9025 121.987 72.904 121.987 72.9054 121.987 cv
73.6584 121.986 74.2894 121.798 74.7461 121.36 cv
74.7461 121.36 li
75.9438 122.632 li
77.1489 123.903 li
77.1489 123.903 li
77.1385 123.913 77.1281 123.922 77.1177 123.932 cv
75.9263 125.042 74.509 125.493 72.9431 125.494 cv
72.9424 125.494 72.9417 125.494 72.941 125.494 cv
.0313725 .388235 .45098 rgb
f
65.5408 123.338 mo
65.5403 123.337 65.5396 123.337 65.539 123.337 cv
65.539 123.337 li
65.4059 123.005 65.2677 122.672 65.1257 122.338 cv
65.1257 122.338 li
65.2681 122.672 65.4068 123.006 65.5408 123.338 cv
65.5408 123.338 li
63.4414 118.577 mo
63.3964 118.484 63.3564 118.39 63.3125 118.296 cv
63.3129 118.297 63.3132 118.297 63.3136 118.297 cv
63.3562 118.39 63.3988 118.484 63.4414 118.577 cv
63.4414 118.577 li
.282353 .254902 .0862745 rgb
f
72.901 121.987 mo
72.9007 121.987 72.9005 121.987 72.9001 121.987 cv
72.9005 121.987 72.9007 121.987 72.901 121.987 cv
72.901 121.987 li
72.9054 121.987 mo
73.6583 121.986 74.2894 121.797 74.7461 121.36 cv
74.2894 121.798 73.6584 121.986 72.9054 121.987 cv
.286274 .313725 0 rgb
f
51.5449 129.314 mo
51.3921 129.233 51.2397 129.153 51.0884 129.073 cv
49.626 128.302 48.1514 127.524 46.7017 126.841 cv
47.3017 128.327 47.9951 129.843 48.6836 131.347 cv
48.7544 131.502 48.8262 131.658 48.8979 131.814 cv
50.4897 130.318 li
51.5449 129.314 li
.105882 .584314 .635294 rgb
f
49.5446 147.608 mo
49.5432 147.608 49.5416 147.608 49.5402 147.608 cv
49.5416 147.608 49.5432 147.608 49.5446 147.608 cv
49.5446 147.608 li
49.5466 147.608 mo
51.1165 147.608 52.5373 147.153 53.7308 146.034 cv
52.5372 147.154 51.1167 147.608 49.5466 147.608 cv
42.3851 145.566 mo
42.3276 145.539 42.2699 145.512 42.2123 145.485 cv
42.2699 145.512 42.3276 145.539 42.3851 145.566 cv
49.5041 144.106 mo
49.503 144.106 49.5019 144.106 49.5008 144.106 cv
49.5019 144.106 49.503 144.106 49.5041 144.106 cv
49.5041 144.106 li
49.5088 144.106 mo
49.6336 144.106 49.7553 144.101 49.8719 144.089 cv
49.7552 144.101 49.6336 144.106 49.5088 144.106 cv
49.3576 144.104 mo
49.3371 144.103 49.3164 144.102 49.2957 144.102 cv
49.3164 144.102 49.3371 144.103 49.3576 144.104 cv
49.2334 144.099 mo
49.2162 144.098 49.1989 144.097 49.1816 144.096 cv
49.1989 144.097 49.2162 144.098 49.2334 144.099 cv
53.8403 134.397 mo
53.3058 134.144 52.7673 133.879 52.2269 133.605 cv
52.7665 133.878 53.3042 134.143 53.8386 134.394 cv
53.8403 134.397 li
49.4065 132.138 mo
49.252 132.057 49.0916 131.971 48.9322 131.891 cv
48.9492 131.897 li
48.9312 131.887 li
48.9312 131.887 li
49.0901 131.971 49.2491 132.055 49.4065 132.138 cv
.284706 .667451 .708235 rgb
f
49.5446 147.608 mo
49.5432 147.608 49.5416 147.608 49.5402 147.608 cv
47.3715 147.607 44.9183 146.741 42.3851 145.566 cv
42.3276 145.539 42.2699 145.512 42.2123 145.485 cv
42.1914 145.475 42.1704 145.465 42.1494 145.456 cv
42.1494 145.456 li
42.0566 145.224 41.958 144.989 41.857 144.753 cv
41.5889 144.114 41.3065 143.47 41.0176 142.826 cv
41.0176 142.825 li
41.0176 142.825 li
41.0176 142.825 li
40.7382 142.2 40.4521 141.576 40.1655 140.951 cv
40.122 140.852 40.0764 140.756 40.0311 140.659 cv
39.9928 140.576 39.9545 140.492 39.916 140.408 cv
39.916 140.408 39.916 140.408 39.916 140.408 cv
39.9158 140.408 39.9157 140.408 39.9155 140.407 cv
41.2456 141.113 42.6196 141.826 43.935 142.436 cv
44.1186 142.523 44.3022 142.605 44.4859 142.685 cv
44.8535 142.847 45.2134 143.001 45.5738 143.141 cv
45.75 143.214 45.9262 143.28 46.0952 143.346 cv
46.25 143.405 46.4038 143.457 46.5513 143.508 cv
47.0801 143.692 47.5869 143.839 48.0644 143.942 cv
48.3145 143.993 48.5571 144.037 48.7924 144.059 cv
48.9024 144.074 49.0054 144.081 49.1157 144.096 cv
49.1816 144.096 li
49.1816 144.096 li
49.1989 144.097 49.2162 144.098 49.2334 144.099 cv
49.2542 144.1 49.275 144.101 49.2957 144.102 cv
49.3164 144.102 49.3371 144.103 49.3576 144.104 cv
49.4058 144.105 49.4535 144.106 49.5008 144.106 cv
49.5019 144.106 49.503 144.106 49.5041 144.106 cv
49.5041 144.106 li
49.5041 144.106 li
49.5056 144.106 49.5072 144.106 49.5088 144.106 cv
49.6336 144.106 49.7552 144.101 49.8719 144.089 cv
49.8943 144.086 49.9165 144.084 49.9385 144.081 cv
50.1441 144.052 50.3427 144.015 50.5264 143.957 cv
50.7613 143.868 li
50.8867 143.817 51.0039 143.75 51.1069 143.67 cv
51.3491 143.479 li
51.4375 143.398 51.5108 143.31 51.5771 143.214 cv
51.6656 143.097 li
51.8194 142.854 51.9297 142.567 52.0029 142.259 cv
52.0473 141.995 li
52.0698 141.826 li
52.0698 141.789 li
52.0845 141.59 li
52.0918 141.348 li
52.0918 141.348 li
52.0918 141.201 52.0845 141.046 52.0698 140.885 cv
52.062 140.724 52.0473 140.562 52.018 140.393 cv
51.996 140.224 51.9668 140.047 51.9297 139.871 cv
51.8637 139.518 51.7754 139.144 51.6724 138.769 cv
51.6284 138.6 51.5771 138.431 51.5259 138.262 cv
51.4448 138.012 51.3638 137.762 51.2759 137.504 cv
51.2759 137.498 li
51.2759 137.498 li
51.2759 137.498 li
51.2022 137.299 51.1362 137.093 51.0557 136.887 cv
50.9819 136.682 50.9009 136.468 50.8203 136.263 cv
50.6733 135.881 50.5185 135.491 50.3501 135.102 cv
50.2617 134.889 50.1738 134.675 50.0781 134.462 cv
49.7915 133.779 49.4829 133.088 49.167 132.405 cv
49.167 132.397 li
49.167 132.397 li
49.086 132.229 49.0054 132.06 48.9322 131.891 cv
48.9322 131.891 li
49.0916 131.971 49.252 132.057 49.4065 132.138 cv
49.4232 132.147 49.4399 132.156 49.4566 132.165 cv
50.3781 132.651 51.3049 133.139 52.2269 133.605 cv
52.7673 133.879 53.3058 134.144 53.8403 134.397 cv
53.8403 134.397 li
54.8495 136.895 55.5924 139.309 55.591 141.43 cv
55.5899 143.202 55.0696 144.77 53.752 146.014 cv
53.752 146.014 li
53.7449 146.021 53.7379 146.027 53.7308 146.034 cv
52.5373 147.153 51.1165 147.608 49.5466 147.608 cv
49.5459 147.608 49.5453 147.608 49.5446 147.608 cv
.0313725 .388235 .45098 rgb
f
41.857 144.753 mo
41.7981 144.615 41.7384 144.477 41.6787 144.338 cv
41.4882 143.883 41.2896 143.435 41.084 142.979 cv
41.0176 142.832 li
41.0176 142.826 li
41.3065 143.47 41.5889 144.114 41.857 144.753 cv
41.857 144.753 li
40.0311 140.659 mo
39.9921 140.576 39.9533 140.493 39.916 140.408 cv
39.916 140.408 li
39.916 140.408 39.916 140.408 39.916 140.408 cv
39.9545 140.492 39.9928 140.576 40.0311 140.659 cv
40.0311 140.659 li
.282353 .254902 .0862745 rgb
f
53.8433 134.397 mo
53.8384 134.394 li
53.8386 134.394 li
53.3042 134.143 52.7665 133.878 52.2269 133.605 cv
51.3049 133.139 50.3781 132.651 49.4566 132.165 cv
49.4399 132.156 49.4232 132.147 49.4065 132.138 cv
49.2491 132.055 49.0901 131.971 48.9312 131.887 cv
48.9312 131.887 li
48.8979 131.814 li
50.4897 130.318 li
51.5449 129.314 li
51.6143 129.351 li
51.6968 129.532 51.7793 129.712 51.8614 129.891 cv
52.5498 131.395 53.2436 132.911 53.8433 134.397 cv
.0313725 .388235 .45098 rgb
f
49.436 132.153 mo
49.4565 132.165 li
50.2847 132.601 51.1152 133.035 51.9443 133.457 cv
51.1143 133.034 50.2822 132.6 49.4536 132.163 cv
49.436 132.153 li
cp
.105882 .584314 .635294 rgb
f
28.1289 151.422 mo
28.1309 151.42 li
27.9844 151.343 27.8374 151.265 27.6919 151.188 cv
26.2295 150.416 24.7553 149.639 23.3056 148.956 cv
23.9058 150.442 24.5991 151.958 25.288 153.462 cv
25.356 153.611 25.4248 153.761 25.4931 153.911 cv
26.5489 152.921 li
28.1289 151.422 li
f
26.1453 169.724 mo
26.1437 169.724 26.1417 169.724 26.1401 169.724 cv
26.1417 169.724 26.1437 169.724 26.1453 169.724 cv
26.1453 169.724 li
26.1484 169.724 mo
27.7287 169.723 29.1573 169.264 30.3555 168.132 cv
31.673 166.885 32.1931 165.317 32.1949 163.546 cv
32.1931 165.317 31.673 166.885 30.3555 168.132 cv
29.1571 169.264 27.729 169.723 26.1484 169.724 cv
18.8462 167.621 mo
18.8402 167.618 18.8345 167.615 18.8285 167.613 cv
18.8345 167.615 18.8402 167.618 18.8462 167.621 cv
18.7947 167.597 mo
18.7783 167.589 18.762 167.581 18.7456 167.574 cv
18.7456 167.574 li
18.7456 167.574 li
18.7448 167.572 18.7441 167.57 18.7433 167.568 cv
18.7433 167.568 li
18.7441 167.57 18.7448 167.572 18.7456 167.574 cv
18.762 167.581 18.7783 167.589 18.7947 167.597 cv
30.4512 156.515 mo
29.6499 156.14 28.8491 155.736 28.0484 155.324 cv
28.0484 155.324 li
28.0405 155.324 li
28.0392 155.321 28.0379 155.318 28.0365 155.315 cv
28.8435 155.731 29.6492 156.136 30.4473 156.512 cv
30.4473 156.512 li
30.448 156.512 30.4484 156.512 30.4491 156.513 cv
30.4512 156.515 li
28.2182 151.466 mo
28.2177 151.465 28.2172 151.465 28.2167 151.465 cv
28.2167 151.465 li
28.2182 151.466 li
.284706 .667451 .708235 rgb
f
26.1597 155.383 mo
26.1597 155.383 li
26.0096 155.045 25.8557 154.708 25.7033 154.373 cv
25.8557 154.708 26.0097 155.045 26.1597 155.383 cv
28.0484 155.324 mo
28.0484 155.324 li
28.0405 155.324 li
27.8569 155.229 27.666 155.126 27.4824 155.03 cv
27.0568 154.804 26.6247 154.578 26.1979 154.352 cv
26.8097 154.675 27.4235 154.998 28.0365 155.315 cv
28.0379 155.318 28.0392 155.321 28.0405 155.324 cv
28.0484 155.324 li
28.0484 155.324 li
25.7359 154.108 mo
25.6982 154.088 25.6605 154.069 25.6228 154.049 cv
25.6605 154.068 25.6982 154.088 25.7359 154.108 cv
.286274 .537255 0 rgb
f
28.2167 151.465 mo
28.188 151.45 28.1594 151.435 28.1308 151.42 cv
28.1309 151.42 li
28.2167 151.465 li
28.2167 151.465 li
.0313725 .388235 .45098 rgb
f
26.1453 169.724 mo
26.1437 169.724 26.1417 169.724 26.1401 169.724 cv
23.9328 169.722 21.4299 168.827 18.8462 167.621 cv
18.8402 167.618 18.8345 167.615 18.8285 167.613 cv
18.8173 167.607 18.8059 167.602 18.7947 167.597 cv
18.7783 167.589 18.762 167.581 18.7456 167.574 cv
18.7448 167.572 18.7441 167.57 18.7433 167.568 cv
18.7449 167.569 18.7464 167.57 18.748 167.57 cv
18.3039 166.47 17.8081 165.353 17.3013 164.237 cv
17.1244 163.845 16.9462 163.452 16.7681 163.062 cv
16.7092 162.933 16.6465 162.8 16.5854 162.67 cv
16.5636 162.622 16.5417 162.574 16.5197 162.526 cv
17.2396 162.901 17.9667 163.282 18.686 163.65 cv
20.6045 164.62 22.5 165.487 24.1241 165.92 cv
24.3003 165.972 24.4765 166.009 24.6455 166.045 cv
24.6455 166.045 li
24.656 166.048 24.6665 166.05 24.6769 166.052 cv
25.1722 166.159 25.6389 166.219 26.0665 166.219 cv
26.0682 166.219 26.0699 166.219 26.0716 166.219 cv
26.0716 166.219 li
26.0716 166.219 li
26.0723 166.219 26.0729 166.219 26.0736 166.219 cv
26.2979 166.219 26.5115 166.203 26.7126 166.169 cv
26.7365 166.165 26.7602 166.16 26.7837 166.156 cv
27.0044 166.104 li
27.1001 166.082 27.1879 166.053 27.2691 166.016 cv
27.4824 165.92 li
27.6513 165.832 27.813 165.722 27.9526 165.59 cv
28.1655 165.347 li
28.2095 165.296 li
28.2685 165.215 28.3198 165.134 28.3638 165.039 cv
28.3789 165.009 li
28.4814 164.774 li
28.5406 164.612 li
28.5698 164.517 28.5918 164.421 28.6138 164.326 cv
28.6138 164.319 li
28.6138 164.304 li
28.6436 164.179 28.6577 164.046 28.6724 163.907 cv
28.6875 163.768 28.6944 163.621 28.6944 163.466 cv
28.6944 163.466 li
28.6944 163.466 li
28.6944 163.466 li
28.6944 163.466 li
28.6944 163.312 28.6875 163.158 28.6724 162.996 cv
28.6656 162.856 28.6504 162.709 28.6284 162.562 cv
28.6216 162.489 li
28.5991 162.364 28.5844 162.239 28.5546 162.106 cv
28.5039 161.805 28.4301 161.497 28.3491 161.181 cv
28.3491 161.173 li
28.3491 161.173 li
28.2905 160.96 28.232 160.74 28.1655 160.512 cv
28.0996 160.285 28.0259 160.057 27.9453 159.821 cv
27.9087 159.704 li
27.7026 159.102 27.4673 158.484 27.2178 157.852 cv
27.1294 157.646 27.0483 157.434 26.9531 157.213 cv
26.8648 156.999 26.7768 156.787 26.6812 156.573 cv
26.5122 156.177 26.3359 155.78 26.1597 155.383 cv
26.1597 155.383 li
26.0097 155.045 25.8557 154.708 25.7033 154.373 cv
25.647 154.249 25.5909 154.126 25.5353 154.003 cv
25.5645 154.018 25.5937 154.033 25.6228 154.049 cv
25.6605 154.069 25.6982 154.088 25.7359 154.108 cv
25.8445 154.165 25.9527 154.222 26.0605 154.279 cv
26.1063 154.303 26.1521 154.328 26.1979 154.352 cv
26.6247 154.578 27.0568 154.804 27.4824 155.03 cv
27.666 155.126 27.8569 155.229 28.0405 155.324 cv
28.0484 155.324 li
28.0484 155.324 li
28.8491 155.736 29.6499 156.14 30.4512 156.515 cv
30.4512 156.515 li
31.4561 159.013 32.1971 161.425 32.1949 163.546 cv
32.1931 165.317 31.673 166.885 30.3555 168.132 cv
29.1573 169.264 27.7287 169.723 26.1484 169.724 cv
26.1475 169.724 26.1463 169.724 26.1453 169.724 cv
f
25.5346 154.002 mo
25.5346 154.002 li
25.5076 153.943 li
25.5166 153.963 25.5256 153.983 25.5346 154.002 cv
.282353 .254902 .0862745 rgb
f
18.748 167.57 mo
18.7464 167.57 18.7449 167.569 18.7433 167.568 cv
18.7433 167.568 li
18.5746 167.159 18.4064 166.749 18.2304 166.339 cv
18.0546 165.928 17.8711 165.509 17.687 165.097 cv
17.5596 164.811 17.4308 164.524 17.3013 164.237 cv
17.3013 164.237 li
17.8081 165.353 18.3039 166.47 18.748 167.57 cv
16.5854 162.67 mo
16.5628 162.621 16.5405 162.573 16.5186 162.526 cv
16.519 162.526 16.5194 162.526 16.5197 162.526 cv
16.5417 162.574 16.5636 162.622 16.5854 162.67 cv
16.5854 162.67 li
f
30.4473 156.512 mo
29.6492 156.136 28.8435 155.731 28.0365 155.315 cv
27.4235 154.998 26.8097 154.675 26.1979 154.352 cv
26.1521 154.328 26.1063 154.303 26.0605 154.279 cv
25.9527 154.222 25.8445 154.165 25.7359 154.108 cv
25.6982 154.088 25.6605 154.068 25.6228 154.049 cv
25.5937 154.033 25.5645 154.018 25.5353 154.003 cv
25.5352 154.003 25.5352 154.003 25.5351 154.002 cv
25.5381 154.003 li
25.5346 154.002 li
25.5351 154.002 li
25.5346 154.002 li
25.5346 154.002 li
25.5346 154.002 li
25.5256 153.983 25.5166 153.963 25.5076 153.943 cv
25.4931 153.911 li
26.5489 152.921 li
28.1289 151.422 li
28.1308 151.42 li
28.1594 151.435 28.188 151.45 28.2167 151.465 cv
28.2172 151.465 28.2177 151.465 28.2182 151.466 cv
28.2182 151.466 li
28.3008 151.647 28.3838 151.828 28.4658 152.007 cv
29.1538 153.51 29.8467 155.025 30.4463 156.51 cv
30.4466 156.51 li
30.4469 156.511 30.4471 156.511 30.4473 156.512 cv
.0313725 .388235 .45098 rgb
f
30.4491 156.513 mo
30.4484 156.512 30.448 156.512 30.4473 156.512 cv
30.4473 156.512 li
30.4473 156.512 li
30.4471 156.511 30.4469 156.511 30.4466 156.51 cv
30.4491 156.513 li
.286274 .384314 .0823529 rgb
f
26.0736 166.219 mo
26.2978 166.219 26.5115 166.203 26.7126 166.169 cv
26.5115 166.203 26.2979 166.219 26.0736 166.219 cv
.286274 .313725 0 rgb
f
25.5347 154.001 mo
25.5352 154.002 li
25.7109 154.095 25.7114 154.097 25.5347 154.001 cv
cp
.105882 .584314 .635294 rgb
f
280.513 317.439 mo
272.43 321.091 li
272.423 321.091 li
259.174 324.405 li
257.903 324.721 256.675 325.176 255.499 325.765 cv
248.695 329.167 li
247.754 329.637 246.88 330.225 246.08 330.878 cv
245.285 329.13 li
243.587 325.367 li
243.418 324.992 243.587 324.552 243.962 324.383 cv
243.97 324.375 li
244.344 324.206 244.786 324.375 244.955 324.75 cv
245.101 325.074 li
277.376 310.502 li
279.278 309.643 281.505 310.487 282.365 312.384 cv
282.394 312.456 li
283.254 314.353 282.409 316.587 280.513 317.439 cv
.619608 .909804 .87451 rgb
f
247.033 332.977 mo
247.209 333.336 247.637 333.499 248.004 333.333 cv
248.012 333.325 li
248.387 333.156 248.555 332.716 248.387 332.341 cv
248.252 332.047 li
247.068 332.583 li
247.033 332.977 li
.803922 .929412 .917647 rgb
f
248.252 332.047 mo
272.432 321.091 li
272.425 321.093 li
248.24 332.018 li
248.252 332.047 li
.988235 .380392 .121569 rgb
f
246.082 330.882 mo
244.416 332.25 243.07 333.985 242.18 335.979 cv
225.648 373.037 li
243.522 373.037 li
247.033 332.977 li
247.02 332.958 li
246.082 330.882 li
f
255.5 325.764 mo
248.696 329.17 li
247.754 329.641 246.883 330.222 246.082 330.882 cv
247.02 332.958 li
247.033 332.977 li
247.068 332.583 li
248.252 332.047 li
248.24 332.018 li
272.425 321.093 li
259.176 324.403 li
257.905 324.721 256.672 325.177 255.5 325.764 cv
f
247.033 332.977 mo
247.033 332.977 li
247.02 332.958 li
246.082 330.882 li
246.883 330.222 247.754 329.641 248.696 329.17 cv
255.5 325.764 li
256.672 325.177 257.905 324.721 259.176 324.403 cv
272.425 321.093 li
248.24 332.018 li
248.252 332.047 li
247.068 332.583 li
247.033 332.977 li
.933333 .545098 .360784 rgb
f
248.703 373.036 mo
245.241 386.365 li
215.451 386.365 li
211.991 373.036 li
248.703 373.036 li
.258824 .129412 .0431373 rgb
f
229.909 373.037 mo
231.377 342.033 li
232.847 373.037 li
229.909 373.037 li
.0117647 .65098 .466667 rgb
f
239.988 357.535 mo
232.3 366.118 li
230.456 364.009 li
239.988 357.535 li
f
225.648 365.432 mo
232.383 369.737 li
230.373 371.88 li
225.648 365.432 li
f
231.377 328.361 mo
231.377 328.361 224.8 337.092 224.8 340.724 cv
224.8 344.355 227.746 348.747 231.377 348.747 cv
235.009 348.747 237.955 344.355 237.955 340.724 cv
237.955 337.092 231.377 328.361 231.377 328.361 cv
f
227.568 356.31 mo
225.377 353.411 214.867 350.415 214.867 350.415 cv
214.867 350.415 214.884 361.345 217.076 364.243 cv
219.266 367.14 224.263 368.866 227.161 366.676 cv
230.058 364.485 229.759 359.206 227.568 356.31 cv
f
237.707 350.52 mo
234.968 352.906 233.592 358.011 235.979 360.749 cv
238.365 363.488 243.61 362.823 246.349 360.436 cv
249.087 358.051 251.348 347.356 251.348 347.356 cv
251.348 347.356 240.446 348.133 237.707 350.52 cv
f
240.483 362.532 mo
239.03 362.532 237.638 362.161 236.588 361.331 cv
236.589 361.33 li
237.638 362.161 239.031 362.532 240.483 362.532 cv
241.228 362.532 241.99 362.435 242.728 362.251 cv
241.989 362.435 241.228 362.532 240.483 362.532 cv
.282353 .254902 .0862745 rgb
f
236.588 361.331 mo
236.369 361.157 236.166 360.964 235.979 360.75 cv
235.979 360.75 li
236.166 360.964 236.37 361.157 236.589 361.33 cv
236.588 361.331 li
.00392157 .435294 .333333 rgb
f
240.483 362.532 mo
239.031 362.532 237.638 362.161 236.589 361.33 cv
236.37 361.157 236.166 360.964 235.979 360.75 cv
251.348 347.356 li
251.348 347.356 249.087 358.051 246.349 360.436 cv
246.332 360.452 246.314 360.467 246.296 360.482 cv
245.331 361.306 244.066 361.919 242.728 362.251 cv
241.99 362.435 241.228 362.532 240.483 362.532 cv
f
231.377 348.747 mo
231.377 328.361 li
231.377 328.361 237.955 337.092 237.955 340.724 cv
237.955 344.355 235.009 348.747 231.377 348.747 cv
f
227.161 366.676 mo
214.867 350.415 li
214.867 350.415 225.377 353.411 227.568 356.31 cv
228.651 357.741 229.271 359.754 229.273 361.689 cv
229.274 363.669 228.626 365.568 227.161 366.676 cv
227.161 366.676 li
f
245.241 386.365 mo
230.346 386.365 li
230.346 373.037 li
232.847 373.037 li
232.847 373.036 li
248.703 373.036 li
245.241 386.365 li
.141176 .101961 .0352941 rgb
f
232.847 373.037 mo
230.346 373.037 li
230.346 373.036 li
232.847 373.036 li
232.847 373.037 li
.00392157 .513725 .380392 rgb
f
245.285 329.13 mo
245.285 329.13 li
243.587 325.367 li
243.543 325.269 243.522 325.166 243.522 325.065 cv
243.521 324.78 243.686 324.508 243.962 324.383 cv
243.97 324.375 li
244.069 324.33 244.172 324.309 244.274 324.309 cv
244.558 324.309 244.83 324.474 244.955 324.75 cv
245.101 325.074 li
277.376 310.502 li
277.881 310.274 278.409 310.166 278.929 310.166 cv
280.365 310.166 281.734 310.991 282.365 312.384 cv
282.394 312.456 li
245.285 329.13 li
.341176 .721569 .713725 rgb
f
122.54 145.081 mo
122.54 133.631 131.823 124.35 143.272 124.35 cv
143.481 124.35 li
143.481 115.097 li
143.273 115.097 li
126.886 115.097 113.555 128.429 113.555 144.816 cv
113.555 169.267 li
122.54 169.267 li
122.54 145.081 li
.105882 .584314 .635294 rgb
f
113.555 169.267 mo
113.555 179.191 li
122.54 179.191 li
122.54 169.267 li
113.555 169.267 li
.619608 .909804 .87451 rgb
f
143.691 115.097 mo
143.481 115.097 li
143.481 124.35 li
143.691 124.35 li
155.141 124.35 164.423 133.631 164.423 145.081 cv
164.423 169.267 li
173.409 169.267 li
173.409 144.816 li
173.409 128.429 160.078 115.097 143.691 115.097 cv
.988235 .380392 .121569 rgb
f
164.423 179.191 mo
173.409 179.191 li
173.409 169.267 li
164.423 169.267 li
164.423 179.191 li
.619608 .909804 .87451 rgb
f
122.54 145.081 mo
122.54 169.267 li
131.527 169.267 li
131.527 144.816 li
131.527 138.339 136.796 133.071 143.273 133.071 cv
143.481 133.071 li
143.481 124.35 li
143.272 124.35 li
131.823 124.35 122.54 133.631 122.54 145.081 cv
.105882 .584314 .635294 rgb
f
131.527 169.267 mo
122.54 169.267 li
122.54 179.191 li
131.527 179.191 li
131.527 169.267 li
.619608 .909804 .87451 rgb
f
143.691 133.071 mo
150.168 133.071 155.437 138.339 155.437 144.816 cv
155.437 169.267 li
164.423 169.267 li
164.423 145.081 li
164.423 133.631 155.141 124.35 143.691 124.35 cv
143.481 124.35 li
143.481 133.071 li
143.691 133.071 li
.988235 .380392 .121569 rgb
f
155.437 169.267 mo
155.437 179.191 li
164.423 179.191 li
164.423 169.267 li
155.437 169.267 li
.619608 .909804 .87451 rgb
f
131.527 169.267 mo
122.54 169.267 li
122.54 145.081 li
122.54 133.631 131.823 124.35 143.272 124.35 cv
143.481 124.35 li
143.481 133.071 li
143.273 133.071 li
136.796 133.071 131.527 138.339 131.527 144.816 cv
131.527 169.267 li
.0588235 .462745 .517647 rgb
f
131.527 179.191 mo
122.54 179.191 li
122.54 169.267 li
131.527 169.267 li
131.527 179.191 li
.341176 .721569 .713725 rgb
f
164.423 169.267 mo
155.437 169.267 li
155.437 144.816 li
155.437 144.816 li
155.437 138.339 150.168 133.071 143.691 133.071 cv
143.481 133.071 li
143.481 124.35 li
143.691 124.35 li
155.141 124.35 164.423 133.631 164.423 145.081 cv
164.423 169.267 li
.988235 .219608 .0156863 rgb
f
164.423 179.191 mo
155.437 179.191 li
155.437 169.267 li
164.423 169.267 li
164.423 179.191 li
.341176 .721569 .713725 rgb
f
380.537 157.042 mo
321.808 157.042 li
321.808 145.968 li
380.537 145.968 li
380.537 157.042 li
.0117647 .65098 .466667 rgb
f
380.537 157.042 mo
321.808 157.042 li
321.808 151.505 li
380.537 151.505 li
380.537 157.042 li
.00392157 .435294 .333333 rgb
f
383.556 168.117 mo
324.829 168.117 li
324.829 157.042 li
383.556 157.042 li
383.556 168.117 li
.988235 .380392 .121569 rgb
f
383.556 168.117 mo
324.829 168.117 li
324.829 162.58 li
383.556 162.58 li
383.556 168.117 li
.988235 .219608 .0156863 rgb
f
377.852 179.191 mo
319.124 179.191 li
319.124 168.117 li
377.852 168.117 li
377.852 179.191 li
.105882 .584314 .635294 rgb
f
346.055 133.279 mo
346.055 140.507 351.915 146.367 359.142 146.367 cv
359.142 120.191 li
351.915 120.191 346.055 126.051 346.055 133.279 cv
.988235 .380392 .121569 rgb
f
359.142 120.191 mo
359.142 146.367 li
366.372 146.367 372.231 140.507 372.231 133.279 cv
372.231 126.051 366.372 120.191 359.142 120.191 cv
f
359.142 146.367 mo
359.142 124.051 li
359.255 124.042 li
359.667 123.98 359.952 123.595 359.888 123.183 cv
359.885 123.162 359.684 121.76 360.054 120.223 cv
366.858 120.69 372.231 126.357 372.231 133.279 cv
372.231 140.507 366.372 146.367 359.142 146.367 cv
.988235 .219608 .0156863 rgb
f
359.141 124.051 mo
358.774 124.051 358.453 123.782 358.396 123.408 cv
358.374 123.258 357.862 119.7 359.854 117.15 cv
360.95 115.749 362.566 114.938 364.656 114.741 cv
365.067 114.7 365.44 115.007 365.479 115.422 cv
365.518 115.837 365.212 116.206 364.797 116.244 cv
363.136 116.401 361.873 117.019 361.044 118.08 cv
359.449 120.123 359.884 123.152 359.888 123.183 cv
359.952 123.595 359.667 123.98 359.255 124.042 cv
359.141 124.051 li
.258824 .129412 .0431373 rgb
f
334.33 161.141 mo
333.913 161.141 333.59 161.297 333.362 161.61 cv
333.133 161.923 333.019 162.359 333.019 162.918 cv
333.019 164.082 333.456 164.664 334.33 164.664 cv
334.696 164.664 335.139 164.572 335.661 164.389 cv
335.661 165.317 li
335.232 165.495 334.754 165.584 334.226 165.584 cv
333.467 165.584 332.886 165.354 332.484 164.894 cv
332.082 164.433 331.881 163.772 331.881 162.911 cv
331.881 162.369 331.979 161.893 332.177 161.485 cv
332.375 161.077 332.659 160.764 333.028 160.546 cv
333.398 160.329 333.832 160.22 334.33 160.22 cv
334.836 160.22 335.345 160.342 335.857 160.587 cv
335.5 161.487 li
335.305 161.394 335.109 161.313 334.911 161.244 cv
334.713 161.175 334.52 161.141 334.33 161.141 cv
cp
1 1 1 rgb
f
341.047 165.513 mo
339.944 165.513 li
339.944 163.261 li
337.877 163.261 li
337.877 165.513 li
336.771 165.513 li
336.771 160.294 li
337.877 160.294 li
337.877 162.34 li
339.944 162.34 li
339.944 160.294 li
341.047 160.294 li
341.047 165.513 li
cp
f
345.37 165.513 mo
342.364 165.513 li
342.364 160.294 li
345.37 160.294 li
345.37 161.201 li
343.471 161.201 li
343.471 162.347 li
345.238 162.347 li
345.238 163.253 li
343.471 163.253 li
343.471 164.599 li
345.37 164.599 li
345.37 165.513 li
cp
f
348.667 165.513 mo
347.412 161.419 li
347.379 161.419 li
347.424 162.252 347.447 162.807 347.447 163.086 cv
347.447 165.513 li
346.458 165.513 li
346.458 160.294 li
347.964 160.294 li
349.2 164.285 li
349.221 164.285 li
350.531 160.294 li
352.038 160.294 li
352.038 165.513 li
351.005 165.513 li
351.005 163.043 li
351.005 162.926 351.007 162.792 351.011 162.64 cv
351.015 162.487 351.03 162.083 351.059 161.426 cv
351.027 161.426 li
349.681 165.513 li
348.667 165.513 li
cp
f
353.35 165.513 mo
353.35 160.294 li
354.458 160.294 li
354.458 165.513 li
353.35 165.513 li
cp
f
358.85 164.064 mo
358.85 164.535 358.681 164.906 358.341 165.178 cv
358.002 165.449 357.531 165.584 356.926 165.584 cv
356.37 165.584 355.876 165.479 355.45 165.271 cv
355.45 164.242 li
355.801 164.399 356.099 164.51 356.343 164.574 cv
356.586 164.639 356.81 164.67 357.012 164.67 cv
357.254 164.67 357.441 164.624 357.572 164.531 cv
357.701 164.438 357.765 164.301 357.765 164.118 cv
357.765 164.015 357.737 163.924 357.679 163.844 cv
357.623 163.765 357.539 163.688 357.428 163.614 cv
357.318 163.54 357.092 163.422 356.751 163.261 cv
356.433 163.11 356.194 162.967 356.035 162.829 cv
355.875 162.691 355.748 162.53 355.652 162.347 cv
355.557 162.164 355.509 161.95 355.509 161.705 cv
355.509 161.243 355.667 160.88 355.979 160.616 cv
356.292 160.352 356.724 160.22 357.277 160.22 cv
357.547 160.22 357.807 160.252 358.052 160.316 cv
358.299 160.38 358.557 160.471 358.826 160.587 cv
358.468 161.447 li
358.19 161.333 357.959 161.253 357.778 161.208 cv
357.596 161.163 357.417 161.141 357.241 161.141 cv
357.032 161.141 356.871 161.189 356.759 161.287 cv
356.647 161.385 356.591 161.512 356.591 161.669 cv
356.591 161.767 356.614 161.852 356.659 161.924 cv
356.705 161.997 356.776 162.067 356.875 162.135 cv
356.973 162.203 357.208 162.325 357.576 162.5 cv
358.064 162.733 358.398 162.968 358.579 163.202 cv
358.759 163.437 358.85 163.723 358.85 164.064 cv
cp
f
361.81 165.513 mo
360.703 165.513 li
360.703 161.216 li
359.286 161.216 li
359.286 160.294 li
363.227 160.294 li
363.227 161.216 li
361.81 161.216 li
361.81 165.513 li
cp
f
365.136 162.611 mo
365.493 162.611 li
365.843 162.611 366.101 162.553 366.268 162.436 cv
366.434 162.32 366.518 162.137 366.518 161.886 cv
366.518 161.639 366.432 161.463 366.262 161.358 cv
366.092 161.253 365.829 161.201 365.472 161.201 cv
365.136 161.201 li
365.136 162.611 li
cp
365.136 163.511 mo
365.136 165.513 li
364.03 165.513 li
364.03 160.294 li
365.55 160.294 li
366.259 160.294 366.784 160.424 367.125 160.682 cv
367.465 160.94 367.634 161.332 367.634 161.858 cv
367.634 162.165 367.55 162.438 367.381 162.677 cv
367.212 162.917 366.973 163.104 366.665 163.239 cv
367.449 164.412 367.96 165.17 368.199 165.513 cv
366.971 165.513 li
365.725 163.511 li
365.136 163.511 li
cp
f
370.48 162.443 mo
371.569 160.294 li
372.76 160.294 li
371.029 163.482 li
371.029 165.513 li
369.929 165.513 li
369.929 163.518 li
368.199 160.294 li
369.399 160.294 li
370.48 162.443 li
cp
f
377.852 179.191 mo
319.124 179.191 li
319.124 173.654 li
377.852 173.654 li
377.852 179.191 li
.0588235 .462745 .517647 rgb
f
325.545 174.887 mo
325.545 175.358 325.376 175.729 325.037 176 cv
324.698 176.271 324.226 176.407 323.622 176.407 cv
323.065 176.407 322.572 176.302 322.144 176.093 cv
322.144 175.065 li
322.497 175.222 322.793 175.333 323.038 175.397 cv
323.282 175.461 323.504 175.493 323.708 175.493 cv
323.95 175.493 324.136 175.447 324.266 175.354 cv
324.395 175.261 324.46 175.124 324.46 174.94 cv
324.46 174.838 324.432 174.747 324.375 174.667 cv
324.318 174.587 324.234 174.511 324.123 174.437 cv
324.012 174.363 323.787 174.245 323.447 174.083 cv
323.127 173.933 322.888 173.79 322.73 173.651 cv
322.57 173.514 322.443 173.353 322.347 173.17 cv
322.252 172.986 322.205 172.772 322.205 172.527 cv
322.205 172.065 322.362 171.703 322.674 171.438 cv
322.987 171.174 323.419 171.042 323.971 171.042 cv
324.243 171.042 324.501 171.075 324.748 171.139 cv
324.995 171.203 325.251 171.293 325.521 171.41 cv
325.164 172.27 li
324.885 172.156 324.655 172.076 324.473 172.031 cv
324.292 171.986 324.112 171.963 323.935 171.963 cv
323.727 171.963 323.566 172.012 323.454 172.11 cv
323.342 172.207 323.287 172.334 323.287 172.491 cv
323.287 172.589 323.308 172.674 323.354 172.747 cv
323.4 172.819 323.471 172.89 323.57 172.958 cv
323.668 173.025 323.903 173.147 324.271 173.323 cv
324.759 173.556 325.093 173.79 325.274 174.024 cv
325.455 174.259 325.545 174.546 325.545 174.887 cv
cp
1 1 1 rgb
f
328.708 171.963 mo
328.292 171.963 327.969 172.12 327.74 172.433 cv
327.511 172.746 327.398 173.182 327.398 173.741 cv
327.398 174.904 327.833 175.486 328.708 175.486 cv
329.074 175.486 329.518 175.395 330.04 175.211 cv
330.04 176.14 li
329.611 176.318 329.132 176.407 328.604 176.407 cv
327.845 176.407 327.264 176.177 326.862 175.716 cv
326.46 175.256 326.259 174.595 326.259 173.734 cv
326.259 173.191 326.358 172.716 326.556 172.308 cv
326.752 171.9 327.037 171.587 327.407 171.369 cv
327.777 171.151 328.209 171.042 328.708 171.042 cv
329.214 171.042 329.723 171.165 330.235 171.41 cv
329.878 172.31 li
329.683 172.217 329.487 172.136 329.29 172.066 cv
329.092 171.998 328.898 171.963 328.708 171.963 cv
cp
f
331.149 176.335 mo
331.149 171.117 li
332.256 171.117 li
332.256 176.335 li
331.149 176.335 li
cp
f
336.575 176.335 mo
333.569 176.335 li
333.569 171.117 li
336.575 171.117 li
336.575 172.024 li
334.675 172.024 li
334.675 173.17 li
336.443 173.17 li
336.443 174.076 li
334.675 174.076 li
334.675 175.422 li
336.575 175.422 li
336.575 176.335 li
cp
f
342.292 176.335 mo
340.886 176.335 li
338.617 172.388 li
338.583 172.388 li
338.628 173.085 338.652 173.583 338.652 173.88 cv
338.652 176.335 li
337.663 176.335 li
337.663 171.117 li
339.058 171.117 li
341.325 175.026 li
341.35 175.026 li
341.314 174.348 341.296 173.868 341.296 173.587 cv
341.296 171.117 li
342.292 171.117 li
342.292 176.335 li
cp
f
345.823 171.963 mo
345.407 171.963 345.083 172.12 344.855 172.433 cv
344.626 172.746 344.513 173.182 344.513 173.741 cv
344.513 174.904 344.949 175.486 345.823 175.486 cv
346.189 175.486 346.633 175.395 347.155 175.211 cv
347.155 176.14 li
346.726 176.318 346.248 176.407 345.719 176.407 cv
344.96 176.407 344.379 176.177 343.977 175.716 cv
343.575 175.256 343.375 174.595 343.375 173.734 cv
343.375 173.191 343.473 172.716 343.67 172.308 cv
343.868 171.9 344.152 171.587 344.521 171.369 cv
344.892 171.151 345.325 171.042 345.823 171.042 cv
346.33 171.042 346.838 171.165 347.35 171.41 cv
346.994 172.31 li
346.798 172.217 346.602 172.136 346.404 172.066 cv
346.208 171.998 346.013 171.963 345.823 171.963 cv
cp
f
351.269 176.335 mo
348.263 176.335 li
348.263 171.117 li
351.269 171.117 li
351.269 172.024 li
349.371 172.024 li
349.371 173.17 li
351.137 173.17 li
351.137 174.076 li
349.371 174.076 li
349.371 175.422 li
351.269 175.422 li
351.269 176.335 li
cp
f
339.007 152.417 mo
339.007 153.777 li
339.729 153.777 li
340.034 153.777 340.258 153.718 340.404 153.602 cv
340.548 153.485 340.621 153.307 340.621 153.066 cv
340.621 152.633 340.312 152.417 339.693 152.417 cv
339.007 152.417 li
cp
339.007 151.539 mo
339.65 151.539 li
339.95 151.539 340.167 151.492 340.301 151.399 cv
340.436 151.307 340.503 151.153 340.503 150.939 cv
340.503 150.739 340.43 150.596 340.284 150.509 cv
340.137 150.422 339.906 150.379 339.589 150.379 cv
339.007 150.379 li
339.007 151.539 li
cp
337.901 149.472 mo
339.525 149.472 li
340.265 149.472 340.802 149.578 341.136 149.788 cv
341.471 149.999 341.638 150.333 341.638 150.792 cv
341.638 151.104 341.565 151.36 341.418 151.56 cv
341.272 151.76 341.078 151.88 340.835 151.92 cv
340.835 151.957 li
341.167 152.03 341.405 152.168 341.55 152.37 cv
341.697 152.573 341.771 152.841 341.771 153.177 cv
341.771 153.653 341.598 154.024 341.254 154.291 cv
340.911 154.557 340.444 154.69 339.853 154.69 cv
337.901 154.69 li
337.901 149.472 li
cp
f
343.74 152.074 mo
343.74 152.657 343.851 153.096 344.072 153.391 cv
344.293 153.686 344.624 153.833 345.065 153.833 cv
345.947 153.833 346.389 153.247 346.389 152.074 cv
346.389 150.899 345.95 150.311 345.072 150.311 cv
344.631 150.311 344.299 150.459 344.076 150.755 cv
343.852 151.051 343.74 151.491 343.74 152.074 cv
cp
347.548 152.074 mo
347.548 152.938 347.334 153.602 346.907 154.065 cv
346.478 154.53 345.864 154.762 345.065 154.762 cv
344.265 154.762 343.651 154.53 343.222 154.065 cv
342.794 153.602 342.581 152.936 342.581 152.067 cv
342.581 151.198 342.794 150.535 343.224 150.077 cv
343.654 149.619 344.27 149.39 345.072 149.39 cv
345.874 149.39 346.487 149.621 346.912 150.082 cv
347.336 150.544 347.548 151.208 347.548 152.074 cv
cp
f
349.558 152.074 mo
349.558 152.657 349.668 153.096 349.889 153.391 cv
350.112 153.686 350.442 153.833 350.882 153.833 cv
351.765 153.833 352.207 153.247 352.207 152.074 cv
352.207 150.899 351.768 150.311 350.889 150.311 cv
350.45 150.311 350.118 150.459 349.893 150.755 cv
349.669 151.051 349.558 151.491 349.558 152.074 cv
cp
353.367 152.074 mo
353.367 152.938 353.152 153.602 352.724 154.065 cv
352.295 154.53 351.681 154.762 350.882 154.762 cv
350.083 154.762 349.468 154.53 349.041 154.065 cv
348.613 153.602 348.398 152.936 348.398 152.067 cv
348.398 151.198 348.613 150.535 349.042 150.077 cv
349.471 149.619 350.087 149.39 350.889 149.39 cv
351.691 149.39 352.304 149.621 352.729 150.082 cv
353.154 150.544 353.367 151.208 353.367 152.074 cv
cp
f
358.646 154.69 mo
357.389 154.69 li
356.022 152.492 li
355.554 152.827 li
355.554 154.69 li
354.448 154.69 li
354.448 149.472 li
355.554 149.472 li
355.554 151.86 li
355.99 151.246 li
357.403 149.472 li
358.631 149.472 li
356.811 151.781 li
358.646 154.69 li
cp
f
359.142 173.654 mo
359.142 172.125 357.903 170.886 356.375 170.886 cv
354.844 170.886 353.606 172.125 353.606 173.654 cv
353.606 175.183 354.844 176.423 356.375 176.423 cv
357.903 176.423 359.142 175.183 359.142 173.654 cv
cp
f
334.225 151.505 mo
334.225 149.976 332.986 148.736 331.457 148.736 cv
329.927 148.736 328.688 149.976 328.688 151.505 cv
328.688 153.034 329.927 154.273 331.457 154.273 cv
332.986 154.273 334.225 153.034 334.225 151.505 cv
cp
f
376.005 168.117 mo
373.993 168.117 li
373.993 157.042 li
376.005 157.042 li
376.005 168.117 li
cp
f
330.702 168.117 mo
328.688 168.117 li
328.688 157.042 li
330.702 157.042 li
330.702 168.117 li
cp
f
363.09 114.738 mo
357.176 109.2 354.282 106.935 346.055 112.976 cv
346.105 113.075 li
362.611 115.118 li
362.918 114.884 363.09 114.738 363.09 114.738 cv
.0117647 .65098 .466667 rgb
f
346.105 113.075 mo
350.839 123.22 360.373 116.816 362.611 115.118 cv
346.105 113.075 li
f
353.705 118.675 mo
350.923 118.674 348.091 117.331 346.105 113.075 cv
362.611 115.118 li
362.558 115.158 362.5 115.201 362.439 115.247 cv
361.95 115.609 361.211 116.121 360.302 116.64 cv
358.539 117.646 356.141 118.675 353.705 118.675 cv
.00392157 .435294 .333333 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 15.1.0
%%For: (\716\753\774\743\740) ()
%%Title: (1504.i110.002.P.m007.c20.science icons flat.eps)
%%CreationDate: 4/10/2015 4:29 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBj26De+!81>hAc^EBul5cIt&VW+7'-#!kLoa,g]@#t`A#3SkjLhu6YVGL,n,P;",JKJWA5Ki%$1Wk,dMhWEtkXa[TWDk?)q
%s/om+,I;4N:<#']bd+5HrR]i[oD5'9*@R/[1rmFq/8JCc"i[mN@q1M"k.!HQ/%2JV$btBLmBimB[p*N'>+P(RVXUq?b\U?UiL<I%
%^#*M1rlO4?Q0LBZa_f^$V0^$4[5o+h?A<#K!h)VYq+VZ?5m-mb^pfc_7_e*S6@HVWFTLBDko8fArn-sl4hqq]-&hOUo-uLG)3+Wb
%s1%6af"8UjV,qRm5;-Elg_Sq@mecAYrrO*kG2U,\pbGe?:Fc<4O(4@[9>S[*63`o]bj;\Kd\U+U3n!7W:&N'3dbOmGs'+(Es'`1k
%:\`VaQl1hVZb'G[4q(bJBc5*KY74>p+6ihLo7SC[nA)eP2_$t_7b09[/.<d'V>_VG_rsq5AJ_R]d%tR\&WSKX%gUqj;>:)naZT;J
%28:BU2V73\fDc(cB\A3;-GY!,L>R:*XS76FN*m]>rcY@)2u)<flD6rRLJqair=gOf.\0MQ#NFHPoTAku)-<$Z^$8sh.mNu-=#T7_
%mBliS60g*G]$-P5248;l/.c8(Ug)"t`gi!j]4T%d\/6^="d#VjU$Mb`_mX)/%Z\geLuD+,ITgZm8<sPgh<`X,Tn#0n`oTF@Suf!j
%oAi,e2DCiVo:(mQh)Hm#LFm4DG'b=ChItIIXU?*XS.p$i&Fq0hJ"q-9^((+8n">Md>L5]eUK9%G:iBg\J,f2!J*.m?2Yuq)AuF0t
%D`(<oJ,_BuX0mudbX&.)Kp%jpj)9A]-GfU-dkEtR9`&@(n;li3T<3+#blA72gBN*;`C9b(I_FoW/+rVQ-2di`3dug5$e=K;pjIb/
%PLP@:%!j7:i01,`3]<W5ru@#J7W`K1"$\>f1]1i3I"m-2Q/QRs1k5:[<ZCq&+#B0o/TY%Y[$0DL)Q[*+AE\qY7--%#"u\Q?@(A#q
%+OonsiI>5]CbZo^]?kW0rWBC(^n<&A)[*h`K2%W09L-Ik"dH2'F]I[sJYDS&[I14S89];I@LW7EAbgi]]W3<FmJjgYDDg_8$c5OQ
%\>[%f'J/)UI:n?bT`mFIVVn5%Qt4&gZZM3GeZnWP4VLR9C=V5gO@W$[Cn+<&@L;kbo/k3f->.Fuh`].&Zs&GrB=;5hTd)%KC*A+j
%$RCucJ[Q?"c(U7"NR&45DbpuZ^/=6>`hga2KEN256#&*m?=7-=1`H&9:8NA>YMLf2L8&U_c8??KBF3Ij:=>t&*_Y8oHkRs1.a=2D
%.Wm3!MWUYJ*DS=m'Mbo430r&qJgJ:.4&S'VS-u9QL:Y#DLn]-be=5CVB#nuNDN>i-d#r!A+NO/bV9"7M#KI5a_1kTT_]]rl&bp7D
%Dmm<+WRn"_r6,&JRh0!#cm+#[I*Sh/?gkGHYJAtkcc(2F^#r#Nk9XK;B'0-,BJe\kARJ`?IbaDf@%N^X@'7tX%$mlaeJkoVhkUlS
%k4)KY(Oh3*H9]f2JhQ;09q,A.4Pki__53))qGCu!7B&)XIX9Qa;6F'4i5GZu=`A)Tan_i@l^]>p7[0AV0hFq3R=L6gdnR]o#tXi8
%E[8"?bYn!eQW%ume"%]M"LLTi:Q!<MekrTt5-#[fQ]kLS-(kSQ/LA;Zg2pf-h`:*l=AnfFk68&3.5uju-UNo73??BD`D3gBq;E]`
%=LIY:1eUlU0.6(qde-6Rs*GhW1Pr+O-pK0?R]ZNp]iQ4cUD*dA<"@B28HpeFH;_]?oX^QsNo04_P.2L;?p\E\$>4c,cBi<os55Z/
%U#8&)o+MuUbfj?^A?5*A._Sk1_4ZHMVd%=/bu)&,@`u"*U^5XlofH0'P=M9;-qZnS`90deFjY)L.?[=X?%*G&jEY$k^uM/=P$(LH
%\LAdO%HXIDKJ\p_VGPQ16b/CU"Tjt/X&co\>CsBgUH4%D>_9=M)U"t^>T1e^Z!83jV6SgXO6*It(!@mIB1?@@A`FOoF306*notWg
%S\5!?DsX)rC9<!6V5m##6+9oGqEO8PM`QuiW>;,-iM<^OB$KI+W&\bf7p2i0p6mojrGK)NC$%oa2r/q(K#pqaU(M/S</F1[87J$&
%'=:KUVT734o%(oSfC+]e%5U,uGDN\qSE13%KlK%YPn#2?F#H'sM-/#pN?l&#;/T8eQXEHS\)03F<;lc1,oK"2ii,QF,r4s4`_M$5
%]_P!E0U^!7J\V<6rC3V^BJmE88i$cR_c8$QT9c"_NIT]bVLKln_^[G\E%L;nr,;;H@65&9;]ZH::nNQ&s!8fJIhVQ2G$FWOYFI/]
%[Ij@CfG@Jo/Gt6jFF%i\P/%eG!`QihOOuAaDu2N#ZcY">)PGNXpWbDh?BTH/RF23Em+qIc03+hO$VdlBI@`i\SPN(7-)&.K6A%;S
%Z8=&K(88R5!W>(^<q/,OQVT%(e>#)I;WIOFbb$fJHBh1mXR,3(p,f09EcNM?S`CIOG)jU]`?O."POA!u,tG^E]6k6Nc.&XK'@8Gp
%8^7:ZToDC>e];r^s*k?@,B*HCVHP"D9"\`'$9am:+F^4dX7qg6XXlHbf^-%_a\"n;($=;YdP,HFj`[]R5/Z,2',]FP$q!oM2YChO
%2CPaSLL[2eH/6>IA2CC$Q>a`Kdb?IhDtm_Xe.OKO'7>OY_;<%]nHnp'cJZP6"MRo_0Rij.`[B3f;f?mn#iG7nSg;_+N#A3)^S"ua
%2@t#R-U"%TiH#;sB#sW5Za_%0.Y1\r^U?a"`6922fh8RE<&gp8Rsnl)Dtqjn)6i'LPG0^s@"Ih4oF4liYdGq2]5;rk$_KE4Y-_ii
%jBPZW\HGQ\1D/l):Q/k>53e8kQP3%7PIT/Ki&#5hl*jMKHmdh$&i"/C21GjLS<B7WrKcLajt'j:O_DU*rN&eVR[X4YT7DaT2=%/W
%[[e]!VK5XR1m75kC.rMQ4$Iq6QW$h^e`upg?il5&U6D<$J[SKKPF]H4+tfcH>(0@;2I"EOj&W;U0D]1%,"*hX$;ZP\7_S%f''uHu
%<Z4tc]/B[m@F7XYAWLl;e`G:+2^e,n'8o!dOE'WZ-F1afgn[K?2#aKP9L'()X'VWdd&cc#P9MH,)gKeF>pQ[H<,?$-,se?`8eS&2
%-6-/fRe;S,MKe</@;lT,Am9H-SL@DKaAd)q:6["lbZaieh2*m]q:R$[7a9jlPk;f*g"_LK88D#7l+%7M;3DJFCSkaapS&pP/SATI
%8tm1YrHhCZLUOc'HVoq;OmYY0pS+I1;6DfV[sKccrZBdNP"<8^]oBT4HVoq;0l%hQ\eer!Z_!&f.#B:peBe!GYSSSl&[OC]DfV+T
%(AH<('$MlMY"=Z8CgWd#BY.G/'!ldB`U"#ODoH1K(u2.g$ZfNB7CqI?k_@PlZY7*kj]t)B14Z]Oe'BUoI//Z/bbTRP.XI)NHL4bu
%[05NYlEsTph*/N\d/cf'Y5L6H,9q)o<_L-6<3,tQ[9Djsh+Ff8qJ*!1qbLraF[bNXL)9/g;7Ru\_6:!lcdW#(3fU:+NLY)/-"'#"
%NRDMTOVqBHfEjJ*EME1?mGV!d:<FOQcTEed>Q<;nlo$=XO)F^mk:Go5NdoFpH&9YE?/AItf)1_XF7dA>OW@;9^X=VZ\mn&U4"8Tq
%kIi^=WQ=^0RQ/Hei)6"])m?*KS?SEmPX\GhSP+8Zc(?9C2Vq&id8pc/UYG9:bJ:kmp^Fo=iJYqK3>OB\#imHo^.b#3oER_#$)V!H
%b?K\@aW;@mp.bJ,aS7E,j.B.9EQcpoY.WmPoge'V.Y)6bA(B.!]@DV^Ff.H=K$UYF-qNW8;@?Gbp"nAUhb,_7AkF!faC:a%8s60<
%@%iGQdg9\YU;Y>)W5FeF0PWgNKEcM/ASKYgAV:8'dag.XCHV9unS1O)VJP<F]XRCMN8uNB6sO_JB4`qrHI=HPs%V*pVfVh2L2TqZ
%7CAVfs/,+sPG9U5rtWJsgA:9?I$>m^s%V*ps,cu2/&6nJRa@6lf6l%)hfR+%?1XVD/Cr%Kq'NW@X5!*5J2b37oIfc,n`^guWLs*r
%qT2;nam1?R5Q;Bq1,JZ^-V3#"U'n(MpgMDm6k.\6'QlY=7\fY&jWlbLVe8.@Y[#/ZCD0N(=CI)BO%WSQ`>9tocn8%^3Ckr:BngGe
%M3\:U,YaK!BsKs:-.9h\dko`"Ejf"E420TWL![eG"l!$AD6<f9[i0^6[H#k>>FeB-jLTN'5F[=DE"f$'/,uYWoR!@)(Q@Qs=`RD<
%a:aTp2rLlmfg)D#K[Vcs3^ltYoIhQ&2l4U5]<ZBtAlJ'FSC(=!N4Nl@$Ede"\*^;id!B7)W=tM'+l>%[ATFASEWS3!D*n_O,m(t6
%PD`R6jX>%,SWkI-d_neIGY&Q%C#YtS-=5-=9:C)CCT0#4_@nRH$Ua`V2"<?G&a1f>]JRXh-"^kN5><7(;s&9IZ7j)*REcr2dYfGi
%cV`CHV3',YfH`=QHJ-59C4mk!*)-6@'1jf:R.e]MP0f:s2DIYT5A.bmrl1iu-5:q$Ft<6JWsPbF9T<P.'@V(4r3RE`oHpI"0TK3C
%\#/"I-9!>/@iNl9Qu:Lb9NN(_o_,-Rp8(?;l$qieUA_DjXn>Kd8BkN5$1;M":ZYC-01_/1:M%V;i1\6G-lj5Z1@jnp6n8QQ$!pi4
%6IS(\VLFi?:/8BL%qe8MY9d.RZSpujLrTI($uhcb]q*!T[#N:HI4RI>cu*-BVOQ;pjUun%-egWq'V(E,e#anVr)9dFg0#fG9o><L
%h+g4/&moC*Y#I/#OuTi_oP+>@H&VC$ja!0S0kMQF8b3ctklA?)+HMY<L,=rG[?9mYc1s2WOleBqD.M'W7[hAbOZ^X5-UR-!'()X1
%mIAk$Vc)n^)R!?;,hoVM]hA/51dABl`&.?-4$`P$6mm--_NQ09b9j_9k.&k49-+%ZheuPZps]E--Uh7G[GS%ZWhWIKO]2@I4/b(N
%NE`4NUkl).nD:Im&95UUXJmN*GD/--VY8JsL(]JcHI:+.aepDg;s?G4EKm<o%/h6ADTOb'\+":,7#p_-Vfe-?9Mr(:;3Kk:X^3ML
%I+:jUGl4//a&T8OqH\rMK7<!nhZ+$>Rn:Hgp6-aFcNK<4-&Qt[,ZT3!6XFK$oQ'3C[G/+J.hOctZJd;?.9!t:.gZOHB!:H$8dHH"
%UJ](ms$I/$^!#3:=^+WlY^p?i<thr_3FO8$'6&9R^0Ng7/=4@sPFj^H1m^[QBf)/GF(mHi9Yu96RS2Q_htCaO(2aXUE3[7g`cDHb
%9#J1rS4gc11n74V\MThgjl)_X]>D*HjNL.S\#eJ=J1_]OBh10'+l-S-<BKSIP*kps*mZ,<'5%##L>2;:6c'N"dsg@%]iSYm".]"4
%bk,4u)o$[V(9";+JrH[0>:0l!jS7cr/'!WAomAX76*5=,>4;Dp8X'GHp3no_A>r#.8]bGY2qY$W:*l]Getu:N"`G`#dB1T0?LQmC
%WD@O]<<1M9*H^Nu`54*'BE&,O@CG(:9<`0gm<;;T<I_be8`g=IMPn;-09MCp$.*Bf"c4\=cMX<Y6:6?lRM/t?27pQEaLBtL!VTo\
%8Q#6.=eZiZ)S"E%"d[1H@$SOD$<''5>elNf]h%C@2JLmHJSlg=#F5>>0D^M@c[q=D)IsJhgMe)B95mOjhgiHSY!XUK-gX#3l_Nae
%a]=apIO?>8H-8N=V;>JBc/!V`GEk+&Dj)7g$,;':1gFU$oHhkt'&/CqgT@?&,m(t6rrH1SFc*'7.8##_e0hgIOaWpuB%e]FFXd7C
%[R'^]DGf][V9//k%S`cun"!bZM68V+.?0G)"[=)/7\p4q9o=Z.f).Xe.Qa8q-;-\CW*=0a1ml`d_l/P>&K7amd?&b/AGWFgD;2/H
%W:tHcooUD<C)g14pu`CGZl@%2#(G9c@hK\Xj#CTNap]-.j9?p<NO*OBB/,%/4uPC&:=&CV*O@OC^D2ZpP_`OgLX3)Mi[qj-Q$g-q
%]>WlU]`ioMjZPEdZd&9a6l-SO0#9CSZ_>8mReSQ(;ZO@u>5FUS=ic3$0XIW_9l*/`m[,SM1TVndXO?gP\Mi8Yic\]"EEherm63lq
%o64^rhhFcZQ4lY#;h%H[n&mI\KUeV5^^8F,^1?6SmB+!\]Zn51aVFa"WE0D9P^ijXE%>i/T']5THBS#8B@<?bRafU3,YE#@En4jM
%bWF=`9jtdunN3RnB7fr?BcH#;jZ(BGc9uj(a<Xks,(e]!9g;*>:KX*NqT\<^9WF60,\1%*ULe>TQu/^02JFnpDne'N:NUX`KfF><
%q4LZ#G#+:6UbIKXJ*TuS=$C:Ooi[?V3M&%c8+T$8X='R952o%e[_1]?NASM_Y.UW9/:Yt]bMRuh'd#`1bAHLtd71GX4GH6X)aQut
%>0U>dKl.9$(@\td>&UFur;G6Jp9j42r4?43[uXTjG<o&32I$2<kqA9eq-9-3Ofnb-/k7TgIe^bRO%DM-S$h`3Vtn24V;BGc+sk&9
%gkYK'PZ`mI[bn,bc`^Y,8T4Ds[pG&9eS1TOj!u#>7q8GA$82kP#iJ:T\*$gsSXNo\Dg=Xb)J(;E]:XTQV.EuKVf)S4-_kIFmEEVs
%>,M!PI(>#>_XADOO$\s00q27u$7#g:8!1nUhQ:mGZ#o(HI^=2(0?2I+/OW/aP)u?0*]>_koC6?*>0U6chA\mM[.4Z_"HN..E=Non
%)7K_Gb.=$R]"l1a@Ce@LhkjtRL'o([c.+EDTPM"%!f++jCRMa;+.-a]Ss=S&6&o;<K_.PB$4rq?!)iBi<[0F#VX&0un=)MIg8u0m
%5=uTLZhsWuJiXkNqUId(_nVG^kf"t:N,C?pe_7"R::9fG[C4(s9g`db(acRP<69l4lSb_Zh.<Oe?-grAeDHR01RD'&ZQ,p/WpL[&
%gV9#N.k>He<SFG#:6kN1PdUeMg-f#snJLIu&r<XPJ`_,PQ(*eBgW82M5H"ARqYJl?olI.*;uM)drTn6qY+Z44?F!!ACeN56oVE"/
%K$m-WRV+h2Qe!.C4uhJ#l`&<-Q1hC0D'r?;WR=P,p6Cm9YDdn0Ci9hY=&ubIWbbUFRk!07Z#J7slOPWa:6Wus;OsBDlr7Vq3d]E\
%lh8\I<LrMjWQn7]G,hmPXKun$OBKfD'XYns`pimGHita4,0Y-ddmJPc)nO;,<)'9*qH)1RSuV$S9rD_eFff:NYl=FSBmY`EG.PpC
%e_7"R^6[@D$k6jUk#rgSE&>a]q;,i'e7kD-Xud%8bgno16d6IZiMkD"0s*SZT(Y[)=8Ip5B2rU5f.Yj;:hRtuO8dVm5;$e$7p4t7
%beRMY&/?,]"8EiM+ZcK5dh)RcC`o!O+b$XI#S1uX&mAQJ/\S>CSutkLmX0&jp\El('0]On#Q05#%)/r&ph[i4q!G<O;\'<S3YCg8
%f;&qG@A$g.':;pcZ5]R&:7Z8ZCW`'ob7CfE<Z6FjkArD%O-ATes)AS7GC(@A..?a/ET#[QOMB0rrr-]B$NKZ?2F3s:4%!5,7^"Oo
%&P4&+&o[H3VgNWHJ%>UNijdOSVZ*36not-qWWth&YuU0ups!-MdK:Y]4*iFY-u/Nij;^;_PXG.!?]RCV%Y]O&l[Pq&)sV"ag%)\K
%Z$-;o*R-f^G)q)O3o/=Z0*ZsDpr0'Gm0)'`UOUQOX2%fOr;$OEf4\11rE:C'aeDF,6/Zar=Ta=1J%c!,K$<TY]iRTr!^bGs2^oHU
%cBPTc0?bF_@mqDVQ:`tiP)T%O"l\`=@HC""[=Dhd6f=*PC;8M=>tfhGqlM'Rd]K1#L,Kb.@<+s<'D#i9nls`G1d8Ba.X+\fR0*2U
%!DVEfe>p&KNLQN/FUd0N4PoZ[NA4t9q=W4C6ut%13YhMGFPX$4)4)$3:VG<uoo*7B5#H>MaBQ(](dQER/uA$bf2)a2T2S(CBk/g?
%EA"*QdYDQs%T>]Z0!g$PkrEYS^sa_/-bZ'GrUfYred.]&8lObLOLF4/bN1HA4<7`3(qZc_j217bC>a!c!&ECa,BL%8E[HWR:+=Gg
%J)'a5p&7BlcgS:\I?E.h)Tlp]H6u2*JG7Q3B1`UE9>B_81:nRAlh</,kU1YFg[[+b:@G\ml-qIgI(rD`nDN@b2,2T"[Hgsmaq>hq
%fbp<4h0)F8+(XI`NOkW'-BlTM?)c?Y$XQfDk92X%>FAa2f?3G[\imf,s.;MX*6Dkqg-BD^IaN(e%qGZ(b]M*[>03L*V>6n7h%,ua
%[Va_CR?GrRa5KkK#$?T,AIZ&K(6faZTQ6lSg97%CRGCoUh]Ci#eY&&jr9uKIrkH.j7]kOJ*7l/&hTr!2T6C,tL+b.6nV7=#Y`Q/X
%3H)@+kH01DRV`3FO!n3;3N_q$@"qH+%6<i)7ss5,LRimt%IM9"V3+\e>Va9Y<8.&XB9uW/FHAgu%Ad/;04Jg#3r&%r:g'uQ7/\e/
%^oQ6#0[;V)^P:>"XeH;Aq<_dhF^/YIq<`X+)e'nk]S?uh>!)TR6*%,:WCi89g$cE)+@P&0iE70jA*8X)Bm8in?Er=ZX^/]jD>U^0
%]a9?6+j(c(pA?1I$,]<mH/6VX=nVd`oA!BGhe:)&n.qGmK&PH$3RTZ1JbB.jCXei&V?^$BL;^Tr?!:=t`\bo(dZnFJScP*UkmjXJ
%**]+"&bFWQ$;S-*g&L"i6r>>%8.c7k,aHP;J2\S_0X;F>[WO.PeOI4],)"'hImGV]JLfPLWjJU/BZ]cQ4HH0I.-c]Vqi0d(*XkBG
%<NS+),]p"N]]0Wh#$UuN<\[KQrVcelG3h7j6M'8(%1&qDT5h4KVLh%(g8]ibn?KP33C)6D.coS:DsZn)E]Ccn*8aTkW25F](mZ0c
%1'aLp79`+='@W%,WhKBIm&>))WPS,Q<<IeS&!][N34868oKjXLCE7%R.A6eak\%+6F]E-H\IPP':dM<bTH$`\CTr.lD]aVaT.c-n
%Y62,1e+Jib:-oqs^?o6aX=U=p]GfF%>b6>j3o4VCZnbLH<=Bb)7BCH5gRrn]Ah0CVR<k'/]t!8fTpnPM1sWL-2%p_eL@Xk=Y*/?#
%<>$$!TIq]"?*kEu7B-s^V)LK$=rlk21i'rX&),uu^#ufGaO4=Kf-87If\hf1MP98l:i6[B.VF"bENDakEFTqth<YEjGkil]N)rZf
%1f]"l:c<O`s8!0YfI)+jl'J@`1M.i>]@hpR!'N^/(b+#'A0VD\\EOMu2>tu2H4OLXSMY]HDZ@3cGSEUH"IN$/*<44s4&B"lEdJ@Q
%k&@CX=JWr<hT'##mF8F)E45qGch*>fX')LU[Mk_'7;1PB+WfQ8pT+E7;0?3"M]lQ3c=uug%#J)`>HKfq6RFfkC(U-LVJmeq%0cX6
%8H$&OUYT[s;>iLM4AIQTZdhgO4^NfAX_*W[K.iqdEcK%s]#!g1&VZl(^.pO,X+lWq]lJu)+4kN#8X@E?!p<R[iJ5<u=i%AE7g^ZW
%\^YpTP@l/UNmY$L#bWBt?"Cdkq-g'Rhqd&2B=9]*9_TB.2R<18kmKB'S^pBG0l@%[+[mI4)ZoWgNK2\ZEg:7C2/^d>cq1uT9kGHr
%WrKL\j!^.*[;5`a8ou_'UY6X(1FRgJ`h51/-o)LC`+g_07@Fcg#2E$ujM_TY328[jS<tjl>-Qas8Bjh7;W&P7[u83o3JGL`b-l(6
%2iUJsK8N+0G%n!^aMO,1\fKp?r;tbAYbNRDeAbT)?FCMI?K6q:!f]4[3:ik,V1#m_BScu)02o-.j^R'@Rbt6>2V$knSDjeoraV);
%*nr$,<0bGTJsGbD]m!<kB3;Ah0@YjKY@>a;(a<ogHC41ALFs>OS:??VWoG9KDG8GRXB^J\PWXM2IFd]]02+";(8F\N-HS*o0jr\5
%['OC:$]_PTA1d^+jp/n%,]<<i-7Rt8VCW-UYMKXW5&8fU;NGBt11U)uR?pBS1"*0kCj9*nNj>)F;Ki>o)on5h=LTn>X>$8G/Wl]J
%:N`!V.t"m*M%l"a$T><g7AY(^*Pad'kn*FhKiQ>1'TZWC)[Jh;m<<saRj_i*DC0FS\D9/Z294!eE`+P=rHa<VJD9Pe#&J%ai\Fo8
%4%#Hnilnp,VhpWT3X/iE7<>P?$M"VkAc>SLg;j%&goh>FFEahc7)+h]4^5V+Yt61:B_C@tA0iZq!9Ia22$G6E.p'<qSB)jj'o,\0
%hI,KD?"jM*Z,D&E8']GFm=KNsZ[T;hq;H7E[o%'&r7jQ+C]9N3katO\HnoOJrgBBPa3*IXX^aT%>:cHhCpeUPd1K(f]kAF!G5,.$
%'Tq]BC6D+>VQ>V[-h1;WSi=5DOHP(Npe/&62:"(gj*ZC7S-+Dfg2@0rqJj5%;98,@[^KGQ#\_`OfYa6PD!/XT`O3T2%p(:MQ<oph
%G*_acS^!)!Q.+ld(Ss2do+)6%9"')=]m7?.m]ES*fmLAJ4^0@bHFUZFkuXG(L9^-kl'?Hfe%3M:`R?.#rqboHm%a6]V07'rqpK]t
%h5mfGmrW*>(VTb2o@N*s29Xl1e=Sk*(:2\LVaGltC[[raVc]BlEB\44MVgV\XUiTJ\VjM!$No6I>C=T]oh.a>raGe1j5D/';`rH6
%*65L2hsjI3\$&#FarM2%Db'Q%Q<X0t^33iZ]Y;h=?7ZkYk5(qMc.WJG6i8E^4kf-::Hfj]q8Ra@h9&=gXB.B&53NT=I!nhmlK.L#
%CX4%CnqI//DW/e'QPOspn@c>3gU`SUG/)kZm4[@4E[9LAC45<cq_l2kh5K&2k6kqRdHXnQc?uj`J$nokEP:l29r[(F+$G&Lini@'
%[9>T2:\D\dPO]U[>1XfsS50%^f9Q3!(U\X#mb,M>cJkaNY.Xem3ted%^A?j5KPoH-gX#2rB(b-%ific[a3MZ%-[!ITgc[B5Sa)NT
%GeTmW9id0*\o3.@c9pJL1pu%0^$rN5K</uUR9s:ko*o@,K%'5'4L\YL>.]!gZ/jS_?DY1)OkkBL'O"iZfA>(BXr,4R5#]'hRr^jC
%;tfDr%a.@caBgff<DW5L$Z&rOkhB9Ddm)aE/j?G>4Xf,hr6W8t(k2"/>+m.eNHT\nbG%3:T9e'HVmXF%Qb7]SC#^^^c$4/CJHWa:
%(8!eH=>Gc[:7m>s%\Ki)f"Sio6DGE+%.3HCD:oA_b.e3Yp`-$$cTg+#;SGRRqbFkM7-lQ&h.IN#^qNfi#K:V>`KS=q^Md($&+A]7
%nXJ.embGE5\Xc'9[s52cs1\L2o?&M(PIKBj*-$^^@'pLa8,D6"]_*nd;_!5X4=\jqZ,`mm(NZLN_T=#CGkgp3j6Y<"@>F:MpPYBK
%SarPBV;ai/-0L<L24jpu!kidNp#<<eQ1(6=Vp)9EY9*?(jpk_iqSU5\0N[4d*/o*440ki6QpEe;4GgE7Tf.+0HsM)"e4Q@a9p1.:
%YA9sYaN1-Q`I,l+1,rT;k,O%a#D7r\Za4PApk7.qXEmb#bT4CD8T*)pgT+[So-Z2t3Gn0AK<]Cqb8SDHaq<4^oDI&7KD%XjN:!0S
%/=*W=:gRQO]Piq<g#&a%TWZ3!\p+4nh-2:tSo&S?e`rX;SFaQV*#saikDcs5`p[e_/2&#jEPpe,q_&?(:$uE$[Kt%<WE7<1hk.sJ
%91>+dS*um]Qol=BAo(Z*_rB/"/M6<I<_GmYK<b2no.-D4$:t?2W[FX&U@%$po$1If4^%aZgEl-mq"SY%;>se'G*-]"hmRP1BCG7U
%)_W"[#21"hX]J!V_6WYe[s)ld&?:/-OCsL51SHiGMC/q,1VgJB``;$<gNUu?7Y`$kIQfGYl_dP8Tt^P14LWNFF)U3@h.X>(\\3WV
%%JO(:H&]18BG[nBYX%N.[['.MDq@WtS,0dll9FVuWi0_7gS1Wa>s%ImbWkoP(g<M^Dc*1jHd4&_kjK#sE5+$.DKS`?Iol*lH+i,1
%R+qZ;U*.2CEaRGMSen\/jQg$s#NZ29rBpT5\)0ES_JcD-l84#rXEUZp&,;6c'D:b3lK>&$E1E8[Hi!9co0'duI.9n6c93Xk0A\q`
%i6V*Xr:tYGY@\jl`OGS;T*"?o'V;p8TMNoD<DmUEmh]N^j\>O?I$ai.Dm^DE[A*A8_:o\hoPXp.;9Qe:dldQ,XD9KPh`V^(0')a5
%L=G_4mpE/sh%5/Xo9ZXLYKP`A+XfE'Y<eA;S7ld=j"pI-bDU:c4)7[Rbqo.b0c,"#,]OS>*/JKgOR-bYro"'/\s%mkLBjP@.\-J,
%7Q,d%ioo;:]EmKlHCm!QGdFZME_c<S.E!9`/uAU0;IgaY:I%6nn_rFW?L@Np>GPSN2e15_,U3/<`k2%;&,7CHlEse@66(+]Tl5as
%%sQ1%-HZe\/#!]?%c^1;$q]@TDd4i=2k^p`6NV>NrRZCYl@_@/JW3;7P^$XpKiUSWg'\'FUdeB$*JWAY9DXa7'*"5og71sg%Bi@`
%qblDA2<RM`bqpZ;mn.=?^,V>PPTe<aRF0D`j@/"&8oRlWA-*J(e0&J!n6X7h+o4JK<FOfk@l`4,V^>0=!dRcA+r5hg>W`C08.Il=
%j)^jb!U&s")^PrBJ!1&QDA3CD(5-]aGJ>!Ri@#k1-kn;\;)o.75QV*G+Ie6P#db-KW$5qCg,PhNM-no<_YnH3Kbcp:o-rt!50=nY
%IG'9k9'[#d",KWG%+V(t\L,u#drO^=pA:-'SO_?hbs,NSV*hP9+5EpVq>0'`2lDB+Q_X55lM:/Zgsdf+O58P:`s!K^\,]4qNYW/c
%!\csKGe1QWN4Z%#>77&i)]T.p27/t@D]d8OKsUd8LZ6LDht&<hq'/,5f.??kmsjRA6Pt$@8%Vp"88%%Lei6i;r`X%GIf&p._FKEO
%hr9dgNU"s.j#gO$QBbiZcQAbprC7gQ'drM/7GeJu,Fl_KmZ'W7lKCJmNUaO1.((c&*7;bf$Yh<'*cLLqartZG&6d^.Xr0lpT/PVF
%s+XWJG&ubIMMU;4IO&>$EZPEaDBmn]*]d,9k0AZ*p[1JAI-rD`6u0OK#7UijUI1_^M1ag-Aje%8iP,d$T78?)bd3)O_npEmp%l^!
%q:B\[HfV_Q0/drCaK+A8`LbK8M'g#:p+fk-qW:`]3%'G'f6m#!D3PQO4)\GWbel7X`$?6&5rW3d`4>`/Yt)W0fZZ;,l,S?gAH5`G
%e))TlT$R3da^2/Z2PphRQ?o%f]>pMP\8&_:&V8AJGskW>p5jUFm5NT4U&+"t]t3rSa&mh4`tQkn_':&sF`,1[.`-QO9o9JEpBkQ*
%m]6E:7n6G[5%fH)m*#>&p*.FL]-gW5;-#B0q3!s$T%jXe#\77GWEh>;*3'gR3n;lSj\'A.T<^aM:?fsb8,#Upc2LdScF\&+HnF0(
%r6]YejVRaE]Bd)K_Y]6m!mglC\_QLPqen2V+MTo6AqiT[l[e2gpQ'O+E]`%.m-aY>)seJ1gmHr.]9Y7_[,1&;]s1VH&"c]0X4jo1
%Y8E<9ZkKXIV9lX!c9KWZrOdm9F6QEn:1P>.I`Zl90:.;E%]o-PH4I[F=Bb1KIIXuBBOT!aeTD/ffM\gX[VE!F3a0%7L:!E8CWBeN
%l\DY[+0:tamao8nHJbA7P'BmV,Ea_+Q]!LXO1rX!A`M(U;dM)D`f[.:1e)gJIO6!bpHVj"bGMN^VG.;m0oetM-7d0q9SW>MF],/^
%l`>?:r"4=XNUMRP-5.XP0\72Nqt^fTF#fFYIC&FK6)@V(pWfhf_Y`.qmcAf/`Wu(Vb?))\mD<(j+uk(]Gk1?l<\-AJ`td]Vld!s1
%jY'F<E1;"F`*VuK54A`VT'nkg2mRck[(G3(I?BdrDqrYX7pkCB!rAg=f"^C_bQfK]/<E%l_!M%?E5L?r)he$oNT8&$l;>l^<;8sU
%3X?C*4pAdVDXU)T3A9QsR2c.FQ_!.]E*$(;pREdN<#;r<3G[Ju%BApE`N^R&6(hWB>@2aNk!="QUAclc^O;Hn]md>8RbKo+/8`[L
%IWk;FHEEr'0\jH+H!K/$=FPoEa;u&s?+mZgi[tA&UZEOZ\A)B3](b-2nH;s[Dn,P.MD+*.k!PJ*\/2&ak9(Psh:7_dqe%Xs>$tD*
%\f6QgfEp6CckjJ@CEMZQXM;I+lNLR\@AH]fY[4lIQa[L2bE4G!hU/bqDQ\g#!ddRSk3[(7-S+kFYID?q>Je1N<.+`D;;BelMV<uh
%T3EC%N@XSnOn5Ta\hd/nec2poNb/_VJLdp!=6geuXUdIk8R'O.gSN5c(VN<LZ04-LCkcKb?5IG$p)/'FT!<L/Ki`u;cNXN*Q=?MV
%c)7*o+2P#W^'>mrra#%67;H'BR!dP`jd_]XaML>nak2g*pZH>27bJ9b@kj'PmbQj4cEF?:rU,(Q7,6M<24ncoiadlRhG1-*p9ma<
%la`RONL/t3q6oRS$cLWYf/q/^+#W\:cM:^l7GW2q+)cPrHOg=jl@%t\49/aHbPPQ1D!-rG+sE9#MkWF#L$/V6caFNbH2<2^Tqk*[
%`B2C_*98)XO'Ki&ilUNS9:kejpccGo.c`dcQ3urUHdD.FdC4/Qj7?N'Okc^M'R1U6<D%&GSq7R<ja24'<t>2XFgp0e;Ne(h)]Qf6
%,8r4sV;8KJZq;RFpj^\Gei"K%(Q2([c0+EM5HMR0L<9Y$\^AA2LY!Xkh]Al64ZV^VNB^u-qShf-D0^QkeMe1U`Hd4\#OH?-=V-K_
%_7]`<1WoM$Y_S>aGh@7gk(!1VH0nfc4.bp5MpK.[]>^W,&fQA0L&5q05UbN>cX6$$[>3l+oj+e8k9'9XX84ql4DPEH\:_i@PCj@`
%KA+G$1)7:0T>,9hQ0u:in(dfg/"X+/=V=of!YN!9^lG!=i,[A[;W6])3BW9b4.&`k6%2o"rk!)kc*5O?MORE)I.03[`Y6JE[i`1I
%UT;nh<p^G#cqgSohA-!s0,R@S(C(\Pq.P5n[6(FEi%/_obO+M=';G#0kNcnZg\92h.:"1n<-oUE#dj$J#PReL[?7e^?bT"3Tau<6
%70qEs-0$-!6JX5YRi>A>$!f2s(C&GR"_eKgcMhtn`o6l6Y*D'd;ZGAYE;uarcplBt4?-?pl,r^o$+BNb_4AX[?JMVV0\I]!+"SXM
%4daCtc(&B./%l.tqPnC3hfgdJ/?V3UJ!]8`>3P9,/l8&+f,M(>8hS0DP8><I-k$.roJtfJf'cP5+kC9D/sJ>VqPZ@H<gHP43XRa,
%FN*tF"YJVF[(d**qSRLSGiMn1H`28CJpiT-O_[pD>[k7af@KA(\\2%S='XJT?BYlKGsB),Zo?LZK8o/%p),'F4.XfS]D$^""8VqD
%Y>!pIlH."t#8#^@A*@r$>bhD(?lSb47X!:K#EHghiPsm&_aWMBQfY_tI'K&r52Cthq!pW@?HS;qqJ^kb;-Hd:oYFl.#A7C3FlINB
%??im:IH:[qC%m5rl:N8bao(IYpDC`ZH<e4oZ6js)=ep/hGg&E]ZGsKImW9]:DK^B:Y.mY6i5P9AK)Xo,]BZR^\,aD?(=]LZI_QF8
%k-M'0<Ls)YHe^eb/-P4o&$IM0_$OplX!`>16WuJ75d_XJ+"NV.9FV:=qlY;Ci/I,k9'`Atl21F3g3>?LC(qP\=[Qe/TWel7FD-2s
%ZF6=Y?Wr5i3ITBsOO9&&s6`b0?-_:q5EQB\)&T9KT=<*]2>6agkI7VcXRNlAp9Ae-#OECRf@O>u?]$LDY2'Of_?XkZQ7<D'elP)N
%!I*%=]r2fAhlEFB5Fd?D5&'3R)YRU<P!L0khQ:u<hVBctHspKM,I`.Uhi:X>Ea-EK#Nt$Dhh6$(-cK#Rh-F7MJ#]iQh]H]#R.TTh
%Brt>L&fE*t5Y$50271_E>nM/E5$33<mbBDBp'<qGF2?P5[FR7jpV/70+\8_94]jEgO*:,SAc6$.h1p2K(n4hq9`FQ+YJ/A8AEiFC
%rYb,QGt>d#Ec^K\)B*\!=5bBEnp'sA7fU_\Y'GEK%J61=AEiCrj+9s6\;^X&M739sr7WfPi8OPn:iW]9d;KP:#B-,bOF?!]qR84V
%IW62rF!@*g*eM4CCYbMh7^m=dM,`J9ro)QsnPT7)F`$CAbC%T@g;50Ye-CB<!U_K#KFa16q_l71b#^%1IJFjaJkt8K1Q2TCYO@(R
%n3='V%U7hJO#OetPr?9UIH/M_ZT"P(QJ]^srlX*aI/G=U9tBnQ=scf[DS3@'>A\4Vfn,dP?<F-fc)oTU_eJJhi!X@f*eIAKs0/d+
%hEB+fLZYld!qe3>Vn%FhpCZhBq#7Silj6),o+6GSl-TunL)rK\4^L-u;Z'dLInpZcTHO[B_$42`2LpA!>fhA!3*WR<(Uk<:_Z;\]
%1L>RB=.4W,GB:A<Q<FW:,8p,M8(97_[5X*V2XF71ik/-8s+(*eo,;2OAMWA"7i</tN>0X`XDCkMITsrPTAA0PI@^CSi/IG1Hu\=;
%;m6Z($QORth:d.ga&_'13<j6rP&ML/i.UB?Tq.qX[fAR=;Nq#pjkf/'S#FEbf\Y$8`qH,3'6%ptVUIhTU\aUC[.`WJqnDf:j5YRV
%oWSG-4i`5)p.Oi3XP-#ms6j[3(GNG\YXg^[,hd5T\(;;JgF\_Ope;BG:;,?8jl_D<bN!K@;%HEk`L_@c_?p5:/\/C'&M_pU2-\V;
%:@#bM[f1"3g\up;BuY$oQ7_IM0o?T#OmDZ=Bm%_EiD/ZX[+""0!q"4NS]281Xk:>'.aB3G>Bi+QGMN$,F+?,O44to"o,ks&<UGua
%g$m>aAD4KeChL[&ps06S3T;t5[-@1\6Ud/on?)tE"BX:Ab/Vd\\/&o-IT^U?`\T^@XUScC^=fL`]J0H?;te+iA<J]4nBh7t"0tpZ
%Gu?l+O53;hMGrM(%!d`N(br.%a;pEt/('$]dO7suH#l``g1_R/HKE:F5<+$F*ap79%)u?fTS)0E6^$CG;I9_W^F6eGX>]oBZTj!`
%a'Y8jNjh!D,Gj@6m)_a-BT/K@"620)eGPuB8pJP+'m7,4M59?/cs^CU53auQ?OT-Y^4"_IT@mtp&E/HhYUfcnYQ/E(W+fJK2"'dE
%Nm\",k#_L/5#s\(M7XnS>N+84E?t.&MsBRr*hrs@?:6&OQp"47UAQ!]a=:g3oWa^)^OM2Odq\UME9n3pB^A9LkiS$9LZ0pS#iu]F
%He0M:EfHuh,^Fn@@g@u8E8@[I3f1Ii/l!pQQO\INY!h7rfB#Vj3WXH1=6Cql,?e_BC.bU0Q^ueM@D+9RngCCtkgV8ICPRB2fN;%r
%QI+3!U=`FkrkVb;ij`-j2oZkJOqbUoqD>>[l3.j]Ud0/b#KdKe$#7l'k/2h,j6.>m*,HVkJ4@0<?c!hAL0L1H9<:V*Ob8]>Z'Brg
%$"\eWI]q2$<BA6AaBs+0:n@P5/RZoAj''$5B0kX#Rt-rufqH/2SRAGUGsP)NWH0k'%2oYu&>c<cN>i>.5pjX<8&?#IMde-QgSXt@
%d(23&n@.pDj-?m.j(&:%>%l!U(FF)V"JSsO>ZiJO?\3r*I4Y`];-[L38jaF/R,X%InQX.TehY'1_AI-o@k*+>l%1oN!3mgd"Z%]4
%=L$kO-:8PQU+!:d^?#AYM3DM(UVkiE%'U^JgJOu<MMtYHJ8J9pQ87DJ5V=nq_4Z"HK&`+nQu7VrWC7+JU;mt#RKt?S$EdQ!We5JI
%6'+GK1o2X'5`)UTdH>3&[/`%"7#uG^n2HR%0K>`*4K2g_K02ooeU\%Fe;9fGaug+;)V_KT!FCqBAk,@jdd0sqp%Dr%n0;[]muj_e
%A7;_9W[]!(7_f<ooT.n\rI:s]7O\t+[u^ZRKh@il79U42L=OL1eDW-,+n//1O*ZgGm$_]Hp3j"T=GkXr%$:%IeA.hIF82gK*le._
%GoDOV55mC(/mbj#T8o8c%6$YXHY%#HQB2(FCS".2oS#uL8_GN-/abt$2d=8F8qrZrK$lc\V&_kl2o/p27.^cBY+eFnhYm'??[_dc
%GVfqAaC'g"<bJ":d*kut]GX4\kqt!;eaRQWf<K/jWitL:%,Wa[1<ZPWAM1;F(CJBmZFXn`RBd0@Z7lGu1[Accb:J9!SosOr/K:qc
%FAIH%TU(noR&2B!BZadebCWb^TOh_P6T-Or&:Hnr![9?Ma']@\'*,XIApJoZWFnpqf81=Zk*^lg#W&ct`iKRK2!137Ha],lfl)QE
%7)R*W*_:k9.DU$A-jX4HSn4>j:t$RQoT(T'0Z:<!_XQMOf>rV>!tu\Vc\26)!&?OL;ntA8Jf"LraV@M\nYne?Hh6u=?=nX0oBq]5
%h[R9(.j"ch]qZ5g&iV;]]"t+]/7C$oDg46rhnA-tU,"`&GgYq5<sPCMY:B/oS:u8D]N(U3G?*j,p^?b(3#k7"IKD3Xb=(,CpcNcM
%6oM+7YtOW%&`r=<=kg9XqDEdPN!j(42TNrqAub3:oW2Z8As@-B@%\#aN<+62H7D0l!P-RbBKQ,J<3ZHt);uag\WV*JXK=35,&e-]
%&@W2tK["MCSma.d"oq"L]SNdH1[E\>'G5kH*b$:O)-P.+_j5qi6PZYRKSBq$66*jSKtr@iLC,rX0pK)-&-3/1'ho5/k`7.Eh`ET5
%ic)5elpe?K=TM![J"m+/5fLb5FT<>Yf^&&ClG[^DJOWW*of*BQicqPT,O.+GcNLocVgl1=oj!m;WY]iP^_G@R0OgPbP@#2H_pb<[
%Lgpe%"42%H.*l-7RZ%5P)l>=I/QrYa$rq*D;au!;ENWcU=U5f!Lr;`56JrQNO>kM/_RM"G"G!G17pJ;i1ae0=CSH.nK&CRo2g3ho
%#RJss"=EbW#SSBoZn,`7loik)+dSh3Kqo!A6EOpIQrAK&e,K%AMA(pfP\AZjXf+bq^aT5$GYA_ugK<#:Jcg.B:%ljQ`A(JG7eH(j
%QjgC^fW9TJH8U`5"MGSW8*eo+j][])=XH:?DE/-ehhC>"5%2`AS\K&[i.S>u/T]7dEGB/@1JB/c"^BnhgOoe#LbTf*Ltc4k#XRPX
%82Gh&EjTEu9NL6f1aFe785[_a@]AUh8qR83,9Vt#07rWuR&p-3C%.cFbQjC;!@gT)\kL9q2</)Ml5uh<[__#lI&#%260/@XC)R\3
%8&/Zc5=blDmD'^,"plbL5e:H-&U[*aACWn9K9M"-]a,&K</uJ;c*=&=`ku?;5=gE:Aj+1kkTpNb7mMf?7!6i^R&p,hBlF*S)hpt;
%"K=5&=i577.)%DiV<X\KJH=D[kTpO5BE2\u'\YID(]t*qNhG<iZr?fLO5kF&7>A(/)`<K]UU@%3;aAb2W\rgEJ'KGH]dcKK,-4m)
%"XFPM=u-Z^kDWm&CM4CaKL<q[J><3FCW=3iS5B]@<K*Y?=KuZL8/ab$AfU0`)9&7M`@+?3(!EJ)U]FG1`khYE;%.d\NFIEWB\=)]
%1k9>c37siZMF"G';3V>:Q;%BO"/se0KDdg*)"agF7>\6Xf`E'Y!uU#:"8ei_1$gbSM?+0[D$rU["Ulp$J>V*MH5Nm?7`6^d(fFR=
%`3cKtB`chrENhZ?(5#p.ZP[)O(cN0VNM'H6%ef&oA(YR1(dj6Lo;9C#)-#qA_>]s=%!koI@t:gni)H(#KPK=&fUjs[6*H/c$nt^U
%S-kIW:otZAqfCmSlnpV\+i^4<;dn)kWcd?0J'L:`]da4A^fW=4.SQ9u[;HuNc^DkI=2dQ3(b:=nU`qXO+iZ7@5ADI]?:,qT;@shZ
%&/Np:Y\FU1B$B>2he"6Yc-'k18"6Eh/2Kt'ehR]%bdOJNb6lU>ZBh=kI,R@lNs2Q6EQ'A*KOunEN=.\VAnEW,\U7BZ[iKac!\LHL
%AnII.O[KHIj'ZV=kjZuhO\Chn9IKPTGu5AH3\&,70.#nD%J(:rjK\sShR1Fh7t@2ndO\FL/F-srbNQJ0Wp:K03mb4p!!G(p@+,3K
%!@lg5E*t1]Cs?QpcXgisJ=*^j&@<NG"<%GM0`Vj'jT2%:M:P)l('joC'ng6+#dtKm/:^-&5aSRQ15*,$`4+^%2tcdt;4gm*in-Bo
%Q4/h)YJtTF+;Vk:"CIA[]]p'g#JaDL4d$W!Hj!f?rGtJRFj8;QFnLMMSH$0Y])le%W_[_@bM&m",8pStAR-g\-ZhVmnG&j^A;UI;
%5gKiT8=*0o=>jMjdqon#Tn+O0*(-TCJI6qm$ioR80T`OnXDDku5R6uL1#,\CoL$uEUQ\*e[BbhSfdb^n<-'em*NR'I*+jBFn[nmf
%*C;""mO%,V%I:5i%T^HCj&l9_4E^j,pqZ7.kt1[iPZu@F-r=J;O=bGsK(/)eabU\o2a[fGAiBGB884Y",K0e;A>:$d79TorZ5AXK
%FPNAGfLj8+>kPDP!ItYn3a.hI=q6)(1$8&b<e[i\%8%[2#<XYDF&[Sh<Xoh%ngd*YU'0J<*Q3aY4/cp!X'UbO`UgAhk["s<J3RWQ
%^J7$',YN2PKg6@u3)RK&&usq38'F[Vg=[W.WN(iL7g0E:W`Y_PNdc[3X;sZ0*,ak+'7T$'^ZiN>69!83jE?&#p08aL&E@JZUHm!P
%eBu*\@7!K*#%E-urSJ^RlF8"YYao3;*1_!tMGb[m&7W0sirU=2&.b<?4eNa:Zt0hi,VVQE3XfHi=C>80:Qj_sNa'\_Os5Gh;F$*Z
%a*".Z`rj6EUIi#<oRcK3P,9J*R\<l3f4"mJi`7f;0pD'E"oVnGN'N]N6laMioN('r%FYs#!=0/d-tm0T;\NW<>G,aCA/hDDJ>b)J
%2K^rV&:>MI'!:-'3rgs5'+e@=Vj_5K174F4VW%$5-Fcs*#Rf9'"VJ/:Y(Z(CgBO:#2eT]AUnO*NIZ<8nKcO-8F][r$,A%JrL-4@*
%i"2s-$BQC]dp4V)&9qi$@O%S#WD-j-&aV$&;3age?nMV3T#p<@0`rmF,74e"Q'iX:82KVKTi[ot)J0%2Xr)He_DX+u)A=P>&#;d9
%_fH8AoXI7,Bf'p)%\HKo'/Dq*">a:UMO,^s%N:B[TeT"]MP?r*:0ksITMW"mUDHKAZ["8MX;HQ+E=\a(Sc[noATOMZ%+eNA"fKku
%4BY[JS*?>XnhHF5J>EM6F^Wi.,UbN,/Qr]VB!rXm%N'"qk$YYX'"/ZD0-%0GLnTC%Nm4a23i.(bMT#]A`&ItN1Xce3$C>I'#$CrL
%.M/.UE0H'-1u/IIg(m!DQo4t14=RLs;M8U<!CK:B&BtpJO3JYr(_5TnkcP[lY!FcP!.eW.IGi)VW5\f=eEI+@8/3;>RO'F%cm.Si
%Qm%'5!&HS"g7B[#S0&BrLgs>M#fRD'4g5/<nI%h'?t+ip5Wrno()#k^mK'*qi^,YW(ab+])Fmj7&$Cs3SGBU*,>5iW);G5@Bb:K8
%L8I4hXF#\7W5VU1kb`#bQV'm&@OI\7L10<d.ngp+6q8:1k0/!JL`fMn%"OeA9>.9FBs:l5W'sUU3+.aYbY"`gK6Zb9@e+iT=W3^2
%O^aXk8dNrL5+l(XM?0o&LC^*!aG)]G%2UV6opB8=LcbntSHr+_9_6?f%$"aa#M\IC>6=sI!.djh:m.c"Cd,Y1d>:i?i<-0T6SIYI
%>`Ff&iL(aLX6DYe43KGbL6s*8!R/E>]NWOupm[^mC%-X!L;PNVd%t7QYfYs^TqWnuJTPm=9i_r>Fc7'.%Q-%N;nu$2^C#>+.ELQe
%9>kfGU+Qk:#De+DW=6(_829fXVA98W1"/sg632+sJKF24G:=)%7SP!i30)P16mgH!TY;eeTFA71'XQI8:VsQXfo-J]W@W0M,>9o<
%aD;(Q$r<FkTI:7tE&P>lMa_6aMmM):B!VlOfc?U-Y)r[&2FC#KR-J4J!-Of!R$c%KNY.]%d%0T-"&mmlObc\B(YpB[N_8jd;]1sq
%1Bg=.dTo#+b/@&mN_X02F[MS>Ol<%64?S.VW=3<Ng>Gp?JAG4)Uc43*AK]NBXb!J<i\?M8<;-(gX"m21nI;BOTHB`H*_mP*SB8\]
%_i;rP"R:*-:!R9YPHBTR3<Y#bX"]tK@68M<K\]'DQ,G/BHNN_VH3WE1c=.VYN*DQV^aWkaAhhGg4#i.\n*%fGZWJ)!0oH9lE"[U5
%"QgU`gTJLCl@n_f2*@0UJ_W`cKl,(Bg`Vc(jGFL8BJ/%.T"8SeV<.D)m0aKfG`E+s;rIq8,QM#@AuM*aG`9\F^j+_0l1+6YD61,"
%)Z!ePaQfYbOUpgJ^t.G\DIlOG7$8*!p+_3!`A!GtEWDh\ghh+TLI618#lHhtCBA2>:k`.h"@-'7]L39_<.od_(\ih,#h1O[n3_&Z
%mfJ$B\SLS79G\Ch49fn5_$)r</!/qO(h"6f&NR#\;V.HfeH?I!R3S(4'_?9DSshEf6./KLG$>J$Cm0m;!>+$V)2UGF*n(aq?N:+V
%ed<rG#GU;n'hq?]Rg*_&KV5\G5l2c-56hb+d?UI/Wu@%>RAY+OdqphfVX5go+J<oe[?uduj%Kr&/KUfGVMiI3\=.%RA\GAhD0463
%#ldSddK5k6X,dB=="H;ii-@^n'Zc?aiC)*FiKd\m<ncZac*ho/_QY%^SUc@aZo[-VK3C%LG"`!;Q8AgI0X,<9'N/QEc<L[D,!gn=
%M);rD/]8R*+o4YLH(NuZETCFBF_9Sp1gIF*_gI=Q:<,9&s$Y^+p1OV9(3esS/]7(2:M"T:JNXp%&;?jQ!.o`'gl\rPMfVVun!s,B
%mQI-B`fO?7Fh5W6f#B+l:cCq3^gqR=>GY.]"GInB%q.1o":N_D[(1q7+YKu\n1a>I2*q_t+tKEURqj71OMoN("!*gj0YejUFbM=Q
%HBsVqWU$u0!1hG0g\!*h^?8t<L<>:^S:!]$'LAQ*$nssMq7o?f/`pMW_A5k6>bVX*Qhj%K/Jm($nK,M-$b&o,Eforl+Q3S25[4W"
%3I=1n(+.H<[7=2V:>cHd`([muTHK:5$[Z9;#pNj_9amsK#41@(T7a"k=@5"PH:6oMY)8SdT)eV:5oah57kJQd067P?6II[q6?9I5
%0S(sn7I-M9B:uSf%YM[&'-#dq@(86X%@Ld4$`6?KN#Z['n9!0L\q>uWHqhf('F4nt3]"<NK2C/2-:qjc3g1rjA(iMqh6%EtFbbFa
%,D`h]`hA4X3$bc"3&G."0<6$rk)L._-A>-W?W%\VZ*>Q@Yrck*&V32?VOB(ECbRks#0pLH.tJ&KH4E0nDP0QJ[mdb\<MhJ\[=hJ1
%pcICdaKaiJ$_cL9M6c'6)S2_EkIV38l;>?Pm/l+h5RY@fE#WUB8LE9L"Gd(S9F6C!MU45kVbiDKm(1U[_]]0'nHe)n>XEZTTD3X@
%EsglG]]/EhDFN8Vpr2?.LgqDebd09Da,,,bRHr-[;Zlpcd5hnd)O<i_"AB:!-(t9ibNO[tn]BkVi1\U$QDa9>!6M]!gi_B_@r"FF
%cZ/b],(r"ekEU)Y\A:[F[[_Td+\(H<E3U&l>MtVY67p@tC=hOYDou<^E6fN5LhIi*+WGNsKZ-"Tmns-kEE=:Nkcq\u)oIBq:""90
%d\Zdp%#)NVALS+0*)e(;Up(TlZ&IeM36YR_c7j=7m>(&iF(q#X*<./t,<1G"Z.p3[X&E&*LQtqA"2DPNBc'2oh<:t%Zo3`&Tao5s
%^dPLp",(A)$t0U(Q78Au;q/eH49HCjFQ*kq3a,o;k0O/F`$c0(K*N8MhH8CK'CZiQ:q"Gr[LqS7#f7Q$T^QHr#?nVoE!(p9UNAoD
%AseM^,]T/7G3e-"%k7jbS2$=\(fqtD367jhC`sM7eTJUn&4P-e,aX0.efGY5>+l1_@59btbeNG)mYR,0DWH7tcWL)@S46)a2QsCO
%lZ4#a5E=W+3F%d."5C>Q(JGDH=G'*!i6W,s!a+"5Cj'(<!,V0-m1#uM*?u5MBLH),Z:J4C*&BTJE")fA@oL8Y.\%e;:I/C'%OOl9
%EK_:SHU]-B`lnW%"Esp6L.iUS>)NS$ZS^nG`)%'oC[hNPGHXfJ3bBkh#erRVM!O^?+$J[%P<-osPc4joOYMX3WLsGiKL&,*B2J;*
%\&$*176'Z/TdE1niY"<QC>ff2J_P5`3LUkIkm[ml9or;oFM7s>)T`T54Fe>4'l>oq,U:"K/:Lt530r\"MV2."m<h>(Jih_a4b(\t
%K!,K%'B;6.Fthr(gZ0K4n%uk_0Umo:@D3]9!XcVLcn^S4XHSE!+XX?\]BC4>E+3)P_Uj;QU?l?5$k$NRKXLrm\>THI!,\K@&9\1s
%ko)ejMYse$;gNhWNVR2s"Zq\db#NEmV?^UU+0.h?LBrn=[0I!g?[J0Eo(<4pCL;RiYkI_pM`Wo9_o:Td*O*AnZs#..%59rRkDJJ^
%C&A*d!B/*Iq1,udK?++F/e?O+!alTRmT"PD^p(p1i.*o1-#aPU4.liQR&M6ua%)jR@M$d^Tu7=4oEl-JR:5eWAR$uhaLJ0$TtD%C
%(;r(C"WIs21EGICS"E$?]%".0QQm*Z/4&$@'3sXe'\d2n._)H)nP>)XL:>BHaenZ&.=o>5LhN'7LLtK[F2a5mT:ft1<akF+aR`i<
%QE&s$7@H_+-]i3jfV!o(J9LM&%!]El'IO\FL"DOtSd;j/C^@fURaMe9</Q&/pba@Nk7XpH,<T=R>q+amF%n[2b1DuEdAl7366==l
%o!8Knj449SO[U30/WPRGVg8caZGN@GU5\O@JPj9"3C,P_+uCGo]JZ%WKnJ,q62_^HplNuZSpS>$$SZSd3js^/gggUSgZ@1!.JXGN
%A[HlLT]#/R('q4J$i<Ek)l=d%HGra=i9SgKFg"FicX%.0Mr8AL4PC#Cb6<kd6A=>h10SS2^$2,Ub-$;+g:1N@\oojH-q;3JP!e74
%9QWY-ES$E!p]:kTFBfHt*Z_gl("3FL\!%$F\\0=+_:6lP,*p+-YQ\]rK%M6,UD(JqU/W-XKiS=`Rp)b<I<rpB0J74(WjP)*\.7O?
%Ku%u_&Cb5OpKfu9MM<8-O00m7!.eJ7ZOo$dVc,SX<#tClEc=5oXgV=ihekjj-PWfKGX<!d`<`*Q1,P%Z_$b@`+Dh?LLu[,gUfRdW
%g.XO-Zseh)aL#&CP^*u2=K$=]"5$G9\]T!&#43)!'KJ+0\1sI(-d3\oK8BdtpLp&0";SH<+J:&JD-\d3Ljf:+`G(+9e+<bK6pTZH
%iI&;E*]#u"I,,Col+LkmO`50@2bF/?l\uS(@U=8S\-X5u/+2Y,F0rq]/'Jrp+(:kX^g'(,J7`DMG!4*d&:j9YVFBqjILIG>'fARK
%=9is3`)fJnP6]q5js:rKZ/J-E.USAq9j9k3h1ZucFH.I_#U5T>[#?5!8)kPSd+bcUNXVL'"=Sk,M[o*(&VTodBcCMJ]SOVuMPo%.
%bH8j)/,\DrCN>B;4'e1cg^UnKfDb*(\HI\"s.^GnH.J;M/O;;Ref'HeFuldsdLMGA%?Zj,++RPi`-7S<%aLs)Kf$D<rEYb^h!.-K
%JTCU*"W5-QptW)1V=)lYpF;"fVJb"Nh6,-Ag"b4c2Rl]pdgRm."Z0&2?`65o&!#:46l\H67YTeQH?@fgj(Fr/OD[Q"YT^f/V3(&O
%*/=mY&;6p6Qdtj<ou-pTe\sGA&4S#_&3q2ZK*JRg:bQtt.<&NK$P2$maIj,g/@B@,3!ScN&Ak.a1)p<+d4MCa':HnB9\@(9VgL'Z
%';?Wn"jRdAYQP;"3F+pV8UAb]+O:C7%oN98_]'1.=)8_6P:)#DXqQM'idFR,)`,T9naQG`LKL2i18,[[8<n*_j$kCIB&Nb=O#LX\
%G%OiY$V?$er#s8#%JpY#.W!970-dB!(iVXdA`D44jlls[Cilr!.=mTj.e52Dg.t$CNS$?7"<(n3nF5t=,X\XS":&/4@bAqJe[67>
%pJbFVjZKeg.F\(onTEKE_,:^%eX\0kAGq<tp_q9k1%WIG0S]I%H0cNd*.DlH6<k%&[fJf()5a@JpF8S106<f(khZ>;QQR29&$gTe
%_QaXk*s<!"4>OqX\':[\)=T&FVi2:6K:ZXV1@B0WF9-BJ]4Z+Vb9[65#$7$eKI!A9SLV4q,qOf!Ld#1u<%o5*O*Goe`Y1lU085#[
%pE;^2B7^>0iNFcKRiC,I0;s`bX(r*C,7lS$2eT%+e@*En'Z3gKr`,piOtV\)NsPAm!qK"Lm.]7jJomfD7"t@k,V4?)q&880.h2n[
%'RCLV;7WG-N=&_)L2R=1No4.\_qslOF^04(oGW>CM2cPC"ebNt#qSSsGf!<jTi^]CJ;'8<s#k$"_fN]m3\9&ScL5/]bQ7>1Xb$UX
%<hUi]]Aku`_ZjS$CAeaoka>]Q"pr04#!Dlq11$I3R[bKKD+1*,*#k6:Pn0QNiBjH`0HlD.',BTUIK23o&R]Q\4)X8k1h.L>)e_Wj
%U*Gn<Rr585d2Ag9CJ!qBkkom4'=S%$V-fEk(^Vao5[37bXH_9#Ys>.3&2JRZXuni<BLg7#5daTp3t=0q;(u(EXD9LEX+^0UJ7TI/
%M6lg$W>5_<Wh4rQ5K[:doj!.Ic0/](^dqs[F"TX1Y>3kT=BPCFLjt4(T"-WL-jq=T_EtV*RQ3W@/5W<0i;]MHeEO+=4_oUua#=Lg
%dXpBm!Qu(J``),5[<<N@XF-`P)Qn_a@jpV1-R7j[pUkcV>jt,^*BanTQ=F,IMf[k,!?QM&?fRT83#@1-B(/6)#q\Z@8d@rrn^+Lo
%P>E)ZiLf$GI++8E3+@*8L2S5^SkO*T:fsKcU4,,"c&e9:6NWhbUhbd.#A&rN*UbhXmGc?$L8.4F(,uXpW`hdFY([s6-cf$g+>+hr
%"Z2h#]m,GMh?aa>1(kd4>O_1oV3hQ-6W9H]+ehK3#D<1bO'g#+3)D$-\jLau!3r3L&H4nYiP4)]*3Jrp`*kH;j)%j6&YOj:+<tMp
%A%5Wo=0qD'W>&G@&K)G"ne;kW[4'PL@8d1poGB,^&^]J+@+[[*8F_/epCY>SYp'$p#aqLK".IJg!.Gl=$T_T"K)/$Ikc,DIJ,o'+
%_5/YX3<L;;n4If:?j=h5#sahG7!Ls.Ob;7j9.^>=`l1C$TV2A$HP;n_0YH,fp=.*%Nt(+Udf?;=e,\Vq`eM"W2+1to_=kkq:F(m`
%&mrA1`5edoD^_#&.<[BF_b1X4@"JPJ),_FU0ck@c@L&7^d<+B\L2auP35Ad@('4Jp1NW>VAg*8p_ETYr"YGE>fjU-eglk!UVeErE
%nB*Fa,XI1u!;/[cJl3aTU8;9*X!>mg#f")<i"0/T[L%nIBTX-UUM:p=o]BNe2#(oIpuEQ(,e]-q-=?ldc[<7FhoI,92t2,G$+&_<
%p-CJA7.^]V6D3H2h#_"Xi0;V4PFsuDi1hK8$;(JH#;$CIGA.u\7\lF&Sa^M/S7IAJoCosdTZ8oBDCDCTG[/b-4A_la5L1Te84]!e
%:#bmg#!`i25hnmA2PiZ,O'"+>>'R4Y7)hMk/j34-p*_(\0gmQ@(*YE#)Q#6T[j*0lOm5X+b$?I2b'M[t4&V@R\suUW%tkhu4raW=
%\E\\XM^ZMB7c<nN`5F`Pk]DutN":IX/e[+W-:S!R_5i_)@X8Ti,/g:pSp9dua\<?K%?aHddTIrNi#3n-.!OYh@[5KZfBcb_'G\Gk
%U=O-%C#[PUD&kPPk!,N+goI`>DROERS(hml$LJBYB^[nTB*dH2D3(<76AWVeK'TG.XCrQK])ZLGF0QRs/.=HI\9JfCT(f,T;hUO$
%7U<s=#_^3f%,HtR&d3,NZ`,B@kC:[m@h)i!9@`P-'BH,;D`*/%a/aEd:n:3DQ.-G]$8VY`5B,*%12_+[qXE"'D$Z#Ah:%'eU782D
%@o+?dh>6;S#i1i+&CV8'kh$`UW%jj_#Id3RabDHoY_itsmq+rnh2k:!.3+p^a#6&4EM/;2(.,M2!lV@SFqirUn1$o^',Ba9/-&k$
%D4APn,,rDj\nltK,'UNslC'#Ge4j-IBt#]L^_Ff/0gVO1#WsR,U`KX*lZ+,hSPI-T5#Vm&;&92/9/I5I>ED61bnMMPJ>b55j6_e!
%Qo5m#:(UJ,BNY].\X8,HmdL8uO=Z&%Gi'W5H$$BD!XVSq!YcGE+b\F@-ml8o/&3.$*8FSO-Tu*2];>$p4<iG9RS@uLG!LS1qcaJt
%HDVYfSPKr)'K/(R-TI'/MrF'"#]WDfE!)fU-PHRW/-MUL1CB&VGR0*mX9&[Z%=!9V1F/iFdfQOJYhN-9/gssoLCX/J)<L.8Y,HQ?
%N#He.3Gef7pn-[KN@<YmB5i[2JoobAkD>(<k:?WOSg2&R+qAMuDr(S$BYPY69=jhb;i'"-2d?i7?'j;]RlC]A-/JNUZU8do^i]A<
%788Z6NOpMp'-r9?`W^JlN+Nihk&Snn^JS(bS>`ZNLKP($`obd5QG]3qdS"qRKJK?/.E!!$"K4,1AMn2.3<F0c3WUYNbj4eSc6tK.
%dfJQbFF[%K,Cm]NN3T-LAM9nd)JHc0"!JHE3"PacEV2!'$o;3,DX`O\6cC1`+a\buJZK[UQGFsWc%^'@=4VNe^q+J0KYkeq:_D\A
%!<In/L.`o,d=MamM2\#YCd$U3(0X@A#A?2NE8?5Y.@7ZlfEQ4%,"J%RVfh5:"i_^O_[.$G&2Q*$ZnC1t6e9Jt*W.tk8CT<Al6]8:
%"VT+)"_c:Q+p?7QA6^K.bqX&!X!7NodQgtoT65C[JajPEFduqo#BHSuQ;04q`5Q4$#gmM*31]Rk8SJ*.WAPZ^O]\!ZjL9ti9-T%l
%0f3,cC)ugO3j]q6EGPYa3);kfM423eA="og+;pi1-1KP@4eb5OJrSbDBRHuBSk^G`)F(mZG<5g6!@FM"[on6>JcL1TP5o^H5-JRf
%>Wq#2?aTiBT.1.1/a*2QoILI`%q$O$G/X<p7M0$A6LiFJArN`phD2h!?k[g1fGZ\Vd1#0RRY<hCE0X#84ZT2+6;8R&4FFKk#Z.*J
%LR&b]4!luk?kA%/U,=a.W:S28$"u-i)BkCo+=;!CUdpPaU!tKi_(3qDBMstgo$M^2+a&IbjM:Etb8"9d`H4BgX_O!$6#R).!61K`
%\Z:Ap3m`L1"Zte$MRl<A*A8F!LBKH5VfQ'.LLj$2o'O`0`Qkof2J4)U%_V6H0:?EoF-"9`PTUFc1^Y1.m2OI8Y.2E8;(BEo$3qZ+
%6\m%JTjdM#7%gLeZUneN&>Jd+*-J/LAcUUJ&T*o<+lbso>ND4T]HXXWN,SdMT[aGSU4hJK&47!o&Kr4+Qh\(rbAlGF+R)>q>P?*R
%iVW4+;%raHK]q4gZaa6&i!'H&&4lOm,#AM#:#sq^(ne-G2#2gjn%!7bV#Y$92i!?=QN/bf/Iof&+EUBlY=OSQjQgNiq]A>cjkcYj
%&Ma-L3cE*tWutY\!)LUc\n1JB%]L0i>W/I#c^l9'(1XPCp#.U[jN_jrPnSGPi"R(TUcPIhnhV9=T5E$X$$:X4L/KbO#4u%l5/Wc(
%6nfhF=9^R7p=H"QcL@]>k"p;X&<mMLo_ZVb4H%(;A&ok(g?VWS]T:c4Qb[1n,23T753G4dV_\q%OLu`inS$#&[n4YbWsM,<@=coH
%W*G2_@'&j60.el>9OZ;$QfXoIUQ)/c;0Y4XKBeM)d:J5PO/qdiR<_UP.Y8m]EILNH&TtY#K*oi(l;S1>BuUD7!Ktf+kT1$b5)*sB
%12o$k7f_el$e[R:5TJ=gTU=]>NYj+-:Z37L:]t'-LWlL7a95r@?s/$mU^(ogI_Z=N&4.n,#Vj.!,3qg%,?#.*]a)bb&34tk4o2d(
%I^se.UItt6$:Jk86D2M=,!pAm_g$QSB%YH@V]k-Gb^Gmo\5J=qf*Y(+U.TEM%al)I\@GK\P3@L$%PYtd1,4P.PR;]9<N7E/C.B9(
%Umm7`j$ZpH,/TRJ'-AZbbXVd##Sl?MV*Y1Vetn\+og=m@e2!DZi:Ud,#c/2Jm>`/K:Snd^T"qR(+h2XE[7EYu61.!Za8n)B#`Ap$
%C]VpH!DtU!#1&%N9"D(d0C\I`adkrHQ8;RZ^"h%m-79%>#8jY;Vp-GKJCk]q#L5<CZ#"B!7R<[p*AF$L\%t$^J(k2!"F0=GRS4:E
%^]QAt6S3p?bVb!B,7HcUieAc-,'4(&LsfO0BKBFPbC]'T8OSp]GEtf4"9GiCb))2BcfdWY,?1_&-Ol1\U5-c?),E"\U_;l/#pn*!
%-d*pT'Yu9!HVL;9>oDL,.KNm!`Bc6gO\5+fJ1`0*k,3p6Ma/W\#+jlG@QZ!SRs@+;U!l)=4D>qd/-saA@=%0h.bg6f/nPSI"(9T<
%I7%ZLS&pPB,r5dd_\!Ps%"3P/e0500D"-:)iO^4o8(OV-0NmC-/I<Ud=/md481m105t(6S&_e&h("'R*4:HcP>5b74Houjr!Wn2j
%[(abR(Go&IBlI\KL'SkL-RDm4ZY/J>6#]8_f6-LYdFeWVjnH\*`"A<d(8hM]3R^Ak7:bQ->pF?."8um&"[HCVM:;YTn/P`Uia?_U
%J\O=C7kUcnj!>=74K47\!ucTKTD9h#f>&p1&E7CJF.adPkYVWfHHZrb$PIEkOrkc:%[1:l\>6)HEb-<&]SnMDTNAsB'WucJY**qF
%/%Z\F%'X,,5@10Vq$Vq+Y/h\EGh>ng-kHC/"h7SSm;\=T1s0oa'S[4.APt"F:8)_f?fkE!IX_RJ1[$s`(9(J`b_q7Pr8];Nr!cNL
%(4j4D6;.JWL,'5F;TKcYGi41K/l]R$0.J=lfC2)YO*LrB81G&>nYDiII8HfN]8>\Z;:=]\I%CO0cdEA:`t2RkBa@[4`R3j@hkUpX
%>];E%7`d<O6'02(C&2c]fY!O>GB*1]GXUlbSlf^5`JZ>SA24eU8J4s,2p-%i0QdkF*=e5+WSeK<1m&3B=4@euF1gEPP!9N['Rq;0
%ijHf:muY-p-JmNkB82AYP#DY*$.Tp\Bu3i`KgID#kcj%4-"5e)1`T_k[^16gPY3Z>L6rqb.Lq-Yb;Bub@PMJNYh5V8<.^"#H,Se(
%+V2_W$nYaI@)WQEW$MW,W3?Y/Oj^d&!k!;.If>];;cKPS1_E!E\qlqHA?9cF5S4-U]o12q0o?ni*g,HW\Xom8ffZSB[MCZ%9G^JZ
%d#J2?LP)48EX:Lb.A@I;M<q0n$%IVqL/;kNY5)LV'<LXX,7&p,T%nq&`"YC%GX@)/+a^kn/^l[S:_,tDj&5)+LKI1?aFH?)f4kX\
%M+9q+`RPSZ78J!!-)1_b4![fT]g@8u4bH2NVT7^EEB'K$AhXVoU3'c@+G"4/+U$h&SKeP&7?IkLj:uQ3[WS"X&7M0Ro`>1WDYMO>
%0S9mq-6O#mM)^PD;nuV3X:s(%ZaLR0i[q+&FJ/PHHB<(X=GVJ3+V&^5K[7cYqbu9_&N_6M83:+ufl:\VLGH3s,k4-#MC?L2E[<[V
%A4i!UojT*2BKP^J2I]">_3.aZn^R[4N%>TH$qPB'&]5klJ@P.%2G>D>'`^'6-MNgj;L$-L6h!JgV5Xo`0:4g`,Kr;NXt8d!/r0Z4
%KKneLUI'2DgltHOL*e-JbHQXec-YOF-5:I#a1V_2\@,Yh69SVIMTkPmd)2[cEc)$OFGBt^]#+e80`ooW&KoF&/uY@Y9DFZ(om):R
%Nsk"6W4\_@")Qa6@IPhEjVe20ku>nC9fr8j8!/;.6m+i%9+g*l!ob@"0lO&7Ga-&lOmY%g&LY\NRooeX*]jF>DEY@7ro#]sd6"L:
%;5f4P+-TK23]IcS']Te@>TWU#]!-nJ&D:'GPXRt'C&sX'E;_1p869PqdY(N\35C^TJ,i5.SM\^7(;)Ys+QP^0`3r*(O'\96UiUOP
%hDR@FF^8MdF];<s0V3e[r8l!&#1''kN<Lq7e3."q'')N:ZJgZ5,EZaRl!fe=6AWb^)*E9MU4<f(7l!+T(cq8G/l.RR,%HK3ktkQS
%DG[3e,ST"-9a]quZdEID6;^85LAM4s>;1cA1W3BT%R7WrR:kGZ#1%-ol8:9QK-icGQOpX.iKpb.)"q&a,/DR/)01.74erobC=q3s
%ouVqo[mBI8c353]'8Kl830/.50cb@B@t!,l=#e3*Nq99+SaTtl4jK$/G4p[nJsa&V.(gB,6&#H+_Q^LP-GqV^Y!W72/,!th@qYq_
%::$Y93':PXVfg5MO(sJQ71uY>L36Cql5J5m0j683=Us]G@D*V`Sqj`KTV@K)#=CsjaK1?*4e[EF[UHG<DV-'AgWVY+3c'A&NHC[>
%+#<UG5!b.j0^N-Tp`QiE8t87)m.80,7`-:sYa6*fM[_[___0cLj#?$?%XX:iI\rh?A<*rhq]V]5c(X32>`(?bOZK"K*KcO+:>HDX
%G@Rtp_o^osKQ:>OGq_6ASA62.kDi,h%qa$qoBJ'ppYcg7>UFqKh]K0M0UPLh9/m@C,_f56UNTm4QSiZ(pGF!(Z#h-7)H)L^*,6="
%&q=`Qi<0M?UW8i[[.0J82tE?Gb<:@U"eNPe$%\btD8p4U7<_qSbFgK5UsnlUGpGHFHjISJ)T6MhUsfQXHQlbNMn6qejD<A#)2^$I
%$G5J)@_iQla-DJ92Q7(r2ln!dGYFT-!d$dWpQ>cP(r"uIrG\5c$9s$nK4$Go-=@O>2pAt3@P5tE;\$mE9p0TnOs";_&>Jd@UZg4s
%`4Vke>q_S&13l<nEt*>)d2"?1nquBP-p0Qa0M0MKN/-r+[/YB#(rcNB!,&#7SV=4E;G?GF`I2a9f)`D+800JE`Z#B64NNe)g1jN^
%rLGY'#+t.e#0S]?XN:kRXpAETNE[pQ<uS-HY&#l9Z7pb,"+u#[gBE?[Th"047/dBj#2aXm>&lKm2StDVhrg&'P/TgtZhY2-DH(VX
%+F^Af/"U)o$Z5E&#6%.L6>/krr5sm+Wl>dC/P3lg#1;,+AU,F(*`R7]5C;kMX%BU%LV4YbJ*<4"8A[0a]N&Q8:Igm-1d8a[$k>*J
%N.J3E8i1i9g%$!drqF^G+sJ[IA^0RIh*&,q!PsEECVIqaA7f@_>_>WXH]\bokXheq!>`V39?Lsk^7o[gg.[3R9BqT@&>=[$qQkj>
%FHK?,01`o^5[((]3\n8met!f(n2MR%X&i?W[-B<n;P;N6aKS`o&fDE"gHZh]FW`fb`=3,iPBc(%WD=KgH-q]p@^rF^Si?g16j=_r
%*FB4K.)F+:M3@L.CjSsD#[LO)lq:fjJq&Uo`XrVM^P8RTADKf2Trl_B7HJ15%mB9'CBl*FR,-;`k^Y<Rhmog@FJT,;[T#Dl&i=2[
%E['V\9bFS?c9n86`>(>:)M5^#>W1N<qC<qB["l63cq@tLa"j5-hKd[I^kMa(ccgl\',cor3*r*.?o(.&H#]i5GU/*5$P()6:f8FM
%iOo5tT4iT_OY.b23N'\,Rq>k-J'I6t`UmJ-GUM?M75_Q]$m+\BRC($qXb0&L'hn:NRl611/Mg33)dcUoHfq3WM2-C[*?2pT],73V
%7^;Nb=,(IeUH3WB$GiGc.(CnB#E(8;^<#DaX)\tDU6=>dO(TbEH\^Z1@YiNFB$.18/me%kcDL$!gk-a7[b9+4:?_0k$rPR5?>)\*
%<_B#&b5ZeRiB])76I]Jtna@_E23;-aZ+f]`ou=gW+@$diEPJLC[SG"qU'kio+4)4@'#!DF)BFM`i__5r$Wq6#TAV5hfAH@/fIm@D
%qUtK.aS>30VCc8lKs_Q33m0X<!=7"ZH'Q/PNVCd=B-OU4SsfO%k.BB/+SF,0GZ3PI(Fp/GRKj7nFE$f:VZ\=NNBPQfelNrcc_-as
%3t%=hbA`OQV/DRF$!9`$P33[J([i)AVC_]K0ZtHu>XL$WPsQl=#)^V=^gZjA9:>%eB3<t4MOK.NdtEQ[,ol$gfChYg?ZuUOe3Grf
%K99'a_YQ\2OmM";9$t:l%p8SLY3'f&D5g_rHS\9nA%JL6Q2<"nM/5K1$L4ES?%NDR@Y_/b,"kg@GVI3%;\'3k#%qM\7!P'8n"H+(
%M]#`*aX>?L&fqoffVs,l_nUDW&oe%Iatr?AE(7X^6qX7R[I?aMnJKNhrE7WkKPhc4Im]i+OV/tD"[G3+))cM;\/P<_&'/LCn9TS\
%>HS6Y?k0/BieYbcU([#2&^KN02>%s$Jt\!;Xtk&+Dh-$hQ#Ee8a9Hpo_/3*J+5sP6%]-4V#E@ksjcmItL[9@3@2BH.Kkgdd=Rjmp
%CfLufAKM5`W5f6o-A*S<#UC"\Pf-eYIceRKJHuu*Oe.jjG!_F_ol4>^VtW8?\IbU8f)[.mN$5-,E7UC"&bn6r=)f)8B::aM"@^fT
%FJih/d3S#^OUnM*lTTHL-]3gm@9Vs/P2NPqr2K<!i=PBM/qhPr_BB`PS)K#u`@nmbK)kF<T-&_+-fn3Q;h3[bGqDN8_0G&mPXKMR
%]gu0tPAA5Dj68R5ks[_DNhk&(8L&Nkn`>@QU]/D/5@E;R&BSW3KVtId0o?k@Cp&I)\Yp`Q.%u)k`>'KE'$H<.dPso`Aju/#(ZVj%
%aEX(rEZMm"+EmfGRd4V'72#:0VD%9Vd0,:R2QQjjP\^j.R.#@E#]C%?1;Whp)\l9d/NEp\ju7![+-`puT<;%_D#JpcJB3pLI"UoZ
%6td582H7p77$6k1H,;>dV'r)im8m6pK#<IEHUX[`aE(i"MV(p)s6uaKH(kI1`DDKIK7CmD/ZA@k(Y!4\W=DuU*d[gBe*tf[2p64q
%r[[PSdp%c^EPZ#%?E,i7D637dS%K'$LifA3>:A-#Gb_30Y9#I?9$Cn*FOCTf+-\IYA]t-!b2TP%+EF&uQ$DRg#`UA\-1@Y7?1Oah
%IY)1IHlj5kFl9gBWC4`%_.O)=r>)cHIVVi!I@]k8c9bSh6+f%FQD?itDMj;7%rbNP[#fMO^<csF'iCeC[Fp;.:q8\6;AA$*$\b\$
%lL*Z&:)V.tAXONJ&NNLd^IHh\S3[[rWCRcdd\S`^djU'iN#<;?\iWRP_mSKm(+\-u\;MNZAohKo?t;Ll:-:dR^7aBt;HH5='t(^%
%EOG:KlI#t>_/C#TMM91K&<,$$,7Cd\FJduO&nqKWM`2P:@[u]0BK6XKPh@F92Qo'G.(Q#!UZFh1'p"Rb3L$q*?\(Y]H6Ik3VYEK*
%mT,SF\JX_1Y2pdnXoLMiaD@Zh\NPf]J5^@*b9]iJou3`A>s.X3qjmTrcFZB4L6b"bP09=2arrL0Pt@r-XC.m.@S]t%2l/R+QOSMZ
%EufL!d8T`$*r-8M;^CQ8pC[,[g<V`M)%='O@A$8$@8YoDPuES4,*"g2Daqk)_b:QVI'Ms%,I[ND02Q1&MMLHKGId]@/#86a/36*C
%*7qEf/7,ci1^/>oR*/R2ZsqZf'ugMij;OA89PD/Ud:9H.c:j;^W;<R>bCdM9G3C[I./Bk9@bPQ>kGcOl`>YBk(6MNQ^J+9IX*i7c
%<j:+3BsSt_pS&I1!u%<EPW&&Bf^jeE/XRt])$d61;<":&2TIF.el=tRo:(Bn$7U^<5Zo+OX+X:bnTZ]$N1M"5+$:r[2oSjkndXGj
%=l0gS-D5.XSF"X+V<,XWgf7MbL^7IY4S9l=XuQ_@?'4?JMM59TA<4C-HNfUJY]fR,K/*jq#OqC";&jnc?%NQ+rCJOThWK_F/TlVs
%Opa`:KKX5L/u-ir,aZ(coG*,U,ugqqD5;J2]N7%)7WS#rJa,\\'r=G8&pAOkqM:uI)#JOKRN]TinjHmmi2EfJ]-t&YWdmH+'N=VO
%i1?^V7k,<:(mr4gM$;c'r\Co>MbJ'Gl7aXSV@$gPiB#s9Ke&TU%(csPYT21iT<R)$*[\K565,+i\@o,8N.iP/h$8AQDX8R'\cbVG
%$#ToB1!.F;&VH\E\s9KO0INL:aJJk=Gh:lp@In6R"-c'R*Usl7<V=m+KXF_86R4bQeqMjFR]Y0DdnW@-GMY`nU>Vctcn=)oC#c-Z
%'esR'Rd4,=)0B&,b,;'&-@"I]&X:XiM8"`4#&fl'oi6b\7,7/iACZdYU_bSQ&[h=T40UcQ4<%_b]5h"OB,Xt2`9QXAc]2@j0TW4;
%g#O')^h"Q&7=s4<&Rm(m;$A8+&Vhj?kh*1_hS?2G>PpUa$h[mq=Da2P"5C^t5V3RrOSGc#Vi6ch3Cs(U*'B#p\->A@5pD2p'5pkW
%3A"CHTpV.`.mg!@eFfj"J[n\6]ee,PWc"=[4s8N&M74sq9PUFV\s&EdfFq't<9,sBgk4>ab%QQ"dGk_=KOko3YANmM.Unl'h*56S
%0XG>o/.f)q$uoM3M(3#Qdc[BNTYlr/Lo0!5]s(aCT'Q4!e.!*uR<qA@'L]35`F*W\X3gH8H.-+d*a*+7TVlc`UJ-cn.<`Z5d2]5t
%DBcB+l?u4*#kUcZWg>h9f1E[:<LAbCT"r7iTR\kEK&UX#=^fni3/8iL\DSr+Lk?jF`Ga1qH$ajui9.,,6CJod(5(Y)OIg@[ZhtCh
%0a<Q_A6Kb2fs83%,:[B)h,3QJ`WQoRa*d:GET.JY0<qgZBWDWj0CeQ`2TDQhV7^U=Gl,j&d8MC04d=Ik+cNAfL.(opMM-bk[8;tl
%_Bl9#8WB%QLCnQT'oNiK<6#JALngD@=L0UniZ.)]#YbM@f,jnoD24<s7>mg^Za;cQV8,AS`"]67fRjrNdXp2J.*Y/1LEG-.I$!>g
%:rH:3e\#Hp9blbsjL#W,%c/U?eCK$;nfbn]2PO9]Get^LF]>-Xl`G%VYM&cj2[G;A*1L@!]n+ZO+Us/US![,t;EkaJ(8fD3.`!1$
%BbJ`Gj@7?g12[\4*Xft77oah3m4\$;ejt*4dt)TY9VdB>MOLfsU+cX[.((`MI&&Tk%R_-nbl@nZqT>M6^8APn'SC\]*K#Z#F:goI
%9QMM/N6VJAc*VVY29]=C%T0Mu+PW?:MtWL&UK0kG$ZjjL8JaKhN,DY:T[UlUJ]]GZ+'GGsp+((b'2GcPcq("NF;X/="iK-8'VHF0
%EmMPi8?=i(ZER0p>p'UlU#l0(Ki/29UP[/1V@()!-^YcMJju8.$@8PN/KS^M_Rof+q2N=-LPPh2I(H6F]$?Q7Pn[S409t[A`mfq=
%n\s067nW\k0o'[IBC7$T^C`O6i[7TO+jckCrmfb2q1O!=BUms(M\jS$=`]&e>WCZ6?W#-&Xc!lmcgS=6g[=&-q#"#P4XO6+cL]6O
%r-2L2ER-;so4rXEVEVc-:QP+t$i^(L5H+^M$A4UMiN.AcCFIJSN3f\I=X.sh2jr/G5Fro!;I"AC8f1kI5KRihc]+hMan"Q!HJk;8
%6&W5#q+5^XFtI'6k===lTm,VB5<g'Y+-dWqchVj4I_[Sn\``/FlH-\`=e?eok=>C>/\cW&T@F#+lgK3o/oT1WKmUP#=*ODuMEaZ6
%$ZTT,=.I3iZ[f=q@ntIt=X(FrE.=1Vc4\c`T_9q_SOC1"_=1$F4Nj+-;=l-<Sn6W@jEm2RcSG,je36OdB;ti4[XY_O>H*Ic\`jO6
%rG9+BM%b-BE1O+=(ZE&?S(cQ`FuI[;Xa"JGhng5?Z5B18MJ(](a[18.@]iFr-]@3*Cq<S'/le&^`T9_,fkYr"?a&k)'&8<"&`)`-
%GD.u)H:NA[mcU&@>lF/p#Zj7(/&]t6Di/PlrHq\.X'a]tjm&3,KXps<9l[=bGuLB:?euL]lBgrQlGanU@bh>s$?l!@>G<.9G#,X.
%9&(*K\8UdAG]fM5&b1*,mKe)#bkK&gqWV9OO1aYIW)rfN?"'pcH<8n&TACCZq!fAeO1bFWcmOeGQIs6[FA),`hRt<5n\j2prch'(
%M1=Rq[fjL/D%.]I"Eu$Y"CHt9SB<u\OB:4#;36]Z6Q"lB\Kqa:05h2N4@hD"_XDrf0,0Fh43rd^AFHVtS7V0Sh$K\dVY2PEV%o,.
%@"WYa9&VcUn6Ug^mO]lAW]]0N'S\OoVY3Aup*X:AJ2EZ;KUX12<C"fJ[YpJ%6VhaMbSSZ.EW`VKICo9do%Vg&L@7H5:fJ83!YemF
%(Ec):"Rf?%*[Hh::dbJ=9:#9=O4:Icp2/OhkXF"g)VL@o9oV]JS%:oUYYYWmlkZ#*jd&m<J1GCn8J!C5+MC+j"S0J38^X9#?naa$
%7_jZ(C-cTB@Lk)+$\ZE]GhI)_f,O0,;JJM#ngp+S4KOR;+ELR)E"eT8I$;u+#:uTUFl`2YIZZWk!OW2:AM`kOoqkB[Go0?d?BaGS
%(b"F+`4m6b!=']C]jp_)7hNgnZARjH+;Z#Hei0FhI#*^:qg,$3e2MB\4mh\sfqc0l03B<KV$SH+"1#>5Vt&4[aQc4WN4b7MZ,k=l
%%@QHuNZoP@7-Ncf%sQ-P6d%,-QVd4h>R'FrHKCrt##:ARi&@;hOX%$[rA&%\"eCIf'9&_cc\Ei)>ssNLDP<e($+1)\9[Qb5Os;T5
%/(Vn-QodDb?q9!\9I?KB$s369["=;uGsY?XRQ%)=i@G?XGtGaQ_f1_^74G/Q3G9"uVejj9@Ld?$P%=)!kdaFGZ0Fqdj;N<;le6>L
%._&d:0H<*lG`P`g)dVRh=Xm=D"c[[e<K`\?O"Efs&\_mQ'$:S>oNlA%&7cV(TkT5!/JtSb*600?m2kZ1kNs)t@=e;*JHTck1U:`1
%^ok3li#S@>fR^S20B2\n?@egh"YKqND!!BVd*gW0]#kZk78gX*a2hAck__u%gd]KbHTf!uV?N9UA.9?s'6TJ@1<HRI04V1a*WkaQ
%gEHX`>aahf/?f8F=C\nk>FAeV]=UVON)CX]e<q3Ei@HNp(M&AQ98i(Z)Xo42llis#Krgk6%-k#1$G.$\@!Y>2?UtsWDg;l_SK8a`
%-t9`4NSldSp_\-X$C?;L&bkE[K&kEc?MH"bcr[b7+6NaJ&aJF8a_kQ`_I_@`kYp!+RJoeIYnec0WYkr5?A4AQ)B2)25rjN^1:ssP
%"1.Xa5rK$f="FhNJoe0Phi'_48r'L5I\=Vg]O%k!dO5UG=#HChae=^hlU/fJ\5irhjUeSPA#SjDJc;T%j/,J8Z.*L5cUA=B01(Fb
%JN2RI8Qc3^5)U74'/cXDB";:\B2G,@;fm]W#r[l]2(`,"??kTi!"&M(TRgFLT@:2.LOBMnl-Z1JM(V</HdS!U>mYUD#efdcB@3Ca
%lG<9AiuI*?A%mop=$QUmPBbKVjfXG:&[sTX-:pBQ)R(=rqXH8a<e4lK.Z'Q>,P,++!8V;i36>10/8eCLV*6C8hWk4=O91gEkYsh4
%AL[iu1bV\SYl`%1k2r1?Y4@i&Be1`D6lA/2"[nIk6ntulWs]$(de8gtI6\rh3A$)A:__D<^q2ui_]7Y=WQu2MK<\"$5@8!5N(A,2
%nL--T@0ge:dFbb_6P\i&P:3U2\/P,hfShFnm)*WR&OEC:b^BJbkm^LH--:Tgde]AEV%Zp*Au_"V+AVTAMoo>-p*$aVCg:WLV@nH=
%>qTk="d.[bU*XfC[r;KuKu2EOnVTaJ2')0=RM\%3bdXhe%.FldJ]!C)'pWQ+<SI+#lP;K9?Gmm4rg6_JMN3E_UWo4hm4qB60F]Y`
%n`.hdX>f.nl+$KBY/d"I?mtjm4H:l+4\P:/YV9>i0LX#@UcD0=n-'JYJ0Mpa1op&U&Z*\$%O"u4n921?q2bn8Z:,^8K)B9qjbc0i
%lBYeA4aN5=o!n#7j=!n>1:>P<?8CXr$47QJ81dnJE0C-3[n6[d0?&k'!D"I'#$!FD1f<.f;QF3i!:/_DL]]33ig_9&=jakX,+r.=
%d]bjg_4*ZIgGV$o-6##/$qd!O(C7>?*TF@MDaWC#^N19[Pq?i#</entJuYL/8ujfn];IG;$dn5E#Vu)ZU&(jJ?ri.@MB3uVedVJj
%KbqHqD#NKr=CiO7"Qc,o8]EqbJ;V!;8Eu?e_8OhTMU8j/We-!SKUEicar+=7="!ZGe#A/eb?1DL.TigZaC&6s%%OmYl_GTSbh$-f
%n2n+*:f\t2S:*JT./eRTWe;bhVCBOqkk$N[,>Ek3U`^OMY%1PM]4b!lH,B1ch!/)a/QEZ$ICXSCYAQXkgnVbc.>kP+*A5;J`T0p%
%VJ+O/X@aO_5rQ"d)t4d?<gD2Ya[+K?:SPFBi_>Gs+@d0oQqV<qRYJ.>E9($u:"@ZHVI)sp](Rod$brXf<((SYQf0*sAS?dX@BV<,
%3laN#.&%_IBeCa[\"neijK!l%aip^GXU^OcfIXubP27cB8%@o/2l_$MrajWM'SPJ;'&^FN\O^SV+Lu5^1i"Y$or;;CauCZXPTl/r
%Ua<l&MO!SZf:S-%[6J91$9ZB9KtN&^)4$MP;Y/6D8<=4L.[`mb3GVn$,Vns81HVS']i7U%6+C-A:VL)5HSnGDDQ>:A0@,d;oqL6$
%<k4AB\/=%OP1a/k]40>3[JE3-r\c:6_5EhPr-#>E's5Wjet!jPb@795:ZqctifLGI2"g!$_-A=joK$W%-8$KZ98J@cb5n[4,\toO
%ec63n?Yo%CoNlXN8U2a:P>1#di)D(J+S-.<.RJ5>oT:ThS1<K/g8(b?@>*+,l(qYT(FE"l"Z:8<8SASb%8m9/+nS2;Id7&DRt4no
%>&,)k/lme1je>M\P7"q[s$<Z>X*#,c7$d,<MlLoh=RHH87tLp0cZ\h0=="9.hEeG>66`H#)/PPlU"LS,edl\\W8,%4nZ(A<?.KME
%g>mu:)/$+bf[Tm<R&L^!9]8E:`o5K0B-*1JYm0Y^$H7J1E[]r/WZ?/2m^[W'(+B@p0M&E@:[Vptb,=<lntBe#@$aUIZJf?;17;Mu
%lP']Z_O=0Zf[XIu<.!!gX_VNn9?d^g;[041YU*"pfm6s%Z"57Q]aDBiPXB98jGHa`gK!0T:%#ln^)*)eqM,@]QDN<.lVYiA&m\Tt
%].1du6-SXt:6:N.9MbqJN%c_=qUY["&2a(1!sOf'j%P8pJfN?W,dN%b=u<I@APF@T%)H0p%agb94SFpV)AkORG;8PQC>LV,$P[ZW
%0o6ut$8e/JOVH.)A=Oj_C5tql?2+D?m:Q&(4CkWN96!8IAlUq2,=",CLBp$.a?P)!nV0]@+2J5!C"hjhVTT<Y\Q;L\-V1H8cA_0;
%?Ii!*;Z_B;<7(<$:)RVuO9"dMK'na1/?n703^(!d2CT9K.!4N%fb!PWN_*u<7T2WDQ'peamhRY4EeDk3OL#(1HjW249W!1\,?tJl
%(>H@GckT-8i\VVQ+d2=U=52+nL_kgkQ\h%-;fi:45#?!I?D`+C'IBZ)TFf3udt)8:$*C!2^U@U?5,f4$$>>6)Se<o?'29P^Jr*eE
%3>o$C*7S1fF[q`WE0IakDf#gP5$+QJNf-90GeMQ<V].L?dp-HjCfgJSJ@6pqWHG2j-))*m?C$8cih/-,p:Qo@-@snujd75A(fh9F
%!JN5(QS.jHqFsq6C)he\!>Xq$\1d3rlZ+[<4!;_n=JSj^g3mDZpA&[k3n$=R9g&Zc78\g\<ma8S7:gaX<ZdTT?3?hiF&fLqLpr#,
%S3sW\>o!B1@Pn/l(RUd=M[%VJ]Fr@GiC$g:-H@T^V`Tu[c94r>[\+/+,N)g14gkD-gs"DBN>B1cf<oUU)0jktgEe5<S6hN3\;3?&
%ZAJ."j2*huPW?fpEgb\5C4pP'Th`bHEWC^e^sh=!T;<GfEqA(,@Upta.S#%0FA8G>FpAsGpd$`$?03CQ'n5;kMheAm%iEJ:mNqBa
%Fs"qB2!s_R]V@7;fH*bL$!/9bQ0-p0%t\A`\!FF_-"&L15hUV*o6=9=>QkZYDN3XWEMG4#,rL-t`U0g1WR.`]Lg!2HMm'G=E]Ga%
%N:*!5^8Tj$&a@7i3&5!u12bq&dh6CW8-oQPQcO[Qo$o\<1(Rk8n_mH47s0)tp1t<9j.'9M71=[7*HGduOMO&XDXYd(9orS&bAgbW
%6.9G,RqL9)a>+$2r4@br>E7hl!1eVG^d<6u/4i.n5(##[,EA^+_@XpIE^sUO`p1h(.FYBb',qZSU/p3b6;[;ked,RCeeNB>e$K*C
%IJTO1PU5i^GD[kWW.IZtMR^Bf_;>"?2^S\$,\?q?Fl0<+47paW5O0Sn:ZcUnT.cR-$r.9G5&&,1ECdmo@\(b[2n+08c@]Mgc2Wni
%S#GoQSD!p2$3FaZYX%CS`#>]N6L%q>ZV9X&6L,@n10I8:_mEa!-0KgRej3`2,j"F-X!7n6P4hCJP/Na)!POj#OO:kLNlt'"%oHT3
%e3o-C22fEOb4J>L$sHtfGupD3fkNBj.*/RVo;F-n.6&bgW9"MP)=:cI("H=R^r'$O>q0JP3^`UNgmiZ=KVq2./gjD\i7^P(=I=$s
%>[#]08O)F+n:GfTHB-BN>9#1eFqHtV2cIWAYFEt>;e80>NcVMk([CcHVg&j%m+ADB:Xdm"j<E1ig@1:SC%SEggi1GI:Vi3bZ6"+]
%4.*bLZg(nc:rSnAB%R$t=bA3r_GR8k1G^%,O64+I=/9?;Zg(N6s#rEfi_b<JiPI>@<J7U?e@J,W#nYA[=Yt?D6;h%Rptk<Npr1eN
%Y&o4&&Tf1pXsMeUk^*r(Q\+k9[!e7\Y:;e%$28*.s5KI9r0fU[3%c7!:[aYA)s=6JiU_ulr2R=6-@^?8X^6"ja56&P356>4n&f::
%:boF@MiK=XEZp..L"2GR]9%Bcipg0)?:rpaJc%(+YESWB56+H>KWFZgk9n=G=gE:cS0'cSLX>V*[!GcDT3dElg?Bc)IdF2oKVta.
%idJ@LD\mfjR9BO`mHsnin"0!8o0'InY0ON1q;tm/6TeYKkBloM)kZTce%NK.rg-O"=cum!++0AI:85qC-JMZ1R`)"u.!:icc;N>L
%nFeEnS]&=/Y]uH_(NS\:4?Z?BB1_i#*Zk-`)(IJ,err,SD":\37a;4&PDs-bLcLr?:)9CSe`U`eHF=l#e=euDU7R?E9:OMcoQ<'Q
%?!,LGNGU%igsTq]2X[+EJ60jscK<&XPN1(H\M@PVff5=ad"T1*Cf3D8?I.ceZO(hikrfu=:IaAuEV\^'-nsh-=P:l?9h;VFs69PM
%fM:NL\F8M<Y9/?H]AsUbFrYl3i.YH`7K?4i.X5Vue_U)P3CT7/OTsPiiY;R_!<d\f-:966:rbs1&1.KpV*VQY&6t'eK^fI!gl1/o
%nTdHbk.u65A:k:&i"]<2KS*s_qoY"%).>_e'kJMVA&<!e7L%EKK;9_$i&8pg<9C3pg]>BZ;!Ff7=2coQ(j43jm"->-;%JlPQEU<5
%r^2A&htO^Xe`YDeIJ<?%U_Wn2U>kJR=XX-"KU%[k86b'-`;T,e0-K_HEhDLpd80F@kEkH,Nor6GH<cPF5u.J9B0bV9iM8tfQ[3Wt
%S=Fmr4FLZ3N0(MK'IbSJ'Jop?ZbkN>kCc]0"82^a8(1s5Z19+1#)(j!H4>g0@Q!Qi3Hbauf&/9X&T6^<_;5DC+Ku_&M?2M:?K.m'
%T-7s]po1M.Bs/@H8)a-#&;nM%L(SQ3TrF^qO)bM:'aiq/0g[X,$ul9,1dc%J^bbXj/u'P92So9Kml0CS5G"2<d#d(/_/XSq4q0GC
%Efk?>*?$9^_+(6O=JKEq<2#Y(J:/S[:@hf3htjI2P+q\*6>\7uW+-lQe!VfOnr4I&5mkrn%%Dq6nD#%a_f$r!*oa!:P72T4Y6F)S
%EmlLCV[7t9-4r0]WY&TaQ?.ch0qg^kEVqCjDE>9uXFBS-KYj`pNZH@WPW,t8/a7WNetA@DdY@%DV"\^*)Xf\@D=p's8-e`1a&Z%s
%8`7[0&"s:)OfhR%U?>>1-9@@eRY/tb4jf%1=@.Xb%gS)%*I\h_/+LtkLSS/@r;kC_I*ANAp!AJ2LrFi>esn"C$RC!OAEPm3pe3?g
%5d"YE>#Y]h3AM42:gm0^*[,'mOa"j%DA"W]["]l^c?&4"+EA)P?$5coTr]6tj"h&2f+R^.GE`Ol$uKAbD9<'F_'F"f++K)e3)B_d
%c#lSS<Gn_5c2'/i8tM^iV;[jAhfc[<Fq%FsU.!,-i5rtHbYVkQH/l#D./6VN3qC)=]'(M4,EJ't.8!D9+u_5pHot%T:i#"rD-^jL
%eM*T?MA1B-3+2XB^tGfs!?)1!;-'&EG2]D@h)+Q%G65fP7">fC1$E0mY+[2B\1mmt$r6q,HRAokUJ]<MW9,4I9\8q@)FV.5KR/IV
%m8lAJ\``Kp=+j)SLgRseZU668%8Csn["Mii3\L#Sg;<JGg@CfDmI`JB5#_-*WorQ+=6^m2e3@9=+&@T>V#gE^kA&V)^Sc/7&1k5=
%j)YCAW#q?jRi-W:=&@^n&]SmWR%n]sAR0J]6IFAuZ@7HGV0VH6n8QS-LR#mj`D4mJhSIs8>AcK)B50"oerlsk"8Bq6_3=OEdUK![
%i`>h<H0`LX5i<sUrdU[Db#SR_;@1]AX,P1.gq!&.gW,YeKD4"f0%P+G"4VGp")'`HTf#aU%,H*'!2rDofW:Y.kbqK":f@MaX;nF\
%Z`&fYUdr*2bkf.Ol6iIX.;<U9J-N\b7s37@)/KYcejif:SQ=YfbOR*^0l1%aR+-P&>4NLf#>ZF[KLq-s=e!qAod(\F>OnIF>OnKB
%@EF9J%SP)$o,,KnOd=?9PHJVMLAf`?[SM6cD)\(8o8T)g7a#Yupg>PfTeXTO*XM[uBnX)>-m0IG(mP1J2!BJp[-9S?:_aX2+/Zah
%"uGI'>dOQCrJ(u&:Kn[*)ka(k(r<A3+ZH(3oEAtJSgW#e61?\djZ-]UUJBQ@h#s@BD,`'oK::Tj2(amDeAhQK]!$iH*Ed0[/(1M#
%6cdlRf%$AAE!+hE5U1"oNNdQ9WnMn]Dl7Nu9!Y=o)V%+#d_q)ZTEpm"mlH8g*uuHg9arpEWXsFfcD9ZsZl)`kZ4)/K/nPsDTX9i.
%\qK='LSc.1Rd3dOg'm2<=;hH"Tg]V2F`!C4)\+p2!?.20")?o]bo$sdo`)qsh+u@i"ernU)3lXkkAp(ZFZr'Cg8(L=Ad>KqaNedZ
%Nf&>fD-\;,Se';#]Qb8fML^98O8>n&=jDc*P=B3oI14IVSW8_6P6!O@8*e(B+akbketcYMm:Yf-lV2M8d$bC,T[c>Y_/[or%-X@r
%)Gj?_mHSrHF\eR2U["jrP>QDOfjaiio?OK[ld2<8)HcI4oE3g3F.JLR(#JPRI@gl1fB)Mb-YuIj_m+c>ES6425)CNT;0]k`p_&Tl
%WGg?5R0Oj41=atMd7Lp*2oLfFP8^SqeEqEVo0a^lGGTBdR$:9cs"t?oBW40pH:,nu"ilh`+^GSs56Khe5WgBL166uUdejLslW?[H
%.=spLFaa$j;S`e%fWkH;1(:XE#dd%COPUb/JY;J_V#_R;NNE0&L-Hk<=_5:/.H8PB_tMX`;a\`s7BO=20q.Cmm\\YUnP':Mepi\f
%V@[OS,0mg.iAQ>kmDlS=8>icVkOen5WrOiVf)Y&].DkaE\s,&M%Tsb0=8b8p`kaUC,NF)-0Yo:<n=P#2TEA*P[4VoUeuShnL-Hjq
%7:j#sdGqmkhaYsf`:KC"DLp>53U`iaSicDboBuSM:#=14ikR)Uf'35fNp5O_096!_2lp-&5IFmWmsb8J5Q03Kr;AjproKdPbFegP
%J,Oj]r@;V!5Q0D&r:r"<rq]Fj:`m],qX\(nq+mX_q*4dAs8;'[oPabj^\m9pnfRnoe,P52rG2>WR^9/drO[RZD]f#S%tFWD?[_e:
%qU[t0rQjop^\RN*g!053rI+W_F47n@PYG<\p!Q-I-(#bbDLY4Z63\!PJNNS0=%sAM$eYPHC(,oTL1!M:$I"TTg<\[[8rZ>VW[$4B
%5AX_hCh#h2%YZIifV9YcYRdi6X:=$T3mI3f*C=:"<KY*S3Q'ej5X@^CLmLUU5rWEN*s-?^95]iobh`L(W:oIjn"a_(23a+V!'D>h
%*ko-,-no>=+ZsJZ%r(f5Z<(jXV^'n9^M7/<lq,cgB<q0'.fo-6+-?H"NS,41:$m-I-e%M6U!o@CEq-UNA+$1a>:)(e!jf6pcb4KU
%ZH3[G2.Z`Bqa:COel3QVC5@&S%i^>W'Q2@M'XhH,`uYuCA"a"2T=(q.9@":L*GCnT"p3/l=c#1kLBC>m_4o+0Z<8;=#S>QED[>N^
%#`LbB$r51[=[uXo,JkM4iu3^f0a0_KVQt+7hIGu/U(=@(X:;m$ofU9%V<dW(`;9n+o_I.%\lIUI<QIlWFOirmgRNZW+@oR6>TH1/
%Uk=#Xm#QdQU:BY+6Zd7p.=(\kP.WZcV$:UWr2tT!OljfaTd?V)E-d:skgn7'g!ABnXek4F]rn@=&!iGen38FtN9H&<;Eqfc(jpUm
%2#-\YEPD>GTC>)F3#Or$5J1@^dRHJ7eBE(#be*^0JQZ_q5ek=_ZIo*JZiH5IXUTLiZ&tC4n1..?gKSEKG5*ObJq?N,)9\qOW?BpV
%hOt#KXpqH1WXZYLoK:$0EGk#MZ'SVekofP*5k[Xj"699?ZPE=IkhX\t".UO%(.'JfpYUJ_-.hA-<'plCVh8=H>n9Xi$-!j/<.l@%
%J[M,X_7-;5kP2d?]->K&IuHA^oHnkQktM6<e!hWZNALJ?[dbN7Z/7@RE%Z/:)]7Y4*11M6DtXWKKK'XhJS"o.6o%'&r@1E%gX&hc
%ZpR!i$9G/?e!jf`.j'(m#.t;POC@fh[@t'qSnIgncG(LG"Fl4aq!obOnEE+,i6.SmHH4;s?krkE,Z%;@Y6OE(<eNM0l@(F.F7ti1
%6mlE!MF!iVfD`*Nde4/F2+2djM+tf9KH>A!oqnB5)>iI/q,&)qrhL"82=`lAp[+Ca;'u'JAAP0&$%l#lO9V?5,0i8n%!'c2DH`F@
%lFZn0!ZfI9#0';&>X;ID1?nlPV2?E1\<H(7lT^;2$_auX!:>j))2QAcifNK\>(T=[06-4&OB5:5agh2nD!8R3k8D!Pf;o66_&jj1
%^:ZrUI!Lo<q",nahSX-G&,?dQ2Bo$^D8_%'d\M#:&m:HpN&UgZLY*3AUZOB#5D+L-neeL.NbF3OZ;Up;&KolGXf5:<cb&pbaK)sC
%ARPIL3qh.Qo*!smD9cZ0d>nkD.sR77Z<(rV#NNKdT&5!hI%akTP:BSiV]_RPD\IpX='jAYSuHU)GUN_j>AAj??onVP4mb0:e/_aJ
%5l4H.,8f^;GlObPK%r*-9(oD%;+6-JaF;\FD(V=@p+AMQQbN3]RKT\q8^VpILIqYG/OCPaN$YB%#1;XZqX-oBg(;eD8O]<O1N18D
%CWQSB:X>be=X'Vf96$::(qi:(<4=C<l9B(UBh^b:n9:QV;[u*=$t"oDIUWDH`GZ1e,$g/dq+TOA<5YsaqAPYi9)k=.S@#u'L1l)7
%Y^ppi3A7RQD9D/nmQE&:%s;"A7r@1dU$)6"P?2ikadC0*ZQm6>gB7`2S/dtrrqhB8F#[IHN>(4tAVe&n(u*Vj`U#p1E+pnH6p!6%
%Jq0>T]kB!k8m?IYkg'feHuiEgB5Qk`dV4I)Hp]Om1Vk.XNP%jN&-lS!,EG%&mh"\'Z3ffQ6K&&bc4!Ke'=b(\&/cg.3C\/SN?cL_
%lsL*#E^r`[A,KJ-s1dDi6aT@4fK`L(WcrZ*.S+`FTuYONN=5o)5APmi9g-hmh>3HOBdWUb`5/?1ab*B-&dY,d,geR&U!eKtbRV_B
%\KBhpd(h-TPIO`uGf]9VjW?0q_i)VJmXp=Gl[A[KCh;*M90;O5g6_(4(#6_rYIB-8lR@eK)5>k\7V1L3Ci/H"]5PL\@>^D74NMnV
%=cE1N1ls@qN(#M89?l36.t6R/O]PPqMSZe#%.u",*G/#?#^]Ns.#:92nPa?4Dl1#Tr@.4c9.co:C`'Z=F.V7#Np`&[:[gm<U0?/1
%P`bS3ES=g-\#AnX?P[WkW\(5hR*b;=`3PV)N$t9bi#IU'6TFLQ4d*BKL2d+)??c?\:@]\?9f5=#I$G/D@$J#d6W;qK:2oDo&Ur@:
%ep_4@D_4+HnFr#r0j*"$1@=A]Lt/O,,uZ$\*>ReM+A&5"!bT]'FUc_s,nWWO@Xf\mDQTl=)&2!L$pW*?GA,.*PkECs!:6lubC3t(
%Dp:Dhmb8]30rQ,$5kpiQV!WW#5h)lXNq6]E_s_T7DDG_u5oZK@D;X=CXV_.!pmAI4#"6(%gQ7$.24!;Ye!;m@!]0JHLn4tp<Voo<
%\MeT%i:#U+E(#\\3KTWTM^GKU81*J5"`C1\5fJSfB_[o$rLu4gIKN*OjJS:PZ6&gU",g\2l&A[g+H8;VZ[YZ7_>]?NRF]OPoY-0W
%6IaZD6^%)T9c1`F]XUV>J/bq%.WdWAlG$ea^0AR8gOEfF>.pni[&ec[L?-!DbP.;(Zf)Dm$)$a&*L6T%%D9+?1qe+%X3O,$d#X:m
%TACfOH:N@Q2#-PUESdHShBa*a^>`DS-88$eH0TgB1sA2nePKjm6poIIFPu?"c[o]3+'NDMls$TE5r/9H9a+*/3:n%kV7Jjnp8^+D
%f$a-uhl/kI&8$MY6lOH9h]e).HAaoF*-6m#mkIr[.3agWUOYSC9d"0[##U8aj<Cc?"NiuV>?I<M&67t4*a+*kc][@]*1CVup8H!6
%#&Z-@$r%mu3K>*eTR(5kQMkKaNjeOA_09(a(3Gu&O&8BJ8%3.VeuftA;$5P^qL!YAW&c/h+[lUe6WH_\G(epI%44dJ*n`a+/iLCj
%+O81B20_.hm/:Si-DtIa2`2`En5\HZ'SLAt&0mo-jeZYbd%_er>BO?@B/]J7daJ>K(I^?!l`c*r]X!HZ_q[K[qOoAp*0-keU#]+S
%4#%o&(b,t^0[$grOh9Rb8J5eL9c7D'o"tYIFTcDQTlLXf[B2qd?H!R]#1e:TB%38qT&]8^e0=X>Qe2&A8[RH4*H;mq8r[8t+X.@Q
%jqptl[in@D.6cC6Q8HolDe_PiTi+n,N!_:+<G`)UhkdSJ7?jf5YkBjlHY_k[K"hC^OUNaLXj&9j2M$XJZ[f-rI*'a'"\3&U*0F[B
%1?;H:Cb3CVr6.JB>#QFZ:"Ki-_eP($H;b-!r5[Hb+Y"SW^tR-2i2s!-*.J4)dbCCBC@:;p#rEEc@11^VL[6EdGUZj3JGLfSQ*:)k
%iLb?lp3%@Kh3kI1JA*cr(Hr9[_+AU(@t0B7"KA/25AMK^9g);ApXlRhL9K4kgB8^M\HXr5oLDN0H,B%_<lG[bL2cI'WNA2YbaI:b
%2<DE#LcsHrNaOsp%s`(C9$*%K@4_@+B>\IKZB=m)SgX;-9TZ1Q)akpBOUh>,!pbb*i0Ig5K;&Sj64<_c34QXpI]P+&Rq_asY(m^j
%dT\dRdI,KaWF/31inc(8iCZGO]g"kjAXkNUp9Qr'C[*amG?U+EFID'J:e'f4GA&5pa'7&UdGCVD2ciI1()KBp\EqH3Oi>#3$<%SG
%.7,,nas".>/@-_]&Q=+85J2TTR^%O#2)QN)SXCRV+l'^unRRrO.N)@bU3C:,C9V8SrF[m+CZoJMho'\k**,W#QF4*YgB:,,'`a22
%@iQjoW'Q9Cigh9sU9+nVb0b]>q0d9pBW2$dT5'DjKGasQHuB<l%9To_LPEIa5\44!B/]D=eFO++Bg,]3AqE68)LQgk3;E%kH"=Fo
%#kZl/Kt'F0N>``ERG2o<3=TL].-?aOaG1p^d>ME="g/c<>Gk(mH2O(3doUIf+ki^Vajk]]#[?Rg_0uNN>49iMIV8iL5I83#VOluG
%cFpP,bliNT33mgIOU%N8,S3/Q8YY*nj\&oPjP\!uk\UA54qbfRb(B7>H2/#j3_RMDL8`!^jfW=q=VPMnhN@onT6V@eF-9eC[t@@S
%-tCl@1ISDa)3ocjaL/#="Fgs":@3r)Lf?V8X;J0O0B+0U5KjbHH_d4`)(EL7Lg"FrG/sBa%7O%@f[PGU6P[HPKTBU<1phqQ7PqHZ
%%M_i6P)cUAb_C!E4\bD>GZ7WcL]r7n4t*E&n3DRZE,E\L**A?L1Z\Zr5YQ9B9WUP7TN@+JU3"ZM6f_k3j4'Sbeu_+J'[4Y:+>3e1
%$l2R8;*WL.+Y$9#;k31"g9b$^cP-6mNsjHXAl9b9F,T<Lhln;=YFm0X@15LPe-`!tK[e"Sf,I)u=c9B]/4p)ehN@ofSUMjrPdB?D
%1c1DlCA#qXC3?V56+*>mJ[_MJVY<jWa-e=hqD#9HSBo4^,N%<#NL4JK&Ec2G1G@jgVecMWh!q\9_"o:&nWdL^"dXIeKjK=3ECuQ!
%(\T'Z<"dSjm;um[<RAQ1T%-2$cq^L<5=JPjU8)HfCEp<c:(r$<VHM8WJj2R>(a8=p7_ZN(*Jl8X7A'=Abi#r>m1sI\W[Doo&Qs]n
%Cnr>OD]a'O\<-iV6cROdmJnN\LN^-)$lX$RZ*C/eU-65j?=,rN[\0<CjNh<97I*e_p=KT#Ib"_\RX1Rc40<*&dS0/NLkAKAP,EbT
%QU'd--Ad0V_q?ZASf"Ma=r_GoQmA@NbYKcj&(*MX/;^Z;8tdKb$7JXfh=*46LmTBt2:W<+;)b,!3+lLDf$sC\6tr]q7n(pLV?:Tu
%CP-P"4jWYB0qP)CVFCSI^Y>FtkYMeP*VHcN8s<+%_f82'Bg;]q%BE44+$ocW0#Z=98#.pudjPE_1l7Vi)Id,M(PhDedISoAl9DUp
%>>%b5qgIZ7#BgPs4'YMr$nG`A0',pQC"^/[Sk'eF3J0rnL?MAa!>`WQZV@$$6W8_AO31fEbi7[>Rn?4*ZL(#?L?MBtJb>YC)7??5
%kBK_S/(XMh9;_]2kW[T@GY\)/p4XsqV@7a2HT;?2l$^Mh^AE11p^Vatq!'I)1]^IFHuo]k3V0TSX]08NZj0K`+uV.sr$0f`>*8Xo
%*p&,7jsAoQmT*\TYmRp^!p?Bh/kNVMn,3:c9B$9LLajngqO#X*^*K=`<..Yl7&:#G6$`Y?Z-5_>ml2(E2[$%r3D"nS^s<#J8o3]F
%8F'`<F=aW=ffU&3+4cYTmcX8M-[_<VN.5g3(rTnSJF?9`3O?bOUEq)%hu5Ab%]60m&VH#db'4`C]OU8l.Kt1@Tj1sKp]D,R*Xi.R
%oSs99b!EnS]sbA_K)-F2=:$jp#t1fJGTTc<?C;&!Tg!coO@s'$^"tpt'^4r_Jkm>1*'YR2qZD7ZA8&Kgo]$h<5![)G8;KHm`C+%B
%Z^@DJ'+-:d%E"HP8"6BMp"9Xl@P:9\G7FV("J/JpXOD"tfVHD6L9A4`*3*)BC-t!8WS;6[N0'(^7@->;4F*c*>T_o3Z`h\f#g"si
%Nc:ICTRnbV0TuBB^?ngP1>XHf6o"Ef6@DP@E9)3:0J0096>lrAR.<$fl#_?Gs57UQ?DHNf5IW(os5bbfcHk9%W;j]DmN\02['FXf
%j2o/HL%g"%GEfGZg!712qg`.H_P%pXos7+`lfY.m0.tH@KP(.W;lY4c3N3<,-8>+9Kb%+//j3.I[Li;Jk,1ebfu\W9`e%g#$+sNF
%j-hqPH8+#ij'_`fp<;cEj)i[.*TU.-CX+nF:'3?A91'e&]6-E5`s2aU21^>9-h6l$]%Vd06DKr)WCO</HU9qhm]$5;i7DUU:%Sf*
%o@ogq-gJ?Mm+;dT6^QL._Rm\hp_t1O"8hCHaNO6_&%"7#)X7=;A(+Zhs4_Hd@=/Q`XQB5,BDK^q+Unl7PB`]rF"`4pnU<`KFcs@s
%/Zd>kd/HITdrU=opNWOa+2NDb=ClZ9CfmpM2=rVsaE^a\IS=Zf%=2@Rr#A:90<ld]K-*0ZjpO#(JREA'"dZaLV;unm#(Bn'rm;@B
%K1;N-PkW$kQu;#&7Zg6c8Zc@\[Y8MC"fU=.?FD?>NrS(:X?pt#N+dt?``'c*9Y^S>D"DA$/6.NHB[[_^@3TYI/f,IO#b",<B=((&
%GP=*u\Iq?W!Fa0"O2%'qB82:udgkTOeS71/pA+h2pDOZHH5Hi5'M/=fKUC5c/_Ns(ib()K+Z5ipaE>D>kFLGVEF^@]FlY/Pcu!k'
%N(1>!#o&V+#jETY0-8jlYPMteFQ8$`T40aCp(;I*5YQmP2;5Gl4ar`Y@mE$i\=pKR2P6<tib?RY-7T9=[/k(])"*P\6d^2`[F'7+
%5k^"aK0G(R,]$?#=sI'[j4+DC+sQ:PD..Y2##KPQKQ[Ztf5D+PG8#jo*iR/4n1't%'S3V7/&EsG\A8\?K6>Xl`Y'r_WLf4qBV%X:
%q.W3).&\ia=[2XLqLq"kbFd.:,d%9'Jtnr'W,ffg@Z+9,@JF:0_]9(E"Sd3E][?r*]j)h7efUbB`Yaa]@4%HlahGdrWM_OJcn5L9
%oijeIR,J%Am"2=dOlO`9.<uNB"&ZdT<L2?sX=l&Y,<\c`LuB;5l8Mt>P]o,X\O`5):^Ms\lJXT#!Z_*7pWEcCfXT<CdUfc&d=,3_
%qITWV+,&o37QP$GV//aQ,X7>J%k#LcTJ6``nT<q[+%OGaRJ..!lp1EE6WkTjM7/2fVBhg`*i!=*lL?!e:<`$GUr%l)b#,\o6^mOU
%6/Dk.6&Ij<'X8j%(K<`hp&5QS7aX`5/i[]e/e+oFETifQW(]JWGmHH=$4sE3Xjl%`iC0KF%>lh;18%)W&_9/-]I_#=4NhoY4AZA*
%Y#A$1OEG'oUE8nB,)P^AL,/c;+]5ThkMr8".*9DfH@ImnnI?^-Q5nuHD!BKkh%t2L?;?bOY<kFP-8>AEX%s\(gYh^#+n<W_^UaZ#
%\eo7648X/(W/:g',(u[W\j5qj;:N?$CWU[NBJ=;7^i8U"F=`BT#]p4pF+n<J1BOp>Yo]RDX.=OB#Ro$/Ej3,bGd+=Qfs(or)W^cL
%<Fno#K)'#MAtUupY^5oDh9r\<j9r&/hB:Q(q3ZXK7G0!30r5Ac5L?foK6*J<\Y9LiQAH:Y.b3S;(nALe(GSR5Jr2KX#HN$fMC*UI
%AZFE(Ijg0#\Jd1b+hT)nduJ%9)J!V5@A't<;L`RUXTmSQl%o%ME454<U0`RjGMNj>o#/J,TRnAo9'UNm.'!`:?EQfJ/.Z:$i85Yj
%;Ge`t_RM1[=(]]*jMs(!XJ_,IV'u1ca_:P4r`f)tKrsB1+YoinAMHu*NO#pERLC4c&oKe<PVP%RgdN!$4X=t/6QN.L.tp[?nRL7R
%b\UPjkc_bATO83.RnnP.^]*?0rpuc^e#0t[2ui#9YHP^RrO`+#QiDRXc]s$VjrqWVYh!.@/p[%C1rmt`N+,5P"R=XV)XT+5NG(6j
%IVkPtoFYYU;KL@*:@L08V$Nj7?jh0?o85t=2sOs+8Mo@-**pah+fV[G*g5'T?78M7akSS[[@+@RcKKcs'7_LI>.m=b//^YRU6Z(I
%W<!V4Sck!D2"<gCP0uT>'EDcZp\$*_?_slg[B_cQ.R,`b,u]f$,S2U^303nalVi$$DI/^92<f3i]HhV*a/0DN'\6=?,m`lV@fcst
%2`T3ZR3_]=gPDbmW@/X\dia+O8]:/g4"P`eef`!UP``?n#R/^,`agS<i(<OI<KZ9Of-TEnrf@sRn[R\LVd'Y,/BPKC['hBOGi'/D
%9E9"]?mKGinAB>dUnj)t%mMo9Zq`Y"RHk@UB_h%u$:CHp7E0Y2ClL8sC`$B\?B.<d2E,O]-q/<FRk0=_GVY&?QV,(k1j&n27mnSF
%%'=la'M[EdOcR&(K6hq^b15Edfr(,f/kEft7e/X_eL0d!'((`h.X3d8<VekB<_)W'6bOOPFM$R=`QWKs_q*f$^k1OH67i?mqt#lh
%FX(%NJIZT>5g3(lKW85:NKe"U:tFuC4MdN\i#KY`OB++CEb#U[MoA0:^'%kUWcbei4Ui;*!AWF>Vep'->!Q-GS1%mAJlE_Ho"uRP
%JW#n^PKFFTJO"&5##s\-DV@+9RGgUX*W]0loH>q6#HL]UP.gQOn32dAO3.Wir,igdKtEjCK.OS#KR]6D9(p]F*#Du>kIL0V9s-#.
%-gpM1.6qm>oA]*5]N9+Th;l:J_!'!l"[@'98R6H#_1J;iYbjImabPR(G<%Cl^<__60[*g?XN;INnRK\_GaBXJ*nQlD)'@bub*!)+
%*ab5^GEXgUf^W8(/6q5RSRj_*r)nX&DK=t/U&3Zl"$cd;$ie%ss5:bDE8a$knF+;Ls,?sq>^m7D`)j2W4nWFAS8U2E4@bP)-uQeO
%C($)6]4\$%fa[-4B7/\?b9>)Smr$hX_EmH(6:m1h\.'L+0lN2(UjB1%k]m#3)&^,E7E:&I'(F_p*tjBE\Q\COE\*:I2M'.H<7F9B
%eE$9q:d6$V-FqKM6PS%0%ZKBn:Mp`9BCJjEl"SDHo?'JX5/PmkBd,2H.sRNN":oQPQMEZ)&aki(cjroV18gWiY(uGre=UqZR[d1A
%W+MZ,K/k\&X@K21=YR@:S"r&U/2ks@F1<pF8HcLr<[$!!8/t(u+UOOQf\?Hu\$)M<0[S#1gfnRJeD>%p<4=:9)h-FP@Ek?Tq`=SM
%.T*tU1d:/3@K-XE\N@IJ[VUX.%#&JI(<U1G3\J=/jEXf6VQ=qlkegP5$F_8Y/I9`H+n[k[1M)[5D`>Ajg(-+s!.QZuq/E1r!QpWk
%5bh,\"diVa&FY>cdb3opL2L2MZ!FD%%D0N6%8q>;#T*c+Usm=!1d7sZ1s,`2.;&L1M]j:ph;s`R`Q\PuIWK^)jQi:nU3-t6/^(Wd
%BrHt'rOg8t)C:^lASm^/%LUXSX9iNm<3mK0RXZ1@lL0^TB\`A'X`r*b02-0,;:ZYt'gu'<H2:A[Ir":*dIXO@G)QmS3BOdg2N_5$
%AonU/OH*"frsMe1GV%TTMK-i-B7(?8Q:%&0hVGL9Kc$-\W>9#d=an,^ICH"sL:XOg7f9n]HnJ64iN[3C/_.#8T5ceR"I;EBn_W*-
%rEgkk=#n?HIf!W"_e<AAVruJqD09sdK'AXUULn^]a@b;XkG+t>Xl58KMe<hViX%DpO!>jDe.D"g$%eWG.GjAc?WUZtU0G5EjhmB4
%.aSs*E-qt/P=nnd]X[0^n[LDlSB0'9a5>fOT.'F,9JJ_"PmVll8K6_%fs@(R99s4"@Eb8S2[+UkZ;([&%EcR10q1PGEZN_H[Tq\n
%X&r(gnFO"T6Z\idk^?3)K3DtH3Q]QeR\'NV1r8A&fG'[Is4*;\(MTQ6+RXt>(8Ad(YeS=-:/adS>]ssKL![9<LI3R^hi,?lPE"5H
%%N)oDGER<V"3.]]M[:4tT;E`!4\nD0D=]Sb9cHC5ei_M7;&0?K+%m?&k^V6n^"AfI1-gUsq2G/%P;O.)3('e=9?47+NXJ$L\!!Zt
%U\[sT9d<u8(^!46LN$:68uj.o.+B<]nZM>Qe[4E)H_-VgVp85)C\KqONVG\3:YtF#$-GDSSt]oKcBDLns#7+XVCmg(XREukd3nMM
%GZ;M.qpf7_023'\5(Hkdc;;%6d.l5c)IDd*dpTB1n2r($_t0sYD%3]"j>8gknTf;mZ@J8\C,O%=?benOiIBbJnFY(q`(0S6DIruj
%;)960<hTGHMEV0^S^B`<qph>QBN,f\rr^^P^<2c_h;KD92!-+2I-ah+Q[++=l?+YC,l?c7VO/ll(<-IZ%n[W+@NKQQkO:q$+VdhX
%XKWE&$Xuo+PB0WP9[OL?!>+97\i!'U5SFCf8rGIASe$3cW]oTRok:"?e7<WiBF(YXlo$;3]6c_N.n$RY*M_mmd%\NQ(NVTKK5a8/
%R+GJ;g.DfS:e)7_[Sl:2I_!\YdXs0e\sfhJ3mer6pA-sFWofet6]XBf4+L78K1QT%#GKC6>"=55cqTu=I>bUS2s<[EB8M<i8$t9U
%Yg=b>F<%'!ZC&j.&&4_-#sT=]=O$^\:5oqBT=a<bcEe<ehqe+CP6lY_^87#(_R28aX"X%_NpT=8$hXB5-?V&I8,F;3K9tggp`VfL
%f2TUl.<iA_BT8$!bEJLrnQ5`7SuXOE155sTd(\m8H<9F]FVl4JfmF0Yr<'pn7tgc#]gP&WN;BP\[We:J?9XNe@)Ylj`EN16DN;mj
%EQM<qr+!2%c<e9$KBqVj+n]8<qR99Y?`UJ6%/3gS!DB<e0BF2Hnh4WDC`\18i1mYg^t1WjCQ7Y;%GuGJILQb(#G7k8eOY'mST=67
%s4pqm^48qm429e,:5<=oJ:pN`F<PWq*!c9l"(fm\o&["$km\&Wl1SZ`6*%&1"OHLASlu=BR*eE(TQ^qN$'7=$g.+bNLToesN/#j5
%gnq?V*IRpiqg[Y3)X7mt)7[G_M\4C2Yf2>`D4l_<7MKa8i=l(WM>X1kN@hA#gflU9PUo>s'q]eHX$@A-Y8DCf&qf,-4&!R8%L.4B
%kj*!I@n)Tm;]*X/_MmbC@jn"&H#[!e%-^5@7W#=O6NtLNPTa+i;=Krnbh`_[:H7/TUss]&qC=TXnq^>DO!&E66&KV]OtU5hKL%9/
%*c)rf0jIk$!!AE"k+RP2l"f(i[P8j;kTtXFCS)54jmo$uUS,]OFD)AiXX,YsH"njc\pZ:Cc$,hQNfN).MD'.j[N]u:.sK;jWIe#)
%*je7*bUBW$q[\jN3RMct$,f):A/A`L3YCGSW(;)C6neagh5)O%Q[S&NZ,3BJQn+Q0>'5B9Lt>(V3HA6ob!>(6A-6J8Y69pH5b83f
%[CR/9@M=4LLBdJ6)*had8J<Ut(3F.qf?,ZQf`'=kTa6;.6W)8fqqqIJ(5NsK%(<c\"V8..Oh1Ap$6EO%"7?GNc\I*m!>!g8Fm.tk
%GA;WiDW(C5V=1<:50P;?^/?46KRe*A05#esdi8&K[NB&\5M(OH;L<E!@ZY++U6&oVT8#U#7d_<[IN"SN%C1#:cQfs;o:U!TeiZi5
%\N6!>#X_q=i>Pf;K6S?qpe0Dm)pP20Hq.ue[C$LuGX%7^9rkaA;a42T>a#*T57%*#$2U:ol@5bQrQg,[eFU@ZUnkmOOuOSVQpDe3
%Y>5U<Z"R5S3ti)5R>lIa2$?3?@$71hJKhAMQUGTq.XS&6C&Kml1rV?2"q:KchYEkAL5[-rd)KWKfuQt<'/%C[b0s0BC733!22oPj
%3ih;Ff4D$]E^u]JYFpNt<8V_u.J->h5)k;Q9HJ>"4,.AJM^c'"3\jK;^c!f\W=Aeg_j;hHco.!e"5("V1L_1`q5o2[jsMJJNhE<T
%bX;`FCja%*G3E.]'q3.LWT,D,S:uC,:ol201:5Pm-Q4CHUU$3>\BiX9g&aqp,]bVUbQR6Q9Tlb:@Lqq]L.nplTL6RpcRhtXN)AAa
%LZ'X*e!E`a%>8.`N?$YO8*9UTfEToqC4eas;$\l7aG]o7JZsm)6*rI<h.$I<8I]COGi:?JIeMRDWO#[S=VPV*iH;b.bqrttmJO:h
%9;h2aIOiml7@c1q,T#5Li<<@^f5/>$h?<J_L.S&R)2&R>YBadFCuhQ*XB:@LqW+BHF)LPbcMp=65".V`<S$?4,tJas?hH^2M9&i7
%/%CGEJY75\\\.jcD6CM5#Z]Xi?7p&]B:WcJX'?CI',.Qn0nq2,jf9iFlPNDl?M/,^n;rT]d^+X_e;^_):/-E3jUbDh(,ZZOloC?P
%&(UBD>?lBb=b%t/"!FAo)o5'F)F.VM%nZndFq&@3HbFu)3I+7@opisYT%dLn>q^ND'(U/[G=hX:%UkP("#=PT6g=[bnMhRSnn0S?
%/>1b`#(t(>H2WiHq0q=j+UV/u>`Vb3H/t,gs3)0eLP@Dp@GK(fr#&DR="HuUjIn4B,*hg)FE!hhH)bN%%uL_*;WOmAUccK!WH4s=
%;H$$2dRp(b>SA.B+m!^$m'7R97%fi*K]p#n4+34/a\17Y](_@o)K[Y1@9k8R3BT72mQ!UDZcfga98/]^)&.fb",(=nI:gc2&3=q2
%aIi8kl*hUb>:($FCT*9]5T.e<3"j?C)80QPPL7p].gX/8DUAV6iXpM7UJ/PXVt<G-FYE5bni2AH<^3_KYb!=b>XEMNEU:9N6&Jcn
%c^HD?]\j,3di=8e0*-^0fa:2s:nHEHGAX2#U\>rl^(K-&Bj*gbGXI*3=iFZGY@aXb'i5U_O=As3.?2Yj0"ZkMBlZLo]rUm)"cl$b
%%2+JUV^sHS5S11W_C6)NT#ii>aKiO@<L`G;?cX<?/AnMsipEJ>Ff.2kZ=REK322GoWQd:4.Z[IFaQa::-qD7.-?b"_leoMO3&@:"
%a:sboJ70,JrnQGC=5FW[`@TDDi8TTJ<5AV8%S[S:)uN4k'Q?auiU4\b)X/h"EuRB?!CSD'7Ka9R[f8ksCmUY!"RBE>r%Z($+[;Mf
%[N%K:gc=,HH]e'F?DOBcHl6J[43[mh'U0[PbQf/lq*CWW>^'EVk9L2/AG-X&ZGX*^'K"&Lm6[:;Nm:t*coFo8Q_9a:c>B_rp6nJ`
%qh_/tco%?1P+MT/a]oAf-1@cV3G\_6i\X+Y7+(1igO.=]6$/Ao!PBbEJ%KB/h'l$H'^L/B6'KWdRp=Aa<BcM-o%4&=c5YN%9nWqI
%U,?IPJh:TPU'MfB,fp%8DJn9G`q:7(&UWSGIj8'[nl7[*<F(HP:inD8bpkbJd:&+UH84WSgK\rng-r'9oPXkVVTS$i/"6h0@ce$Z
%A`6%19$jmlm=a$5+0-a?4U6lqG.UlC6l-TEa[[$o:rL1do*c$*;9$JCU&aGC$)AOj0-hpN(91(3&K6Rl.XM`.Ql!!teFEnm\t.o_
%#h+q8aIcJKi=HS&U19p#>K*dtSbCNI%dU+2=<]MSefK.4.Xrs7V(4XB.#Sd`(&[DjN^u>UPQi3.T9!!Aml=N!V%koe$I55](G.69
%N&u]*r\B>4i3?s99`bHmWBu'C`SMkrOs#`?'qlUCKZQT1jNm,\Z@E1'8&CJ=l"^9aOFQ8?PnVZfJD5sDPDOnd6Y;dI>WaB)fcqeY
%J=D+49CQS^k$B1[[K!V$_fDXEW*;!T"bS_=2hH@<DFO+J$TS`+UDkIJO[Mb#UA7f'I<hpJ]^"5>P*;j$"#)>uf>2=d=e\]ig'aHF
%#Z=m'TJO%kYF5%/D-hB;G91RLE5Qs"-&ie;rT:*8@/qA]\kN,P5@_hQg8q:H4#CCP#]g1L`8NEk[eq]!b@:SU;XOmdh`<_jr$Xdn
%4\h1d9^aZ[#[&9V:g-(Zic9a@_MJ$l-gpr3?Ij/\mWu^fHJ\pq7$#c2L/a6n'uBahbI59/S*rA_p^49Dg3t!_\Z'_LGh,=6nhWAR
%A(B`'JNcIJR`*H>:NS]U0bXDQ!,tR3E/0L#TUAXr(i'd1Ym^p?VZf*,HebuV\ou/?hQsS]i"/XN6<85;P1$.HT!LI,-#k0']g;3P
%7:?<`Xep'V^%Z$g>V]"402.SgKES]I%Fif=<!Xe@hOE0ffrM0e7`q<,]Xf7L2>iq_._.AG$$1bX-&HLid6iX<\O20"T]Fc+kVOFQ
%\]$(]@,"7'VE3GqX9[d)i3&_R5Wf5`S@Gk.J2SufJKYg!9A%ub34F/Z#]Z'L[g9`r'9b48U%&&hSh&V(rA\2=aAK5%71fkIBm(s1
%4gk'fCGMr_+hj\1q<aoUFf20s.`CmU2W_2Yo1B(d>=6*[R#pZo?qRg"n@a=M]X\bs*<D4c[i$tf,c(lK?B8*M=7Uj`ib'(gbq2i&
%P@KEsmt\.I.fXE^IYjD@2Gd1JI@X<0Gc]W3HM%E]A3QARO``#gCk?U`fI_e?PI9B%s26:GN!2X1<"HV$ST?36,Dh(bBc!G8Us"hs
%;'\m3pogD-XPlq0Kar+(qIqgoWs<,LrcQ=AI4rIG=EFUd7!]EGmHN8THJ.\I8p2j1lPM`"9jTuieSklg8JLh8FRkpU%?skF"!euH
%%*qpjK2^U.?pV&q(>ktIE+Y3M=$`k:0:TQ:1FFr;$%$FW9#%';NnEn6g<agNo8A\on#!T#7omd54u,W.(B]WUApA4`9"X0'E!es7
%p>hE.pFest_3gIp6d]tn/4Y?g,t4`L3\U^$Xn5`'\aCC8U++3@VN]Z%kce01JDjeE:'r;%kfX53c_MZYX)o%=d*1*pM,S%P,`3uQ
%"^MVLE^%X@TKl4BaT>ibR#rQ?*=C-soLEZ_(sO?Lr4nEK0dU[qMWCC1F')0PCt6]LPGFk,fZs8G\BS`)Q4hCP(8The#n<4a@G7E#
%AY7^^G9+ZU9>'?D./YElcn+=^H6'!D"qCfS\*M+.bsAjRar!KE6D'`pce3nFqHt(*\B@??;`F/0(u'$bLk@:$c<4rrdD?9j:Tn!h
%h#C.d""g5b,fo<k8.?o#7g'1],&6VAoeYfKSEj%'epk#uV()QGF<:INg)3R:RM6Egg:O35JMfm^BKuVR^QYTg(&[62oWTg-k9eeD
%(PGM_.D8>G],Em`pJK,3nU5Y(Ha;^"b7[%XY2sk%?5#26o%`B5lhZ<.bYM*tdM/EWM\EiJBI`I<06rD%c(^P[;o\5^AiAkDHZ!o\
%2-a8F_#gggD"cB'#>KeR<8e2k2^X`P]t>@^>&$\WZNhq,G]*,QlR/a8FIg)lj'uc<K3$`D@sZQ!(>4t40?q*Z47G?'a,b_>k?:$m
%4"JAoFe`S/nf>G:nLQ;"jW4>O\'^69jP[6H2`K>5;c/Log&#0t3RI)2ZZ7@>J"&\G!P`UP4\TEk]MjrPM09uA2BT\7H=`jTle('`
%0]RX#kcfL3'E71Ps0lQ^oWR?93'2t8TDkbbfDf!Ys7XQOTDn5Us6Y<n55iO:WrMVHM'prlm(hism@lVD;4oX?'`p]^"!\#iM\\Sp
%0XQ"V15:&BG0o$^*[?KI">rJ\T0!Jlq/$rXGo6hA^k[.9"Nd.3+FL>eQ`$L"0L.N-FkKgF`r)3#Rp53Rc2UJLQX6qfcf$)WS\:"*
%G[EW(T>8C^Tl_D)mB%;t19QFa%okk8AH:acKmIOjr]SKWTOG,16*/(#d+cOp;1konDofF$%2=8bo.dJqg"Po9YY3:63]!3Tf9`ZT
%>=#H=&`ej6:>TTiNsq9h\*)][TRQoC[ec@Afq-t:OT@VD%m1MD^QD#Ha`CkJisG?H%:TS!4T%=M$PoQCe#'+Y-tfe9-nds?*KfM(
%e_9(F69;=rodMC.2L3Q@.V6<cJ0\icIi!+h=%QLXM3<Gr[J\t6$,eq(),6>/TZQ7BO?%"%]Yn`^esP=u$$<MtOGgbokbWrQAdj>f
%mSJQ[JKR3,EBmi%WhXM@)[PFh"Oj4R87aa^]+eU>,s"ni@9d3P/4::3Oo[KIlH&A)I`M"kYI\$u6a'+_*<OlrPGBj37I%Rf5GKYG
%XVG8B6)"R[[<`^(T+kHh0!>j&9PqW);e*\MDL9_@lR=O7D[1`7*/?u;@.?"UQ=E0r1MgY%=\R<N!l<"ACH0t>ln^[o$&/M6/9$sj
%ECmSE,?][VHa&43W1lQ--@d?,nhXHc6>49fmi%S"ll-BO[/,reJ@OhuTeI`6MZ&Z-!+BL[WBBUD\<()V53akrNr2oUpmn!0)FQlZ
%4Y*gbmQ_l,[`%@%/VP1;,Z_7l1T5Tp-E]W'o86O1-KeLX1/_&&Ypr855Sg]E,37;uWr''6BMd!k8'*90#V'=IZo=A(:d35Pr>DZM
%U5WcJTZP]`_e*P5GPdfW;U!Qg'V>Fi5u9l5L-lZJKN':<&OKXF&8gp8<]_IpUO6`_@)O0lnr7X"l#=+1k&pW.>MC:hOK:HMFN[a_
%36Y22+jI`t2#jXFis>=S/2Z1A-+#7a>W9V[FPp?Tl3&h^T,7$?nG\.?qs[B34G#XW!eCJiKB@V*a0'3Pa2WKS8SpL0HT@X;_'$;_
%[(\rh_s$.0c_OO;1aO(c'lBF$#,RbVH"'`d(5PqjaBE4s6JD!R&B-8lr%-R@OK0KW*?%7a83T_i[i)QqOo*.,VUZDH5*F@@_iH8\
%T%\2L/iIk'M/Hhg$Y/3\Xl&HJ](u=\GeIHEo\umGnqa;).2"Ff4&kB.6<;oZL'&m]a!!9VY#JLm!KJ;]Z($!Pi6<o-^L`Vgd7@j*
%<7DDcGicgDN:N'AfXe!p2W8jn?]lHr>mH'cBpTF3=@X55*o@U^?;qe]n22'eU$?J]G\cW#];a5e]"9]c*%da,l3MuVh#m'L)?$^-
%#tILBEenBp@!?b&_gurkBg<rN-;-`oqcT&6/M6AZ2l,&Y,$%]U!4QPsK=32;5_Jpj79d-'QiUHF@/07M%+\e;@3hBglafE$P-_UX
%;Ng!WIRI`#mP+=0r@A(eh=KM:.EMT9.B!=Z;O;Ni0L\-d?'gHcqZp:qp^u9:/mkRYA.t"CB$!i[@B<dRTn_G_KB!TU@(V%8,BR)C
%KEtTO_\scp(dVh1ebm\<Z[W$l0CIHtOP6t<VlDq8GSC3bhg'tM?rW,[0F#&/;+oVhL+i/fn&dg5E>2jb+^.&f[B"O8Y:aX25[N!C
%HMgW+3FD0CBeln-;Gu%-I3rdfH;igeVC9j?eG=q_9iFa*=SCPED-$5Tb=BX?Hu;MfFoQ`T:Q`NL(k!0.=:qBofGB:7m9.G9`%)qm
%22XCc9r;sT2p$8o@A'q(`:7O<3A\\,8Qn0f:g-t`\84kV,qQtc*Bk?._7s8H)JVX?`iHb)o:\C+F^IBA(NLDg_U0WlJUOatQ8L!R
%;kotn,h#R[!d'f_E%$#S)IL;19;UmUCm;I<-H'irSRU6/OF>bZZuq-H`XZiaYn4Qq=CThbjV>d=?F_Y$4GG:'nuDOWYmg;tdB?cC
%E[7p]`B)M8.-YW]1%IiG1)N%'pNc]A3=1<G0$e;p@WY@WTU%K$rA^"D'`EkODuo+7(_9C>RA]4$\Kj:tVq!(;+/ZP4rCe2"fTL?t
%3oJG[cdnfbNm"pjDOsH]]DU[dDd1qMJa4F8L$aP06@`ss/LV45X?-Yu4H+.l*-c47V)C%ZmEpSiOs(k;cWiBr@nh(m3qT@ZV0uU[
%1rIu/"oMgi.:MXf7T8Dtl@7fh$C-1'&^6\+a1tu9R)<N2HW#?RZdZ90$%1`/;`Y%t"MP],b^;>LM+N3&#Dr814'pt9jJ(X`U8>l^
%R'uI9]WXu7NV;$Cpj"aYq7W/iS9Q?cH)PhD`S07)+Ykfr/TUkj6kb06#Du?>?nJcg:3^HJ+Ptqsg]EZj`3&)$Omf`rQgn^5GfI`t
%lhpeoR3OU2-s'::U/"Z/LsSkWKL75AmRSla+^.p@A)r460=Kp[&$0RW*>Yto;kfEc9+8hMka,;i?5a3QCXQj/Ls45;RJgdjYtu2Q
%Kr!RK&t^8LiW)o_)t)e$3okn7I6+Lh^]cGT?c'Ii,6hH^+IV/ZTiFMG#%o^fiK(((:j3$%?1<Hgc=B?X17Hd\LjVa*48hj$db'fV
%QmK.#HeaOAD;TFPPjag7'4pC_L]_%cCCiL_PMb`hftpjIV#IpIPGC)D*OCgH"k+VIdlnXro6FSH7H?h.T7<^Z-UUhX)=n\k<5K.J
%e$U%t5Hj"KZU)"2%G%@/eWRiA-l*7lN7bJr9"(Y!cF'-??a:10<R)<-naJPj/<BQ/C7E)+Qn]hc,B$U]lL*.LTRi.19T?:dT.e%[
%q.4!&.1bi,=i[$q`0,8U5G?.RrJ+ta)nTG;r`bD[_WUG_?m!eG6m'mXji9AKCjAc:r,knAfn;S!N*09VB%0M)B05)*SG4kA9"-N5
%E&<HD9n8urZ@NC)ikk+C>9i$86Me`H-&GljElL2oJ?R$Si?'?/[&#fT#C*'%G<[b&qVBJ)5hL?_SVTr(S9OjQC:A,eq&):[[lod?
%!N6_02POVYPMK_<GDRV67"IlPa@MP`f[5U<]0e5Bj-IpBg<bUcI94hQ:_`2(.H'('#jGaLU7lG^Nu<Z;EgAiYdYX%S\3^q72OXi`
%8-2g0GsaT+SRDUjP%c!G._[GiIBSGiiZl!Hr.>.PmcQILJ_qh9^0ZqM`]m(?8ZR(_4n.4E^TJ:JbEUrMbH&WLO"]>,"M/BB4;_J*
%a_9mNTV[efcf0\r=!8=W*L+PG:n"\3!0cW:5#5RNn=-\2jCC\.k[>S@^!;72'FhoI`&D9-S;)/KIsNIEUk<rXD[k6:J"BN.hU%%?
%i(Uu=Q(TC@5\Tj<8g>7E.6/bJB/gAf6SifdVgUL`V'?)E#BV*^J2Tad4rV!.?j:?V"!=HNT4eAe&"aXo;tWliBV>'L%b)OrS`.qN
%Ol9!Q$YgdCKfN'Nm[Qs*4&NV')O%Fq,`gPc/0,V,4eMnb#IG);pX.(4#;]8i%t($.<K"o-#*Se)lD#R+XZJM(\q<&UU&@H4'*Z^H
%rYcONqY>\4HI`usrSSVUF!*h3)p.)p493"3IS:a&bf:A%1@tFrIXNUbH/_'nboFgOR00kC3t#bn%$1s2k!1imR02.7L-CP!B*udR
%%>SL?D*R,,BfeE?m5Cih3q(-Tg]8Fo4.pHQ]oPXT5+$o6_nZNJG';4rml[@f1-bqe#BV*WJEdPu5)]n_.N3Te#oUk>O7c'#If=]+
%ND$Y(4#2nA5R6iiBUa;9UX>tMAgD::pd!]]"5;pt:UE;H1(^pI")U,uZQ%V:,WJXt8_^^rSH8ZlAu8u"bS1KQ-Q=<sA_mnbW>.3D
%Ku+,N-`4[jpCgJU2:VGY.2Xlt"[cq"cp$or\ofbo*6cV@CtpgFYiuUF(^\J%4>DPP[/Cu)V!SDq\(cpclb"GEE<gTYmY'lLHQS52
%I4tbKLOfusm0C(JhG8:[A:b_F#BV*WJEdPu5)]n_.\<$E8D\e*8+Q?UgY6Sc\olklJ\2(GOEX$6k.QgFT0AX)]RA]?H2F:PT=9I/
%qA>>ag^Xh$m@_aBBYT\f7)9O83:NT`cV21%R40!,:\MU-6GpQj'Gd0_!\0t#pr!dTM>JAt6BUmD,>1ksM'XSH`"MG.iCmH'*R_4:
%*5P*-Es/%<n"EJU9YD*,(s1LXi(2FJ=F7[I86asl(^N3rS[&>ZBX@-nT[BXCK7UDI#olJt**)l`37$/ILBc0:i'>usQ0Ir_)@=\'
%4>DJN[/Ko^V!SDp\(cqLp"b1MZif#R40X;plcohUD)s0a8_[&!5hb1qg?8Do>9=:l#huV8XrWb+p"'$4:XjaA^_*P`m+(UdOXMCp
%6<aNo.Kgm1a6+?5OuH:)Og]#C6G^E2QBCS;#/(q)Tnf,2NPEiif01ROTN/aL1-dmh`adHE#QAuQZU=of4odSGY4TOeW#^TU#IGM*
%m2/&087nE_W+]d>Ts62#9J\eJi.auG\=n<a%Wq0d5a#O`_^"Va#BR+Xg;/20r@j3Fl!%enaKW_Oo=b[9O,e0)is)+K<!R8TXndMJ
%-i1N*]=RB"d:A<%c@^C6Nppc6GoT[Jd"_ijK)4]$d'Woq)0?o%3p8[1[-8f]+&-Is#;bR+L4PCHO$iI<Nh=490Y"*G%ZOYQNfIk8
%NnOng+,p[V.Xi>M8+1)<4a$mdYK'D[p2oTlDXXWd%'R\P*F=d/g0Ss9O7rM;K,J!V_na=EA#!T7]TKgMd\640f[93ifhn5In"Z$(
%6q+e8qgTIEn33UE%e!>76>.`CP>jV!aPd4^aPdf4132iY$.=5UK,d&`I$DP'eGJEg5/!-llB6B^7o?po2T+BA,K#@qdhU(bBI)PZ
%T7k2gcKqj3NF,k=r=1tcfBTE=R[A/N/,3d,V>BAJq_h`r"#Sdl%CLb:Sj8/h79>IsLs0qmWmOjX:g:>l#P;`\g?4H+]p!(YSf,gi
%MYj7KO'L/krVRB_PM4*"SUC2'g,K4VfucD[r2,#NT.Wf*'Dt]Pd6.>UXT6+S.$Cd[VP4t.TX!^mT,C&sO0m^R74\B\s6iAT5KcoM
%Y3N*$Ci-^MQRgg]i&@c^pipAbS+2PCnE)/nC[hR/4FFiJj3@?(/U:DfiK#;[*LG]nNl0#H.O@"!``9"YH.0F+`B6p#ef"LdM05E,
%Zkg-qXB(06T,-FpWV,g1r'C>>L]!LZi7@5?`2d`$?4AR'l$a`2JCFJr1$eRYOUmMg$3$k,Hld`d#>Y$jLTTL`4[-L^BDdCJE'6a-
%C\W",biHKV&YJKKRGqR]'q_BXOo,S<j3q9gPPi.;]TISQ+eO#09_/']nqea=,l[p=q)j@fjL;8Q,?(&qIG84KjBc$7-\aBi4XPpS
%1!BC63<ln3'DsTNq)nSXq3W#ALFq^'iu#-F1]BZjqO+&$jBgQg-\h1hC\kt/Ar;(h7=CcE7.N"8W_\R`-M`)5qO+&$,[]9W-\h1h
%$i@k%As.XpQ$o7@7.T)up5sF?oY,0Z5;SP?IQ9-I_1F[%PRgpQ8&iqNQkMRWW9&G>-f'Y?Z]bo'h^>Q](c,h&@i"hq1RUhJ[)5\`
%jF`cnM.]N3rW6m5bXs4&hm^[&*+L>iD6*T&Oj)lmg?'bPnj2U>`%NHXIt<<&Ag7u"monsGFtqJBY,,Gr]r?m8Bs/W;d9JBc+19c@
%LO-D_)i)";[l8d.A@\>kO4s$hi&k64mGQd*h^deoU\r8l5Ap2BN^%FTO'D2<m;BB1)?$KkIm1"KNG_qlLL'kclgA!MQ0>u=L>Z:'
%A!Zh:i%#1"nCojMI(ZcUchL#tr::V7c-LfB^O1I<p<WL=mJU,/[m-2:G?f`<Y(0`f?qdU]X!d>I@8*^[X!bWs'k<iPXIcrjN\RZi
%PD8)*98:Po9=Kk:jRWKA^2(_VgA(dD"n!9"']oYUI2@m"ZqkVMgMRqUo%2#e@t^Im_YXf^[[tet)nMV"SMk<CT%l4Npqr+2[[tgJ
%)tSB)d!;DD*Wu/Z4V>V^Vd]'@80X-U%)/EVi;#;<7t4#ELYk$aI7]S6IguebetM)hJROELQeVrfl;F9]6Bsb/D3rH8LFV"%AJ(pj
%ABucKj]S%[HEH'`aa2#>JPE3'1fQW5G>p`lBNO4:+%6U5)[`Uh(<I1HJ5/l#k7N[GTHP-1cp:'s_Z65q)i6kae#3`S/=p$CVPo"$
%H#2fB6T1=bPKq02Hd]=tohHD;c87YqH%G:_8.F\)MV.Km]gqKf]f$FLKKi0$C&A(\L!/=!qfE2UKV.dqP5[J^66$N]U?K\MEnB0F
%6fjS2oa.8eTfUtZ53,O/j:gi-<f*[O8A4sMIY:6Tb?iWE8it;[3hhCo_&YSiGt!uo_e9I)R7;)X6]Q`Yq/%OCfW]%!lXN2%/2+LK
%)Q:Q&N*r,]n":9O9Z*3'>6H$=QIOL?gPco1['41@,$Rgdq-V.-%=4FCa&$%^eqY2.Y7O^^Xc!DUH$?>c]44B97U8u/S-;D\**:+P
%GuY9$#eSQb[Ef'Z==42-m$om1*`p<M/j*/6G'$a_qp$=U\%ON+kD_,'mdAXB??Y3'1]Geh5L!Ur!5aca*<CrrMaK28+$Ko*JDO<;
%BNpDF!L`J=*g(._LI379H0:R9Qd5nJ6pGusk$?UMMd02)O3<]XO'c1JBDp99c;01:5#S-;.&[H'U)sk:!-tajE??eOjF>3W;Q<7K
%jfQ31Si>?W"SP-Rp[)F20?uk1-Tp8r%32RZo=gbK&jt!Ci&m2>$`pXu[U9!MAkbGB*`7gHbC*YOC/Q)nI*<_=N(QrnAr2^Q3msD\
%4Uf[^)(WK.ID;L<P\<H`afmD&F<L[^[:](tenP4rR2pIm!m6O+g?0VmN%S:L_7F#/q[.YSq`X(%.f+EJo>d(*QWj!?f$C/b8)>NH
%c7qP(6Q\*&WG@"-%4jd^;f-`'lu7H6%LoW\c>a/NU[$a?dJ>aPkqk"]5;-a?9Vbq&SU9'S-t=*-a;hY7!:HR,Gt8X.o/?+7BPV94
%ZF7$\eZ-,gZ@#!?_[B$#q2l:</Z<YH;VQu]eAIf0]'6<^aUN@%-rAW?_-#HRhsOB_8N&@S";9,`U+5j+$o(\_IG<,eghQ&+Po'KU
%P;#M9o0-c`fGJJLC1tZY(TNP(=H5WpWrXV;lbP&f8C@,BSpn`f/cpn/;P2mqYA0i+:h"T])'G)*ZCG/]Uo_$8Lk!K#Kn,lE7b%)#
%:g#MJ(=u58)D>[,7;J1]oMJ'!'U"q%,c.Wq@!5S(!6PWN*1r;g6Z,;[L^^/PA`SqQ,"Ts3U2n-t8Wlc'F]ngr?/c(02N5i.n*3g5
%_tXE#WNdKll^Df=Bm7#JP/<@q!IJI9:DVS0!Sf<^5jI?k;U4Km;8$92QUA`u^`o;W^k(+dLk*V3Qc#-EI-0n+Ep+"r?74gHSc_4D
%dNd+k"/k1PD%S#Lort9&P7d9*31&2o+UJX^guq!A>sM_V>*AFhgpVtX[3Q]j/W]P89-LCW$-gW0#EGPBk7sV7N2_kf/Yq`Oe\Q`T
%cN.A-F>M_@3l+V$S\h<%:@L>(Sli8DGFm`j>>I:@hg=srqouUE`hOu-s7RN>W\*[)0i=Q]_&70Xe(i.Ngi#@6X4qU5Ve-]'iXF.C
%>ht8nhXAF/Pl53!dcQFCM`XhVGIf)5\DNKZHoU#JK&=6ljm0Of-,.*C?g?6%DbM&Eh)eQL^3aXQ_<:7"W@NA-3Mk8qGGfh9p\*+]
%Fn>U^9m#h.Q!JA'%[FACmhV1,n(sfpm[H/7I!kN<[DdI+9i$"OQc&A`?1Fb(rjB-+S^V!Hnn!OmO6#)tU]L4JYY-bK!CbC$'U3Xj
%co\^/I<^O!]$BfI8qC$k>bR]9Zl\6LP,t&d?us;>ER?n/\m9I%37LdXMRnPJHt[qG"(eH-U3We$c(Q[YoP09.p!li/O'C!5HK[;#
%<*iM\?Ik=DHpimk"/7`PX7Ic\Z4,a%FX-8%cfu"!/kq<//c%@!C6_>EiTX2X-fMI6f/-_,VRW9NZAPm@1Q'T!Oa(i'$/D\VZ<#(g
%FZ7j7\D)&Rd6$PD=PC)7>)-p:q/&Lb?PKKp?9*]me7ri@rWc%5`79Q.MFYY4@C''WMd<_G9s$A3KR\7DIJ<?"Cr#o?(MlBbI=Dpi
%latm_hqm7Hp$49`MY69gfSoV%rcZ4phqsOI#.n;^_:trFd<%X76V:rSE/Y`9eu6"G=LNQ7J7)9UmO*DG$Homs_LrHU/_bb[P2g=<
%Q^H?FS4&OOV\<q+a)aWtM)(f&6q'H7U&r9=&VOCi-uD^=eLm\G.[Y00#6$5C<n4>!!?%Qeffr$$F&ZDt4RF*k2jV8[MK]@LWF-"-
%reuA,#R(9"AGoC9/DN0dE7,Jc+_MtYX[j=-YTjt>#jHISi^uSKO%Og<\IisGI@Bo8P8tl[4caS>3sP*H@FRP7/E=qSAX9eF8V#4l
%;IQVgW^;_WKfVN)^\6]En,O^!HF*ijqlha6!9ngEb\'NA`acPhjO?0=+Hs*9W4A+84f0IH=4q(QZW'77,SS<u'qRr)$F.DEX*j2m
%U1c"1_&k]c:oP68QkhgT[Ohq=`Gb(I3EW!%Tb?))];*XhT=VTE:n\rS9a`Zo6trTFbo;Oc^p0'Sg[Ma@dH@bB*85,U:f]kBaut\n
%7a^uU9eum9=DQban06a:B7%pjh=67tap!Ejpgf%#NpF]V:p/5V\TY9W0XF/\'#:gI/Wm*`>=:H4:T2-43D[>1$@.ag*8ra_(AYmS
%l4&PaD%ht:UD#k!ZJL(WAl1MiD^VbApG4b/[nsadac[ij!2'CO\XcmOlYVr`?\2Y.1=\OA?&f_a6!Rl<W@ZS1a&Rm\PX8888YD$P
%P@ON<h]'23:<kETofc$s:IEi+8e(*!oUIlM$3)b6[&h[>DGeb9.E3jB"Zh)K`bM15SVI[[#L)5-Mdp$8'uAto?od"]#V$MH2InPt
%NF&,o!qc-Na3cP;,01H58MV'4*%HW$&."s7Y^qT=4J]"O'+3bFTsABk3"*G%b2t*IZ1UQBBdM6:]go&Hq[bTBrO)X`+G4.0P[/>g
%'hDnd,3tKr3`=<4(M]nET)9a$fi>:;pZKD34d;nc!%E\g$F7P[2^uBerBg/^W#c^-&.>/G$E5P"dJ*gTGQHMU,f!%fF[0i2Td]Q5
%oF!iV5HO33CiaYO@iMCn^Y*GpD1GX;Y9_c@Bn2&,h*9/n$MLL%kWd!s\KBC-/<oi)'(p\Uc<?_B#Z\!Jdkn_eRsUSWC2V;FFgZ]8
%VUh7d^8>d,XirqeYHGp3o/M[,OFoMg(Vsn7!`/HD=\J&^ngHiJ(ItdU[iZ7N88a&`PscK)#AB#e[j6kkJcY*TX[8^%RUE_UN/,O+
%DG\lRJs=AQY:<e\#bINZHKLd+W2Q<4`sfC4m%H3sVN\1.kT/(dM5"H"In9*EDU+o+,r@=)HD-[,X=R_EF&/Vq7RG`aDb_U`Li*7D
%HtD..9r'U0l3LC-f/Rs/Mf'(S&V7/I/9_[@BRk-[dK&gdb$fK#_eD?Zd+N/'Ss6QHQKP/`[mQZ7\Ri4NV^k1gHdV]EA39;()7Q)%
%Y9HQ)h);M8Y\qtugQpMmcs\e0;CZ<b%[7A33YB)b-s]Cc37J]sBf]H*l+,T-o@"5FBZJ0ElIPZHJ*saO:atO@GeEJ(1l9LNL=oV)
%drKg"n*hAJ@;;p9U1?j3HFI%/43$e*/HS&YU9i-R\e&\1S2gBhWl'S2G+5"lj"lrt?[/ngP6!F`AXfPO>SY.u$Vp.Fd08,qC0);&
%pje7ijX:2?l6aKjV[hkApq+Vak7XO:"!Nfu!9n9>A*r(1L\hTk8\e)USHB/@cH9Zj:A/D8/<sS/q?)#!qQ/jW%L0WV7:YhW^;?hE
%@N7'Y6!g1:*?BE%#92,gLU3,NSA^R,dm'?h++C,VMd<[<*].ee5!=a%hKaQ3SKCtsLD]-De"cd`]BSrK?bG@$*r@;cHm,:=K_^>K
%^O-q^]cg]7Ut2jR`5%)$A>)bdoe'/rggUiI+6,u`*=fpRZ!>%6&$Peg>.X%=(]:rD^i+,kW4c59!;QLeJ?Nm/"4>$Bh$BbkDch.9
%T/VD>2n-]+H0cJZ>eb8O/D#$<@4^PmqEKJb%s:i#rh^F2.@/<6ie:k;j`7E*O2]c`!VC35=P,LfALY0sqLKQM/@gpTVnk%(M*S"?
%i-cLjUL2Kcem0=0[\KUW<sh'&Gn<rV$@alJ5h"c`gi>u=H0YY46[eM.JTaskD3tc#!OPo3D@2rYNIYO'@[/(L>Z1l$&ic:3'Ek%+
%BK_ls<7bc)]g/>ocj(sE>gO]o&_N-NCg/2lD/;<',,pLo6`T,T"p<28c$T7hL8#$5Yp$1fNQ$4)mR=0<6RDm%@=kG9+;4<&EE(2h
%"h@We(et/**MQ+;KML%U`^a*]65mS9W)kEfCkn@+%ePBn-@Jh(q#@brG.j4&<d*DJ"8WQ&V1<`!;@\-[3IXk5HN4-an6fiZTUlM-
%[FB)eY1c]F4n-3Ff34XUN$(nFo41k#HU]EVOLap9K#,e3Z1d$HZggL9nTG++0j\6Y[0g_?Q*YH=U"Tb%,3)g;d92&:E0!;\43Bu&
%q4RlC2BbdsgHm!g*$K[.Tq'a,]n<33[')B"3VJ"<j2E;Xp(!>IHU4PQdo]Yl1@.+-%6"'D#o((RI:dREgC1L3-4%N)c;1BUL(fm]
%fNpH*gE@&.<=,l*BS*%%<EKehl8tjB2BF0rXO3m$s3B56'rh;tTtM78NRVkjjRZk-LTLhr2c[/7/5^I!CQMR-_Ls/06@;2<V.-c'
%4UC!&e:(5N&HAe";VQmmq@$=8/0s\$H)G-S)Mj/[93B/==kc[%OF?;(+[6<)gKI>c#Q@(9^O;[[S"[M)(G8+B2qX4:6rXB5TnaNC
%;>JF0jpE)O^:)4]RN\6CZ..NWoe'B7Uj18A8D\J37DZ2.YRP?sRF+c-07+oP`Ap"#,^";OXL-dcb\cOV+E,N-eIRYIotKA6g4LQ\
%_HYbh*.uR`"oh^u.dsNT*4@-h)%M*nCKuH_/NVW$[ump-94m4-:flCGASZUq0a]HA,M"Kt_I]14Ggp-h*W@<b:%E9H[Sb7Fg\NA@
%mL15fP21*liK7-VFq!$3gChWKGb%qUj-L)Ip(r2\7F1QF_"*Hl-3f:U(u0!=$QUkjR/3E-,8!gk[&nLS(n4bWP7/CJg<hj`a\>jT
%[2\^ADWb,GVq&@I*BrOtC$]8b8H$cF%D4$`cj]44j4qB;K252j)s3fo6P1j(3S@;4'XG!DO=!BD#ZY8nda-Wb:$p1/oXq:5C")4L
%g2c.TeI[%.?Fc_s.tc"K=d?A8gE:QE=.L>>Sp)cp$@<TO7hrtQqV(VoJ9JtE!R?OLL;DVigU2#NeN"%N1aL0Kg(<fNYgXj*6X_<i
%'$k;r,?OCD?BO#$m]SVd_#soe@#:Bl3Z3/Qk"SNE"*Kek"PYt`+]@TUI(Pb0S(2SA&Q:5Ek7ud[HeX^"_m&G->puI<NE8X9He:a:
%Kb4m)!06$PacH]_:"XZ@9tT%bTTN2F6Z$hODg9rZA*G!9VH%!_DPuQU'3DNpVSeE_k)^8/qI1C)JjDMM-1oT=5kYKg2/Z6!,'WOO
%+]C\Ia?3<;[amJF$O'H5dene4lub1=2RF#dpfi]4V[2+_I"5bI@^6Osr<\30hT2po,^9N-eFp='@3Xj="qZNV+poBBRbIW>3(bA+
%L9YaK3Op$t_Hm(DA;md!S&$T:OFXR@Bf9_hcfH?o-75Z.%iZAH4bA#pf.*kX\r@jgZk$ic^=a*e4Ttgr<hheu(bMG#cA0,)ZlUW@
%gXb,!6+-^0<`kRA)=;n$>&lAT?EeU68</jO8r%L-d[d:)CXN?I@M=0\(Rm%\B6!^HQf8E4MWa7*Lb)"lNbO*A7K`6Gc?%FPJWTj0
%at]35StmNNo[.9R];b1`>qRKaJcialZ]Pu\$"JFWGa+W\Y8S7!?h?OiPD@08ij:Xhb2PA%[_B3R'^]JSC5I-$81lgX-3O`"]dVS:
%D$0W2m=qkJO>aFoia0Yt@u*R<SA)1LRYM3HQ)%uA'rfjT`L0%!h!38-i<h##GTB2AH7U_0?k^cT$gdgP)8_RS(1Q$Zn/0YkT6osY
%orTU(_-<l=TQBg?ITmUpn7!:L8I]@>rj"UW<-g>9l+4q&@OSj>*])'"Jm=RO&6/(`>;p(HjSLrY"jCqPXF'MWd%?ZdI$d20#?<i0
%D=@FlX+f;YEtk;#@b0:h'F@SO1tk4MRcK@t!3>[mB36!"#QaS"9l$6c,2[ND^aSS0#Zr]F_52*_clPsf=0;EHBktdb\]oD<j4s>;
%O"dF8F<(e;%H%\04nt>\jWf-TYZ<c?X)F=ZKSYO4"6TYQro0c6bi<O"%kBJ4:Rog0_]L:9&DFYr_84Ds#Rqn<W:X'S\i&f=1K6Iq
%5E*sN8p>VDOd'(2kU+N.lqPp8"k4mKT&rc7,KNen!+G]KPX/]mZVpu#BVBh!'=.1qOS<jT@4+)>qiX%sf0LmgLFMPdf=%[GH>cU6
%2Vp,]/s>FM!a%M7`Z;g/&%4@BY"]/>ZY,ZtW]Mt%mAor&DW3UX'OS7Rn1+<=LtGskOGh?#3).]'V,I`X`XqM-&$GfFe;kSagiL#q
%5+SMH[Ol"(!MR1pM:X^R,o&[EX:gZ"%4%6KCF.Y8.!k<u[O>&VDD<'Hkf2Jf55+s15T_]$D;S;SDBNnr,S(+*)L=7t>/'K.7l/t)
%="NV`a3ebI)s/YgTQZ7?kJmUF<C[rn.R9%[hir_A^L,%2`nDlB9>c\I4?hDsP]rU`QmJ4JE*..Q_'Cla_<-uhl[nXO)$6"I35WFD
%?o/ZZ4t0k_[38.h2Pa`s5X*Q[KlgtLC_Q'@2H+H=F(t&s^f](R.h3al'AQta.KqRHd+JT,+'8i9#e(Ed?SV8,Z<!Q+pp,jT"U:6O
%20J`-FfPU6"Ob7>f*c(V#U8cu!q9:+k-)i6r$8.N>D^d]pqC$8dQ@mu]l4TW>sN#[*2oD/PTIW]S&>DUQd)7.Z<%TiGHN%m<S7iH
%\pXTV5:/9o^`^ftl8dYH5r(_F(h)=RZJ#dM-&bAdP$!9f0&&&6fb"DY6B;ENF*=YTlA_@n@h`pSP>.OT-,(g,d@2g-&it8+E.kZX
%,CqN,D1\^9BL@t;f=h[u5*m$m%CY;7")Ze&;q?SUn$5N5&DTBD:mu]LVLf4O@BUIB6Z=gOfED8H`%*c>P%B4l'.L;FNaHr7C$[\+
%WGAP:IpQk;/@'G9H/11Zg*UQt0`'T:Ir(jfg,ooV0ZT)De#Qe@EXWn5)+Lf;O<k._fo=$4ets<JOdgsEpDe!a70`a:YV_/l8HK3\
%3:.;"Hu)`G]Uk5Yp5Q<QH&=\*-+#+SFeqPHY]`:[kT@Y1O1)D5=,#-<1#!<f[AkAsJhROLkOfjRH+PcN+fKa)!On3b=q,'[6JaYU
%O9&iljG(#Dc]EgA.p>`J*EJ@1h`6/FEO_U=35S:N20K"70%shan,Z`$$G\1d99gc%aj\aE+O;2idFkc_6<g90^'6@ChH#906&3S(
%1O=6!j:_L&K5Hok%@*Tm!q(4L?_S3BW.BcrX-QB]]4BOf[1cQb2s;-qH4TI1KPnNWOtQ7,_uQfY[IMEu+$GVsPI0f!I$jnb\]hIR
%13r1a:8<[Na<XoaNX8V&O=2G`p%&81<m^9%VL$,biV(ntqtD&Jggb'R#0U%b5AL,IqA#k&i0g0QSLobXOZ$/3r<@UR`VMB_(:"Uj
%lLh024+N%"8n;TPn1B"852RF<mA=_cRtA_0:r,V!&3?%:g6Z3%hk^U3!6._TqFui4JC?7p1ZVj\?k/:0aitD_L[olT7a!.]%GobN
%N%u2X-?VdZ.n<u_Fea"qMsuh<bJAUch:q"qqb_BSiXBoi]/T*fk4`P)6FYJta%uS#'sNc&KZI/Ca<^PgZt^#MY.8;`:i@<[k0Up`
%BT8'J0q[/@E,&k@`mE&3:q\H#Q`2(rA83JU(OaDRdC8Y`Tj.DODg,^"PGIGK:-3k+o/mre<*KXkjo!pI)SZ%8huDsPJ,GB-q#8<`
%r28HPjq%L`jaRO/\"D`h%H63Xr;6NkO+6rFhuCU;hu<T3s6BR]:ETVg5Q1+2q!l+Gq;:\js+(,HiQa4HJ0*o5h0g%75qiig(H%2p
%gYQ_J"-HOgA60Hs"AihM,k<sa1`F`#3&p2Df(ThdHD5UUZaqL![RC)rLpqD*m7t*$OQp;`G$EB#!gM=JYXs!4=[%9<j4UN^6:_16
%\!h'X3"te?8-u&+O+#BS9gh&4PI+/S(H-Ps?p*&_#SRN3?eNHCN$^XHFD4U=h6(L$_@@hC(rHeqbpacU\F#:$<[G!"Q7l3_[p(pT
%H=t-Gj?O;t#pT6_&2+\r6e[s\J0;%r!G^2gkPh5Yq*$i#K]$no9r;e8j,"s?\b4Ud("usb6D)V:T0k1i_g'[$-GVR=L<9gGJ2?c`
%TXU'FkU;4U-P6X$b;8<1%`l9C\8<l$#YdQCnUQi<L1e7nM3+.,K.s^S*^leU+!>Ii>tCYJ9MF8fHoC&a*;X<c7KA'fm<1>seiOhV
%2Zfs/dJ,X1F?4595_A?f!*rqjS23/MC7j1fb+L0U(T+>#ot-0)>Zq]a9&KA*(=7\*pK,7oSIK96:&EGbJDbd)oXUlSVKP]Y=&3`A
%<rokTZu84OK+:c'8FQ)%=)*LJHM`sdmBHGh,M5^R\XN51:ekdSOh(U&[R?r4>.)V*=(&gr_CLlh#E:b0!/>qlH0>i*I'E3ul51(8
%=E'9h0d?uc473qe&$o#jp*bY.c%_hA]Cj2WN<$?%E,lI#n^cG8qt,J:DR68&A5B8Yo)n!;Gi=N:@GCX.Js<NpkBk97IdB;j5(qt6
%X+@(P$j.Gtl(,D#@iog%WEgj?[_"NIhH_"<ZF%f@8<aE8,-aJB03#5hJk[WPca3g`?7_3sYTfM;U'Yu`;ZPpAJea&5***PFNJ<Mt
%_Y$sSi(:Q=3u;gBWlTLlF,@4;"-Kt"SM]#K\iiU_&iL\]I]Y2uLM%?*_8c(/>3Lsmk#@;JUCSbuHb,>>&8cu;OE4L@,A0)&3j[>t
%Wl-,E1=W?+0:Lp(,PO=-G;u"1D!gq[\r38C__'>n$I;<&JX!KY?lW@1aIY6T<>*"!;/ql+9=>T`JcbRE4E<4$l0s_Dl`/0cK"F<@
%ZVuNJ[[g,<g.@KT,Tji(D[Z@-eLXD*2)fiE"i,2+DjP^^+'7%?/d:Kh:_U>;6ABgPKh]W-Xs`kkXu/`@5rWaijq%0O)RsNfN]*QB
%_\PWQ*LYV3_lMFO("'VY&QV`lg*0SV/-Rm2p.=eZi)t(MpObD*h:#5-AWft[)ITLHVBa6+VZP3)=1P_,FF]FV@SFUu06Yg\=ZCX5
%BM.;n,YPG6b]M<!9!lL#F3c4Ra[mOp,/uRGG^3M`r*f*9LdQm6%``e%743qu-kQmU4L8+7PqKiU-[l[J0Mk#TmFl._:3ee/<u7*V
%?HP48&*lG9\b@F)9->mmS(NnW-01"D!uNY7Qmgm3cEumlV03e/n-W\e`263P4i6D#\skN!R4G`Q[h[34G5(AD%(^2[8m/jUPNoJ1
%^)cioS/u]R_(pUb$c:'KN%@BnYe@6gHk\k='Gn]/-t88mK=Y[%G-o>IS.iAJ]Jten-P$g?5H)FqSoimVKne\hXKj$g8_T+feHRuN
%cjjgr2Gb&"N.=hcH!-5X_)Zji_LTNsc<peEg)-L)J;U9hd4Y&d#"7%NJk5uDVW)-J-50pFN'0tq@A%Ih!HkViG.W`7(<DH&=bJ\P
%G&U;EduaM17pnEe@.n(O-0W`e.@L.@YeT+O2;Jt4"`qX+DiZQY2<7TXDAJdP-dpQd.85[(#K52IFcn%lI:u=/CZm*RW'J_kV(mLr
%f00uV,?9T1W!Kq9V3Y![QJo*+D0fBEg,)d8_KcX'N$-qWkG8i#k').oj/XLWf/q;8\ej$q)B"[$8BQ9RniP1[eT]_PbnQG^e,oZJ
%8<;&rUBKJ@`"=?n;T9,Mr@+14N)VrFZ@1Nmr\t(!r$:KV_:HlQ%&8u&HKZ(U\79.2WTaUb7OjB%Pgk[;!<d%8Wh$_V^3;$c\5]Mk
%gp$d*Y_H]9!3*7=SO3MP-e/^DhO70CQIfO!W0RU()!'4F73VLoW;U2dZ(s.-hRt(?70)"n+\fB2rfSNk3^=P-ZA"UlY#k:?.BigG
%Idnm+*uN5i+r$J'cpRL1Z9(EENDmIffE#O0!Kh;dLeh**P-1dbEp<_5Y:61]_i3&$^6_cpX\<EkXC67sCcfkU$m^LDmGU3^';6BR
%H&FST<I>RNJ<G@.[U.jXZh*>Id4sh/'e<22Ii*1G_kao>hIMf"6&Ed8ODtImb\JpiUY-ge=hm[IIlVq[TM3sX6RYmHO07/Nq/@sI
%C0RrJhoO.Tl`)Ni>gZCX;_bVLpe*I@(d^g:)P/&a;fF.b*E'8G>S5&Leo9pZ5=XCuIQ`jcGHS-<]?Qiil#fi_l+^J1LG=2.rjfS8
%?6;84\r-`!;RC#r(;_X3HhO]<2Xru<`/N^a)_d'OfZ(?X2c63Pfr;?o#$bs$$riVu>!(HsbfN_80M!/(?<lB:c><b@cQ3Q>/ok4H
%R>4]6AGO#/$O,X?1m&ooWOL@)S>s2WX#Nt_gqB@X]701j-3M!i26L\n&n17*5Rc+3iCOGRCf9%FF<FWooE`BcRM6;#8!9k3jpuq`
%9c[X8l%3T37hh&:$ist2JGcY'0%ZSl"$V(e_bg5FZC`:+3`S;I>j6#W?-P3C%5_:BL%6FeL(ol43=gH*F19SYQT"N-I^2B`?_*1=
%Pf3N9*8G-3d<I[?0:Q3\,OZ4PHb-;*R5A&MWDdji2bfHoNbioU;RH0L?bK+.DDu%)V?8d-VMist<QH90FrHSh+1lu[[11AEmA==@
%C%P#H;08;T3F$IM$#)rLliT>;5)A^SAdX>h0t,:[@3j'SA[,IV>T#;%lSp:Fo(=fYIM_l9==cPMr\N$%+\oFJ#3*8.Kt"BG]Rj2f
%o\<gFB1<C(b,#BeM_6^9O:]S;"3o\^><M?18^]>A"#_hQjLam)AnYPu:13D8p4jhnN$/uO:41dVHf3JQK;(A)-f;mGp">i?bQ>tT
%D#6:^,G^#,H$Hg+n36+mphG1@-J0EO(Ui&>*:6cR1k]:L[upEejU9O>fWP@bcq\b#'b\3E/s6op449+n`5G/T-A8h^@1,ZXNgW/.
%>L;[a,8NkI[<CDEL%Khl@D7qnBg-5r+?"ebSn#6DOacau(K<rX'sdqYa4BWdE';S/&.YMA@J^:6a:((1_sYDs:_`5Y3n@ma;5(.6
%Pmn"Viopu?\sSZH?#>`\Ib(VbaBR#W8b(W\%OAtfC#3+[+9Dn#aCpXN!q@3am8B't(r6U7hTSpBpd2Ak="XJ$9bUf9bp7XVe)iCg
%-L=da&BTBCZ=-@Bo:Ch$Q3+^'Kt25@.F8V5`+YsTb[*dq!'gpP:_JIlM=R8%VGZnNhV$9Q^+!f1!Y]&Op:bB/Pq>iG[>_@;3WkUN
%#7#h0f^kK(B+g#J6+aZhXdoS4J9kQeYaf6oR=bB`j(20*2mTk+8q<"\J^hS:%9)g$ks8c)p4sI9a!$s[&Vsp5K\uWTCIg&PnpCU>
%S6_u@<fc^Ph$8IfKZ!:qnn\hHb5*H3Db(*m>n#:<Lo"SKMf[&!p5$.[U:@5oZW%cCU1+pqOAV&b+TWE\YIO=]-HC_BM0'?mOs@ZT
%E'9]]!HKri+Q'SQPODIiU_.3..q\kq-.HoZoZ2g>#JhY?6_-:Ye-iUm+<A_p\;AI*MpsOcAquuWP2Mr(cEJ$NB^ipJk&g\8E85d.
%2d(5gr_,FYbf#TO"fO_bNLY;dEi0DDbcE-"-\EIuA#_KrLS@3A=Yu/#ZP6EJ)/#P/6nrXT(SGW$)\)4@#Rb]%b3S)\'cM*!;X?Hj
%B5g$pK!%VF,$daBrF!+%-HT;KL+Lo_5C!1kR/"UA+"Ij]L/k+$C_i7EW[SOi=s0S/qs5Bdcm3_BD4PJRp+Ja#;a9r":X10:]0u_;
%AOrX9$.k)h9kWLo0F@rklR'<PSYSg",Uti',r&VkAX'O/@3I)<`$l-Xdo@p:A<R2`8A>YX?dlH0"DAO$MKKHam*j0U/3&oI0Ei8n
%SZ2YIio$n'Nb_c1&E\k6Kh:&Y1Gs3FX/?`^)640/#\X]q@1REb`!*n>NXJ<GJ0#6Ggd28][Lb=kl8XZ"9_l:Ec)X:/H)2MD$qO7^
%"1\^(IU*2%cZAqpec%I;Voj?q14k0(T..2&,o@9$%W6i3iEX"jZKd"eKD2'a?!W/hkfdZ4qee"JR0]jQ8D>h#_bBRF:uZY6=emh)
%HM'ER#.-P'MjF'NYSiW+>b)/DV.`O?&l4,g)HNFK+c>.JqB0gm,!pq]LB(+1XPKSn<%sN2(;b+Br(^_UFj"!FP1qRQZ>#*Lo&^qq
%!d3jgpa%+7'\m-f97Sk9S[sXYV,05VK$V8WP#\')HXWU5L'1?0,L6QRko_t0JV!9K(<ibHRt:j_^$!8t;4;H_Q=s]r4MoXoM-1/s
%Z6*Q4G^E9=/N\L=U;RBkN-B#P6/g?je8`u:E0gM+5-m.c&E(L=K'Jql.LQKJD!<5.Aqk5'M'h&D!ccA10]et$5[TZ@#9YQ<OKinc
%;Kn0i=r6Ob^*qeo*U<M=dDd$!@%C@IM`\ADrT7+BE6%#9Y?W0+"1\QX]fqIV99Q?2:0?QdOgah(B9o0po<'$bn^Ub2OI`gfh;VIF
%\5XrqE4n'3V<k2]N.FY^-$gB]RESd<S@s>.MoE=YA?PR@VpMZsV:uU/QhINpAh^RJ^3f247=['ET#!9L?o?^u9,kr@U>.G1Lr;Ig
%XB[I_.i-glpT65bP-RHTh)Q%YR[K3F!6g`SL=OpXl.5aB8bW9WVAGc[I0Ic8g5rEI.:])Zl$Y+2ePsV[Utk#c\9JAQPg_CD^EDtH
%"4t2!0-icu`X=SjaC(L5Cc1S,58Lr)HYtV\%XT/r)O#NS"/BRGG`WTJG^,haK^8N".2?71Fb5Xb=GB`_LaEKb&6q6!('Ee1KC@h%
%^dE.%Ou0f%T8fA*Q)s]+P9Vcf*_.o#^<n!6.5)h.iRB)0D7<8NDnbEJm"KfRhe`:+"s3uVMd$\pAM>fPFZo)_dD0MLM,utJ.(OaE
%)OS>$%Src8'"sYQV[j`@+5@%QGQ\`[[`g?<]60dpCu+hk9h7-J^qNsc>KP@J,gO>I+3"";GF&pcE`8(I-Li+M"ETg/)J3hQBF"H4
%$!fpOl9:e$fk<s#?lA8@Wf7KL48P<W&])QVa>?b:^T(_-<O:.+TcJJYhRL1@M^stA\&j5@"e?j3E&DIW/7q"VM3Ruq*c"Cfg8,rN
%3N[KX>oSquI:6"2QBBLHVr#_&1a`t!!6M"8HM<1NMl=AeA.6mDZ#;ZS:Ym0RH:HKO!mn.m\4a@cb!Go?c`H.n_P(q1.#b>50PJR@
%KaRMB`05Vs<=^tR,f6;J%1(c+*=\5H'V`AW7q_*>Fg$!%7D/ST("/c73q5InJs=i>(+>C'ij>*f!A"27<Tp13]:BKZ[o2K:B;]hk
%0UPq%N9P%q=JK!;E+_XsV'_[fhi$8'Lel[^/.VA%.`?+'8*rV<G-f&W\7H>eW:#0mV5m-D?YSG933#Q\K.n/Q.1nTH7*nXIasiVH
%lWl->"k0`.OT=%pQ7At&;H,;EHiVme&Uu%%#u2VEkSSXn![Iq8IU.d"3c4@8AiXJC+doWTUVL4XPi%[-1M[=VpIj0LQCg:n9RS@]
%kJ$\X^a9&FBOsbuB[>lCZB>71^W?o\%'BhL-HMfi@g*6flt4N'HN"u4n2r2amROWtP->LmF>Q$2iiYDkcq;N5`]r"?kkgknW<KHr
%AI&:bq?2^WBNbgS'2/pj`t;P]N8>m'^/m:kL,A:gdm:qk>&c<9B`^Y=R_mYu2<8/S\o1g_%N[ZbCYMP3/0XQ<a=V?WQ8n61Jg;*(
%fSoYHW-Y,q+=84t*YabZ\>?isZfXSq,ge!M_+TlG,T4[4951/eRr,>l;RLC_W:!Oj&A'FLl&&Tq,K;&&P9S@$^+H9E36upWo/kcG
%8`jRU_8uW+"pu(#6r+e*<M,L#<k7<<JlkBT4-1?p5?]VO/X"4(XU@j@-5?a,.0Q&0$W;T\>f4kCFp#%kAnMRp20c$scdY6_"(A%E
%EN3q(iAUimd\:Doa^R6<?1Sfhqq5<n>AaFX3lnm;qifac#A_?^5T:fen8hB(8>dsT,',m>lPIN=,:"kqfg>-N%%`s%+]7em!aLi(
%-/'^e)*jSQV=J8bV@BC_"JJ/0d4N6)A)i@Z85o50>00N3-1]o/@U3T&d6M)XH69\\!/i7j<?t,:E$qK7!gA^R,g/Q0K\I@0K4-=6
%4-HG[h/X@F50e=Z6>Hg%h$s]mI4V[dqetC&dF0Y];ssn.6$*&^#M$?]PAHE1Kt#iY3q/=UmO0Yfs(n^F,n35:L7Lndj]<lnFaaE:
%:*TeO6]h;s>;PQU#IXc2(BXrB2`"aP,]a,NBtD;7E(%pK%OA[Cc'8()UjWN)\bU)rcu7q!J=(1>[W&<#h!.RUdar#\l0gH-E0VKq
%"_A&hR+53C1'.IY:8(qDeU=d"3DNNs&JsBTU0G_\:\PTSj(l_QOSM:YBFdE5&CFjBh%Xp:#rOQg@51:OmLOUGmTTFkqseCn(t:79
%Ic0/6"(85!+Bop=6p=d9VIu"sSn1FrLjs#'R8\bEC!>]PjAaP8.<4R]"HNs^o_h>"T7@cn,05&+2k&>&#;ecAL_MrLR?6lp@&I,E
%g/Fp=T0Wt>HM.JBH+5!E=C)e?3EO3j0gOml`m$8u%UF47i9*&M/u`P#GBl14T(^2PY-R*sM*$fELI?]$5P&!t_q;SRLIKBm%gIQh
%BUCSpa6ZBk)T@3\HKTWo^ns`#X;7-R?@e58_bu)X(Ai&>q;[id3CU'dbo5$-`4-]TnuIrNg#A96&a;+0cJMdme06EA/e+8CdFZpq
%LM/oI%WH;%0Y7pm%R_D`oN(-=dl0U27B@!-UI#nbF3#7=P;H,^-1pdo3=bbW@_W=JZ<Sig!Tk(\QP4;]"E[?ToP:"qMSfT",bjb1
%'=tstJV0!AT)CT3\?=(p@ZVa@Ae/]kEIL.a7!mc-n6I2uV3rE([=hm]HjbR0O!\JlcXr(7WU%E8Dtdt2UCWB5*.p(!DOlbbCH$?;
%+<_0EFsD_#NKlaJs*8jPPdDM[C@)EAP1CC>s%E'@R36YK#*&/CG69OD_r?3Q3q`*=VG><BU1+nc8>a.`p9A40Z'OfA/pFhrEZJ\f
%=l+YsGu\SMqfH@s;jL5f'Zu^B#5X;ih.[:#C['&:dSm-hdnqj\"S>.pH'$:V#Mkj=Ou7\HZ\"@\IX:K$a(4W#,O&d>dKt0aGdH"6
%W--:>Js2ghXN95N#>k:?RY-L\A^oANCXtGMK-ppm3N[U*aZ9+VlW<5?goWC?c+RY]e=QLCL/lS2kA76'O7Te@V'uFIR"DjrZgu8f
%"XfeLq`n'G%oYAR1Ta]f8nti9U4:D]Ck#6H\_)$:(ku&;q*<Uj9/RQ2D2+]$+%BIH)LbasDT/iqTai/%_H"%95a-"9&=#11Z]ac&
%VkK?#g2&^&Yaio=>&e>^r;8t<iSMe!2#r:])'%tr+7GZVr%dG^IHPLQ+9Qd$3JXB"A,75lpL*:ZDI03Vq3;C`b[YW*XU+:,]oOq6
%5UBd:_mlUnH2n5b44B1n`>h<elT4'g!84C-]#A!cD_c?cg+TQfPMu/.J,nn`i\2a9;>-4+kND?>Op/\r<DdhKH"p*\r3"Pr])-hT
%=sf0abuI)SkQM8qKlesje%hSYVVu$9W5)$cWS?Km/B':RgZk$l!15^Z=seI3UR:q5+W"m*@6BK5.=C$=\grjK46DLGYP0luY]=*5
%C^c0<+j/_;CM8Kd\`HT?"T3sm_#dJG(oDQN^<_Mo_aJ*6PQtIed9YG()-50ALbc8A%8H,")S2J(9B,%,[%]o/E(f/bL:/Lu>mt'7
%fRl#Ce-^>Mk$6cHO0YdpMp;qH,FqlohQsFB83/K-"4=?8j]+mAV'njR_9Enh8,t^oFZ+t)IEQepX&F!ilpZa5W6>6'oG8c7:Hb#@
%Vmck>f+QMn(N(Bp/M&5F$d9I2U44j?]"Io+bk`V[#8^\1.?HJC>u^3"9R;0"eTKVV9N6LeK+C^[G,F=[Di^(Ao^F^!R;!$P<_HcH
%j>0BiF+Tj)AZ]r'#.Fb]#@ar:%bZG)9:HRs]fsT5KG`@e<(Ebl(gTeC5dMIt(fS@@$b14X(aWe->L?-kGE?!#F:B?@o.]>l;F?A'
%=65'jT:%XA>5$pB]:50"=2fK(7Lqt\.HJehXU9qlS&KMl@PE*:1+.@sLB88?Ym*2Q?$HLa9iEJCYrl>Ur3n'W(@n=(-=AT\Gn*a=
%&LC+h(`de]E*QBVRjjnW;Pjh6-LTABn?h0,gcG\,?6(bEBijV7<Ch(?9&i\8`$nHZChK6Xif9\jrCBbCdu*"e@Ru@H4-,8M58Afe
%1uM:en3-H\-@.s973QJOG@Y=Cg">q3mp17lRJ^CU:/eAJYW[+@</))<lRe=:1QCYM'/IAN9&@>Hfl5^/HK_BZ#+7([o)>si"E(er
%!e4Ius4=0"U-NSnLZlp1#$K\laYgsK7[r55FD*GN\l1&h%RMO=ki<Q@Gpln+[kYrBQ5WE?Y<0it&>qaqg==hte0'O:mj'A6@9=>G
%Q7Fe!,C+nrdH)&JA[H%pj$`5[HMQ*K+nU5t)Ds>meBh[Scn<kZUdp^*j_"A1hi/PC%r,c7C8a4mToAX;ao)-j2T=#lP9NGum]s3`
%pPNBQVZ+sBB0&oA@s1e,@d:g*[1MYDrdNo3p'ar@l*4Lg`+HL3_Rh]fiFYU9d[rI2rgL0G/X)"8\].\GaHgP`R&E>1:iQ%LRRDn2
%`Tp:QF%uUJ;*Yi`QJcMm>DfSLHsA8&k\<sOH.thKra-PXDM`]h'aLWFHJX6N@8u5DY>GSJKCWnWkg&=g@OrCN?4GR\qm)jHAbl!(
%(S-.@BaF)'*u8AB;kCqg(aF@hoqX2Mm@s<m,"u>CXrJKKVXI7$24-6H**GXLH/PTlh:]-XHg)?=S`d>3IGor7SQEic8?Y]a[C\F9
%6r/6+R"$8)912au?BuOclmeosp6-uKmE/fh:CHMUp%7Ri_lp+Kk/2J4i5DHr[i;]`*o4IX!q;E/]#ia=`K8pMKJDL$r[Tt?W1%8?
%X\k3_kJL74WK^H\O-/&+.341YP)XVP/3c*..n*>_>#&D&-($0e_s0plTW8A]"^a^TO7aXa].EN%3lq2$h#2'MqW`I[i`5<7]R8?E
%R#o,Xj;uEARk`M$g!m0o%@/hkq\dfpdG,<"g$Sc&=QJ6^,a%sH&ile4OiT,r$$B=3aGUq.`Zuong#l*&Z1*;k-P[pfWCN*b3EKWH
%g7<ejpJg%H[q)#PGm8cRAb?/5o=h*Ei4Rl1"T#jgBs%HqbiuVd<a'\o,FN;m[UoiU!*0gd3`C*An,C5kjNB[J\%(g9J_PA;,`K5s
%U#&PGl+;rilF38h++MOln2'2p=Jl((VD/&%OY5[<@o]!>q"aGu+ZB/h5q/4E!M!`#S=_guqff*0Q6-WpDQ`;HIU+MTU7ULHSdT_a
%O'et=EID[mX>sI(NbEeOpc-;ac7tR,:s42RjqP25NpN:r5N`m2ALQd_EB49"hF@CMcb_8+qr@\e;;03V>0Go6X"%UDHe?!ZYhr?F
%IJb$U?1tj)j:BX7G(!VnRqaDQ[(K=Dq4-=`(G/`9ag[3?2'$-<'Rkls4i,[dK`=]?p*q`p_Fd!rdO0\El_E8*X5*E0%/lA[@(&"p
%!6s=N4e&T%$hsO*,6+67W4HSsq=su!L6uN`bS2IHMl0Fi>KD_3)X[O[9f*O&e21#"1[&KVDUIh,9U%))IQ$iWW0;I!qC1p"aPO]]
%hu0&YJ#3OsCn`69BL,=\q+FA@du"Ji1T"bbeW"r&:WZknD-;.%?o;,I]!hp@lu'nRqUq/,B5K#6i(P4tZ4&*9i_3JP1VC_&J".sN
%CF8.pE&j%9Qe]iRi]5COQYb%QWH9JYY5"tPNHJjEY5#4WD0Df-hAEc+^KB*<>8F\PQbg9Ic'M]-"_E*o[]e?P99T4sV4[SW$X3PR
%hHr#8Q[o.GE.L$D?j]#@rLjdVWAr\5MVNiqGIK]f"tJ"`Z^-i9jo*8FD0\<\Y<U",G%D"d)GFe=lGE6U=_MFmm`O%K(!Z[`O[#AT
%3>Q9G1,K4Oc*9bhb2S$+33s\SP2uLI+SD6sY[<TcI/HErStK>R$YDHUZB[%,-n9Is4%bhY7gNLe%SX-B1GCj);kpHh[VL6!^hrDZ
%<D$6D4,WOXYbJF`FPd8Nl<1Ihm1D-fiXcF/;iPBMdKA(K9Q$:*:eRD09W+=.=%d/V9]2@2?>D1G9H!^N>$5L1+f:a`#-rKZoMN$:
%7]JSH-?c-HBt!I]^'2o&8I(bgK+kM/8O$Ia'PAcQMXYkc7F'-!M.$-oXNLtd;_)TpCsK--)u9)jbhP)X:+M2qO>l=GgdM,)9BaX!
%\/0Usc-)Bl]:f!qN8W<C`8M*=pt,AqQ&2S)EMPL`.4o(IW(.&>Q;oh>1C^QZIjO;?=T&9gS_HFfKb#`*G&?Kom^.Tm3T7ta=:lP@
%1l.PLYom#q9a#!1?>.em&D^F3\J<$McGH'LHLH?7N*<tp;3>XsoT-2tQ+ee@\L=8aY.49`VhG*+O&Y;&rjN\^?FC)QelK>n-Hl%N
%-"OWWYSW&^F`t#M$eZ_(fp'tP[:_P4L]VM%`ns1=KikUE5#t"m/BFo5]ZobcZ*rgI0^k6O2_F6uMe%%TP^)p_II/<oZ#7]<rH,LI
%[jLB`VsQG#/QW)5Gte9EXU="4Y7%^dH=`c>C2J@ih:&F"219LnYiTpVUc!R@NF2m\?7"KVpNnHS^\u^OiT8+3fO"R#O*Bl2hu8#H
%MIgK^49.DW?898"B7-p?T`7VdQE!MFiGu93-_]!?iE^)(Bfa\6kfQ2#KW<dTA#Y>U,);`_Qa;!q9)C;9-2%<s=d)B?&PLB:%s^Gl
%hg7`f=hQu_0?W%>V6$L9Fre4cUHD8+JRVY1$OnK.CK)hfr=N6l8/ibOMEnU/JaE*/F?FnG4fb;4j:Mc)2l%2@PNq2PX`K*G3=5&s
%Sbr7bGO?9YF6B(4g7WM%j#R).1/%1$RIZkeq*A?L3IULhid$puHHI$eVj(M#St6TpcUk4)\ZY+[fSd,i5F>`':;VE+l<`WET$i)6
%WPPbU`*[Fs`G#O$]B&5uSDBAnI-EM\Sa2L>IH@;tSb]V0J&r(#cj+G&K4VdlQ%+2TTeB^=ZU]Ibg92.KcY<!KbkfN\qfA5*HRf&,
%`rB%IJ@Tp?ZGs\^'#D7\_,Sar:=O(@K=CAu*XX1:72-NF(?UbgX0N3/g(#p\C8,.=W*1]<f1c$EEl04.fpuZ^XHTo`=5><-9;^96
%kF)]aM`Mu%\WF@ta903Jm!bO3e4WU2h;LNm`$`n,B/nOpHoiZ,)r:1n97Kq\B"$aW9`7V>^rgRLq\Brm)Q"]=j^(GiRHf3_&Ur"D
%^IZE7g%t&-C,Y]%\Tr)hR?DW,pn[93>!=/o[q8FYc`Q:qJo9dEL)0]G'WmZsajFl"N$QZ6ccOUO3_RqTT9H05d*G;5D#0)ac"6F8
%<6_:9ajk2f9@ecgPHD7(T9??o5<U5uZftC$2Hr?mA#nim;RSH27aA`]oh-QI24\8p_9Y[,CAEh$XU0>Hib$[&A8X!EVkia#VgOW^
%c%]"chJE"Xm*/Jm3U*#-T9-g1$;V<0GclOi%,RF:-\['Ah/dU]C\OnUcDFCZiiV=KdWfR(S35XH4tDc)VU*EGD#0AqhHGB">co/4
%-(2+(;mL[aq5e\`Q26_mhDWE<')Kr995nA#aF,(nm$T6CQ91Iu]HD>P!pLopF9[1BLm=CA+S5fCbbsQ&PV%%O"?3Me*.?/NjW(,*
%I,omC0X<73KmolJqmEJ3Yo\=SlML5fjUW]KY311-i:h^`ADB&q^/OX]ej(4"4IEKQZ#fq+ikTX!q3uA6OauMP:g0MZX@#*ib\#o6
%Z0(`6C4%(I<oshI*sUj0FB3m7?jT:GYlf>9,K)0='U]t45O=nBrp!"5&7:SJ(Bhq)U3M)?3m2N58)1mai9_MP]?6Um$]0;$6XnjP
%L(P[DbKuPG3Y9ho>/+MVc<UVC0'b=>AXr4cSsL1c=,!F4imOk?e8q>K\X<&qk4PQ)p09ZU;2+C++mumCpS+JX>kiXu%_f"f5*m1[
%bE:[+FC1rM>qNs*aR:)a]T+&I"W>X;aH,>GkHO)/oQ_;t4U4m2_:Heslm[%'%e'BQ;;aT>Hk%QsK8\>9aE*mB17\0`ih2S'mXdl+
%(cb$-N6MGK]oi\:P#n%RXduDD79X/40gNl"KLQB._CAVri@&IsO<e9b5REHYc\:9k;QauM,c:*7BqYdL]oM1j^usKPIpkQ.\&^]T
%U2N`**afHUDBP-X?oREZ)FX?&Q`m7D'+`W^8L4L=\RB`h=<="bO*`NOK!dDl1'=B5Ar''e::@D#O/8[#>I`=9>#%@qd+BTrUn2Oc
%@e!SX^9cne:f>.`OQ'Be^3548)O!!\\Ki>aXpBfS8d7#Jk/L=X.=R-,IItM_X)CH+RgF[&_/?./btPesTl9)l/Z=4Z!oZ4^$e0#P
%0P0#a<a=2+EpLp`$2Vpq_/$RE*)ZPTmdqQk\r'm$#.i+MYd^"QAQ7YEG]=44>fK(TiKEqsb%5J,[U?dl6'X;Bl]:-@&:1AA/Z.-K
%6A@pp`d(Xb&"EJB/IpoF'i%(biP##/R?u6C6S(Z"K:`]1g%$RHZaG0Yct(=t6qt(ZK["GL>DemZ?4!-R^Kfi!]1F45n4i7+p_gp>
%nV`tR52#QgnZt*$;?1:Ok<r-)I7=M(!dRBHA]s6>;)Wht'\+P!KMfV4M5+n`S3Yes4tDerku0pJRQ`$`ZKZF^WS[K9BPPHWKQ)6Q
%)%V5:dfQP<4scq<NBJS`C=PKoVQ/koJuU`^';DMpN+[fD[X:hTeH,B.^riP#M6(OiSC#Cti[M.?[<tkkD(V@o?!GM8K\(.VHWkf.
%e)pj9G5"!/Q;*tb@U%;o`RqWiT+tmd->WQ[k(4-/is.,Y6Y=Y&8jn],omJ=7M5M@<q4j1-J$Lc.&5i$##msO1[QO_B7)b2r?W=Ll
%BO95%FGmZ.i4S%O5(s7[C$18)/_]k>0XY$q]gC\&)c7+H!AbH%[;&qZ%tTFGTRjOO?=#bl0*oQ*D-;)dl?Pp*#]h:kU*e5'V\?b;
%<Q9GL&96_=<<0U?^AQj2:C!D]-p$?b0XP53!FcdR4;"//3^`[1-08fA5W]77e&u5pTqh!/ZS$*3_7bdlN2g7Pi?[2;K47lE#GE%m
%3<+Ul%[U\2iUOunNUF.o*/EDP$I%rHW,8i8hrKEo1\CQb(*IL(a+UrOBEP2S^W_Z7D[.bDJ+f5eJe]Wp%j>_q7;X?:g9OT6r[Z^r
%9\2O4Bn9&RMK<ZKlXo&gOmW]7Dd^0ToWhR_>.I2rk2H-REbsW`F<:3%1UCPKe[DY$s)9=1]P]IJY>Rdm`:BeHZuA9Q3<P6n[a?TV
%93h]IUpgT)qanP#0Tsdt5E))+,(]0i2lEFn(LsR(aK&k!paZKe/*RAeN;J^8',u`JB81eaN)P41Ia6ljGp9$NFX,3q3VIGEX*krr
%7$Si5"U-=Yer!O"qXXN$#LbWh/`6NOGO)_^r:YSdb1)'oe).=Kr/6L1FrZH%"):%&Z5-/8[5pJq@"2ThMqShDlod3SRR@sR5pU/!
%HR9)M37J_&8/;*un9%'!F%eFOA123R$%c\8-l@WeMh48[]5Cu^*<3u*"+C0D>O1B`j/K'i#JU%V_k6l%`L$PmeFQ!Ua+`MdSC3*(
%NXM\bmZV,S8[[l;o&fT<=.@EL:QHrr5ABZHf.hT"G[)dqQK8lbmq5tMrK8UI\<d)@/T7fLbH]sJQXQE'&a[]kBEMV#\$kg*,Aq:1
%)Y:\OSf;ff4cT?VoB+Hjo]S,9NBc@aBAgVCJ+BUVr>73B^M]U7D<l_&f0kIG9>?<X)1m0u[dik<a/7Kd%.MV4,-QB`^,@l'*\8Q_
%9G=Ol3g4(#V.UMh5"4';\nI7Pm)_&d.#^Q*I)=Y/\VJ783?4LWkIBkfjWF1JU5fGB.[Ie6o$"Q-pgjbs.%k`qa>`l&O,Jhrj`-]]
%j/BFb-o:<]X[Hg-NUc\]SY)Q-HEcoh"lb,M5XAmH/J8[&bL5M!T2@@F6&dWBI(t&Z4o)T*"-dMI<.?[45_\#q\O#cH]te=2P^$.E
%iIg=eo;-n!CB)5I@l[Z,=2P2h2.4Vj&HA:2`RV2dd:2&+XEj#qNu?fZ*'ekkI0fM+Bb6V,3FD;`a+H/96R)Pgb^>Ej!p>2.XneiR
%1V$:HCd<`hG9EI6r\*<X^g2U"eAFjC1J$/dB<UQG_qZ+$Nq_rM@i9a9]RNl\O/EGK]bO7;o]Y-/(#Q0slfH/r*'`b1`ufd##NP2I
%Ikk'RB7BLOL.nLYLc?[9'IBfuLJ>0>"f-4p=#_:%=XK4[(s%me$4D#BM$qZY4fr_RiaH6hD:`c)+P1Ad5!bmX^"j;MUW+&PltXZ9
%d$^,D_k7iQOpMig4JF/6T9q$sj8OY&1*?f:N<f'!]WWZ/q72s3chcSne'Ir&4S8H1f(OR`ZQE!;T<qOAAb!B1[2EV!&"hmIcjdrg
%gY[m9NujuTL$saHbpsm55>"iZQ@in,-a]r!nOYFhDD"iLOY7/\);+G]9/Oe?"MQUrj8%,=7Yc.W8%>G1eV1noY1t6C=k4AGn1RH5
%DtU*`FC5$PHJZ!#/,B4O5$6FTB79@2RJqNMmc$=PA2&H$4=mrR1rJ/I\Spef0YdIOhZm_0kW.AWB32M:$qeQd!+\?>FpP;\<eIV_
%*m8!MSH!8t0K947oHX59rerfkhhZ28V[2cP$fI.\YjD3ni\LOj-Z6X"59r#>0!)Oc\tqXgo)1?L5Z;1IWW$BK!6aht'JYZa='jQe
%+G0O<rr:D4(m`P[(AdkVQIhJ%k>6>h`UX'+3U40BqXeE4IG$2gcrJ+[&"C.R_1unZT>.Ve\t=04(V["8p4)`@I\B:$ZWG_(cu!@M
%LYZ2Be%c?@G3C6cb_%SHal1hfbS't$n7i:a'$j@jEZ?1iTV(d#l\7kSVRF.i#h)1Xo#CpQ7?1&pLnF<3qi;onmJ1FX$U[$<e34MD
%EPjj6G!VnN=:B%BfP`1(P"78I`?1&,#Z_P9LBE3uD;ne1+KFg2.eVbAenG*U2tM-@,m@f+MiSGjC\aL6=JM3(0>Hq!?fc,g(;bOM
%?&3,&WlNSsRUSC1r9=jt;)]t9F'gl!*JL)M7'#X,qHRDd:NZA<^SP7ZIZ<'%\:Vc,WE'mJ=BtHq^]$b3iV7q5E^.QMNDmRjXS!,U
%T%fV"c[7j6S]X6ogdgQg0*@$I,[dK(hoQX[WZ$uILXVqafCPi65HlE2'8g_#O0Z`U2h1[b[4:<iH9A.lj5G7")Z<6gLHb"e1GW\n
%+7_.#D8-n1IG^srKSG]e"M\?TO!jVc(g.h:o;V@BQdfS\9qVDph%TAsI#R9#EgL#0_0@QPp;]eSrmrr74qg+UMI)A!"Wp45iQKW\
%i90l@i%H.fep9?2(OR&QiU]%'(XJ0'c`Bb<lj*&n/sBkUIUJQp]/Dk9&Uo/REpP[Q0@*]ms6Ioah]+jL\W!0X0)<`!]^44*hq$qq
%CEn:4qoeDUSjNB'r8q)\@lR`-Nr*jfO9d%QA.T+UWVK7NI$c<e.KfNj6*Xspb(:'u=JNbI-4f,4p"t/+m_AuJ??UV>,Q.,&T?aM3
%jFB!cS*C!6:KXCd!W<F*qc=3ud#%(0*oZF9^0QoJ$iB,8Kq1O"5in?8`hJUPgXI\Maj@L)3co:b_AXGdYZSK;f43lB*Ot$o&R'Bf
%q>A4[m9Il=\GDd:7g,/%D;K-Jf'$ZbItE"n3Y3*C\XG3;Y"SkYXlD-aU1:s`-`k^b$0/`8<j0Q6Y<"Asf=>12@eoqI/`\s/0jPVl
%lnQ"NA+'0HQoXs%JtcF(/5lR`gq:*@Qe$43G#GDQJ7-kk;1o&F=ZDmpFEgC"o$B%9Z_AJB4+4r[\D+.YZJuDoMQT/R,$;MFj+@!=
%@IW"9f_7FU6pub';"ijH#AE>;J0%uZ+*W+Zgm]#pJ)0>s5'.b=o,Vc(i%)D<'-*PB7V;!_56:@[0C(J_fd6Of-5PYC,r\<pjsfLi
%KJqAMJg3H8<Z(%,GU,1(KWH9d4'5m,8(LNKJp_`BY1@q'<.bk6DC2]U(Z3NK^k/18.7Aj]kPPCE+@D2.KQt@Kn(j7KPN^l[_B5)R
%S%f2R?&4SX"=3Y`<V_j;mr8,#p8Wh9J*G__'(RN^hB8C-CmoYcn:i.0!58(%GZ<Y(qu@ENB;BlBK%f57'^76V'k_;8o,86UHAEcP
%^T6-A16a7_-I@jSbsU?9jUX:#',MC7Ku[h;VrRt1!h?2b*RrD5kr!X$Su2a3S/7AKg/d:l%>#`&F8V(X&9=]SKrR4gmXGKOIN-[r
%),i16Zm?,gf7H;TQ+%Q;MO'n;=]YVlJ#!7a1gQ2HQ+M**UGBF_'(&q,-QJec[g',)D?2<+&#$UJ9088GD1dQOmGtf3No&2;N$pGF
%kdo"8O_Q0kgOj05hD-c=A2^[QFsmH'+&[FI$2Y_V:@oM=JIkKk4adMb#I%pLE#Rm!E*.%_S<[i777u:h"nKepA8P+!U<Xf&EV;(P
%m3R'`.Q1ie+"d6H/W5Q\\>)o@207a:pctMSc;.gT*L&GTnb?/8=K&/eQSh,o<(glAMRqiD).\rnUR''m_];MLC6.sG^/0u!H%5A<
%S5O:+!$$DWXF8[R7p7qmVSD7KE7sg8"H5=5i&'E\4=)\p8iP!'3?b]_eaNBH%nrH]!n-!)=)G6n,g&^bc^Z(08=oFd)J)FrY%UWu
%%AI\n8l%%F6AHq!Ul[#%@he_h<;9pM_A[!uo=\X,E,:#QYG'i,8)`hn9W7KnL\idE+d^A49IDm8pjBps7A59I:V_uAoeG`sa2OXc
%[/1A29SuL;-`k^O<6G3s1IJoaNl,_,:sa3sbW?'0l:0;jYGuLJZq\0%dF.V2Z.:`D9=]XXgt;&tKUhp:-eX$1o245@4>"MQ*Tj-d
%cgHfSPVT\"3+R^P&bUS-:=T#)W0\l"8TbQkTk>o5&DUbPB]i/>CUjf;K*;IBOM5[W"@Bb*;e=ftZE%M1_es<3iYDj^Sqnn6atTY6
%`]Tpfl'<d#GPq@"MRY=-e-iL>94gH0&^/@#bP)nRIehdRMg9:0r<A>>FXcuO)']?aIoo[g!p.gCT?9b@-DXhVGe=WRL;5n<bG!gr
%V-8_,nIdHcfN@jZ+sNDG7KEpP@S*l8qjVQ+[O2t>"hj/WI^;3o\fODr]#;JLHG3GC?Mi;a<t";9f4ZRrOHVloqOm1GOq1)d.h7AP
%X/5!hr34,fF)c%T"RZ1Fq'RC=Q44r%fUF]`TtE\'msAk0Q/RC$<@*q]b!Hu!@^MJ<S(F_r)N`^MH@NSO$^)N_'#(T&0cRL_X?JR3
%d+XX9B]$H!A9T4R_#^ioM4#4NG<0Td$do6i`3!ZN.RisH@Lq2:OZTkU';?k\X,pDaXZt+P4_l)f#^oTOVkU%mWr5if.J1#W[5]Yb
%np;u=Pu3&7m%NC.LkDM2+"]Rq-nE#?O1#o\&O<o-LJ32k*,Abi6*NY:b`H<I>T%*%XIR]BVaK[b6lbs/IY^4uZ\CS;3'=\-o]K];
%[k?kjC2$0U&qk<k)rY,4]f6:5&0^ds\9S7*1'FCriJN=s!n/7Z-IhQHjdI^AjAfP\<PS[j6GLj?4EECUj@<>^!t`)7f4?gWZd=u'
%j+f1k+XlqiW8b@o-X#DfJYaZ%mkThrg=e]>,-!k5O?N%"495jA-m?TC=c,D@9H/XYk4[M9p<ofCfLjqBC[4r?#M2StQLL^uA+U=`
%X_GCtm7-YXZS?HT\@;.5=b=>q*Rr+@a1\Zc(4VGi6*bs$dt^ShoPO!=(:jQ_K4fmf`]G;nlPa(FQc2[^L6Cu%CCH]eoaH/eANlb^
%Wn*XgdP^q&3a?s?,so7ONrqF,iTuu+h_4kR^E3,eLVUEaDT"Q_nUpBU3NUW5PP["5Qf8(TZS.@h!2?TB69Z7F4HU>jSKiLLZ\P'L
%[M_!TQ:'G8Rdtm)[[%`*#1\&<5b*Kn0<h%Aa:8].A;E=3e30Y\?YQAW)?cd\gXe'<F0E%,mVT3`j(Rna9JfG'B>"\`B9cs1)F/Sk
%j0Gqu@5$*^\$J<o1<e5AbLtA:\sNGArE$0p+?$]OgZ!b;o2T\5K0Vg`-\PHXSA5"B]4go:U21K2K21m`%:e2iZ!8F$/Me:9K!qd%
%pd8V1ipdbS?CUg`'l@R9^WWT]%_%\e;`*1pF]>X&YJXi5pWLCamZ\/Jg(($XS*Y;"-(L5B5ZnckVM3#!eV)'c%$k4Q1R:J\+45/T
%nZi^HI>e@VbC%c"mqZWb)bS=[3qiOC,L0)5@&poe&,u-K]-[OXEX1(Pk+Q"SGJDsHn3NZ?kDc%B53EOWd%<8db5Q;Jkq-bL2sWTs
%3[1)i4[)I`qRE9(S@(/4+`X6c^hhS4"$hutI(ph/X'NH<>-pT\!?+d?.AUir";F_M&!53f*t[0NpK&"_`ude"%er$1:B@H[*?\D&
%AD7c7)_*>'L<V[MYpi78:Wl-cY_MJuO;.GFkn+%EaEk`5:,KAjQTqRqfgc=UlL6)n:i\m=S'B2sq4UOn6Jb0t=U?q/VZ%`Am&!WN
%.)Hkt_k**W^#*`>n%.B,d.ZQrK<K>/#fTJ&ZC(b<Q.MHsHND:5M<J8fL@EpT7o2>mjNaW#s*ukA0ScJoq]XFJ1YiTo14\)<RenM>
%YSY]HAn0$rh%J?I9nh4+Z$rct8,Ln%k=Paa[%2SuMaQUI4:b(K%cq#l4jL+f,\+0JJ-fUF&JKY\.BRodI#/5@K^tFhf:Jqip5%j+
%BTn'J0SNfh1_WUkXF4rT;#=OfN2U/nND)S_F`@$CDEf6_jd`c(qdJ<\]qhdI_HeVXO)K"".)90FHq+Rr,P'dd[UFC6j@]"SLp[u"
%/QXVj[n2hPTQa?;R?8-'7ct;;V6+kl5"\.p\o*Q>WHtnkfP=X#C/$XSX>gEcEd0k#P^2H4+!u'd&ZW:Y<W7u]2<>.`e*ION)KUD_
%&r!17k8V?+^\o97:e7I2(+E$Ep-+Hth2PZ&Q;rZ&fll[$lT>ida[IuH^"=_)FhG,Cm,-Ncg(L6?LkER7[9Ul,XZAh,m>SRJdr:Wl
%"0cJ?RVk)mCeql*JH\mHp1?KmCK[t3)]'.*oo@*W^+=/]Rf\8Eo6)V;4OGmmN>'Xk6XJR(7a4pA"u>nj5#]Rk;\GeXY)aLML'*T6
%a2,P3H%jBqo-Xm/*Bo!Bq>)B;&U`rMOEZ*WZ`@A\-:q0<Knn+_0!!fG&!']fCjMgYb12tXT%1EtE&jYY8/uP1,f"VA]EI+LFIq?c
%iG(buFCu06BJF*VpFC$_-9\7^>SSr4!6Nmu6lt1u_8,m'm_D415`L_mCcO<9/0Ig!GWM(29UE*G(#D#H9pZWc>q^."oWsWS5Pn:-
%dbm]NXrY(@cZ=#lXPn]R0Z*_18]nX)S"6?Qm#ZrTqKtBc:ueB_f0;X82!*]NCnLT>do5T9LX$M8WQM1-K:$t'qLOCLh"Z6#<Hp(o
%Bp[Va&ZQRY>;";,0gl6\F^<8:PB!?dpDC:cI(t's:#F8c)s-eQA.$Q5Cdc;[T2/Ra??I^@pW:)&&&?Q`3hlFq].^suHfs+1$%eXd
%lO]`XQf!79!(O;'?3Z02JO@*[%ZBF<qr!i_kaot$S\Lr5D?pc#O=LUaE6EkR`ON*J2gGqlq!q-6kmu0MAl-W4lX1Z/kTYG"@&<-r
%g<0nNB4hRpKbN17I1K'9=6M?D%d<]UF-mF8IQ@2tfdR]>F1HVjrA\WimR,9l@hNnXYY)7ZDg+uE[h/L_p[$RrMP#+="Zl(C!UY(A
%!r$F%3A-SjbNI]6U=;'hj3R!DD3XnIZQo@(:UdB;5_lCQLRGhk@D$ng#Wn#<(a/#1G7QJ='S#pa2L"P6pE5kiM</pT+</2&^NfK0
%jO?A8q$bVqqclC]:8U=IeFg.HofUN:]7([`pCrDK#A(8ZK@ok7R5orVIf3XXe67Um#B&tf04OZ0?c2Ph'N&9LQQICtD0Ft4"%Th;
%T&KN3QIsI$g\$3]>JHDErEp(N[GONfIZ=cuQg4m?Hep?eJNu$aIJ@Uh9Uk-e"/.\.$a<m]3b58H\,0;eTYiZ/T!1\>1ESL%p?<n@
%d.>b"+lcG#]7Il!5I=dmrA#3NeLuRNqu<`0m"Yj^a=OaHs+sGgPueZ4D[h.`NO4l1`p>,B(b5mJG-1g$7tU2kZg[(VYrGR(@#)aR
%1?UA0,a[$b.XPOA-gFYh#EPoBbHT834P5#`o:>qk9br(ohQ-U:eN(^JZ''FUN66'p_4('a2^@Tfg=e0E,d1\Ind"d2c<D;NDD(WY
%nL'F/HXEGp7/J!VS+sh>/HRZE_6>[[60D?gH_<IhiM[)?.YpF+2*P'tD32DOg&#t16*!EL?NN"hdZn$E,q,/ml'<^hIT[X2rI2:f
%7cQY7m9X1^;R00.8CBWJK*8U&!<m""M[7^]:]P1dD#-^<GZRfoMiJ_<`P/?5B4]=j.K'TjcMWG"\g\d*+/dP(4>ML0Qf[0l:;rB3
%Dl`h1PeT7pSO]8c=@9\^On[%l#lB'.:`@:RpF<fSE<3m[9RZ]ip>75O7WhoX5=F$<gX<'(_kQajQ.E3)qQO)`^Rt^@=?E"M0=QTu
%as2#"m3`5RO,a,+l99S#41m;bYX@l[mp5]AE6In!H0#V6\>#ofQ#sjIU>#E[J:`\[4-J/L]8fKT[c6&if=g;??=]3W8r@/&dMQN(
%\K-@d%oEV,D\[V(;RWFVHXST#ma=B,@XUpQ_JOteQ*sVaK5^g%aY*O+S+2(!>-Sm*F?USM!rZ&O:`S"^%eUQYVr4l,TW%I'CDn<7
%.V!^q5:i[Rl>`X21MLr)G/*i*8*o63U4_<\1"U'_8]P+1n,%@*A2D#+-\"O.6pXYl8p(#?EG?HUr^A)j<Sp;VVobL!U1rL<P,Y!H
%6IgL+:;0"P)F6L"o7mK2X4fb28UH!50,d\'$Zn%Jghu9`b7G/id%NhjYO:u!CbubE7Y+@YQ>W(&>6sJT4r'N?/(@W0<?F@O_r>-m
%h\S?d`3imYB8=SGd(U/d1'.,SkbqN$HKimg8!Kc@fs,[%$`mSk(p:ag?qW.#p%U=UoU,5Q:3Z3pV,2fRFQqUIaZ-`f!1hk`!;eYo
%T%:@o?V=kY\..-);TEXqO%=0D?2W8YDqbhU;Z".C56M/8*KM_!N:VMQL7!qTD]io7@ESF)SEG(NL6.F9(Mh<a+&QlB#Y]U=j#2R(
%FR5*!)^7_%l^Li-Yi'!ZX%'_eR/(/(Z3o@j"dE<ZQPDI<!"GE:5l2m-;7SIMX`Ful9o/5nFt5bnV_0B:(H*[X>Ij,f%a4:[>rW7!
%hhCYMYBD)Q,Un]C)X!h9a,?Y2[>_iW`9ekJR=K)9m!u*?f7Hb>HpU$^;D6Ep8N<?H7e(o#oT"XZc_03uL)Oh-Dth;X,]@i"a&]Ij
%pk459U$n>#o><&@q]Y_+)4PgE_*>*$7fjOtr44OlP6m]=68KJrA7S-$r8i-*#L;hG!OC=kCWnl/&5=L+Ucg<YTea>]Lf)NFkNlj!
%(\C5BT;o;sfGm+Fe:1_#PZYouc#>%n9h-E.]U0T)*Mk\KaNWCiEqB)gV\1fGdn[tjCNf')#1<7lVa9oGN(Z1fg*&@;\p+/Cr.sBI
%e(;=+<TgSci`6P$q\aPuTo^3\BaDU?d4nJtI)6em_Y7,hrPL%j+Q)=XHc*@Q;=VP;%bVlJ-`k]Kkh_Ajo`I$;Ko.Vu1=^jEYs=?X
%7R+je&QtiF([N#(7Q&5Z(%s,F/FFe"""c\6\PaE,6'XuTr1kL!&.3ZpW\<q70s;aBINplXd:Zrg3m"q]X)]H.:IEA"diW42jA15r
%H8L,EnB^pKa4X'#Du>]>b=CEO#QPSechHAOR$jX]dAbaZ"5d-h]R2@:q<9gk+1gAurKsQfIb*KTN#XF!TjaLu%__ghqo,c<F8G;h
%rVjRFrT8V/p(*cZ2;ju(o/H^=g]-FI^\Pq=J,>".r67J(o5FWi[kGMlrU5mCr3u^$rR8qSr8G-br5X<`_f&o]q7lsYrsJshNX"Bg
%o:Q$*s7)#^q-Rmt)Ct~>
%AI9_PrivateDataEnd
